{"input":{"ourVersion":"1.63.2","ourProductDate":"2021-12-15T09:39:46.686Z","commit":"899d46d82c4c95423fb7e10e68eba52050e30ba3","locale":"fr","devMode":false,"absoluteFolderPath":"/snap/code/85/usr/share/code/resources/app/extensions","isBuiltin":true,"isUnderDevelopment":false,"translations":{"vscode":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/main.i18n.json","vscode.bat":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/bat.i18n.json","vscode.clojure":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/clojure.i18n.json","vscode.coffeescript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/coffeescript.i18n.json","vscode.configuration-editing":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/configuration-editing.i18n.json","vscode.cpp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/cpp.i18n.json","vscode.csharp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/csharp.i18n.json","vscode.css-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/css-language-features.i18n.json","vscode.css":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/css.i18n.json","vscode.dart":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/dart.i18n.json","vscode.debug-auto-launch":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/debug-auto-launch.i18n.json","vscode.debug-server-ready":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/debug-server-ready.i18n.json","vscode.diff":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/diff.i18n.json","vscode.docker":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/docker.i18n.json","vscode.emmet":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/emmet.i18n.json","vscode.extension-editing":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/extension-editing.i18n.json","vscode.fsharp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/fsharp.i18n.json","vscode.git-base":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/git-base.i18n.json","vscode.git-ui":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/git-ui.i18n.json","vscode.git":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/git.i18n.json","vscode.github-authentication":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/github-authentication.i18n.json","vscode.github-browser":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/github-browser.i18n.json","vscode.github":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/github.i18n.json","vscode.go":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/go.i18n.json","vscode.groovy":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/groovy.i18n.json","vscode.grunt":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/grunt.i18n.json","vscode.gulp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/gulp.i18n.json","vscode.handlebars":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/handlebars.i18n.json","vscode.hlsl":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/hlsl.i18n.json","vscode.html-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/html-language-features.i18n.json","vscode.html":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/html.i18n.json","vscode.image-preview":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/image-preview.i18n.json","vscode.ini":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ini.i18n.json","vscode.ipynb":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ipynb.i18n.json","vscode.jake":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/jake.i18n.json","vscode.java":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/java.i18n.json","vscode.javascript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/javascript.i18n.json","vscode.json-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/json-language-features.i18n.json","vscode.json":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/json.i18n.json","vscode.julia":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/julia.i18n.json","vscode.less":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/less.i18n.json","vscode.log":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/log.i18n.json","vscode.lua":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/lua.i18n.json","vscode.make":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/make.i18n.json","vscode.markdown-basics":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/markdown-basics.i18n.json","vscode.markdown-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/markdown-language-features.i18n.json","vscode.markdown-math":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/markdown-math.i18n.json","vscode.markdown-notebook-math":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/markdown-notebook-math.i18n.json","vscode.merge-conflict":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/merge-conflict.i18n.json","vscode.microsoft-authentication":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/microsoft-authentication.i18n.json","vscode.ms-vscode.github-browser":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ms-vscode.github-browser.i18n.json","vscode.ms-vscode.js-debug":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ms-vscode.js-debug.i18n.json","vscode.ms-vscode.node-debug":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ms-vscode.node-debug.i18n.json","vscode.ms-vscode.node-debug2":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ms-vscode.node-debug2.i18n.json","vscode.ms-vscode.remotehub":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ms-vscode.remotehub.i18n.json","vscode.notebook-markdown-extensions":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/notebook-markdown-extensions.i18n.json","vscode.npm":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/npm.i18n.json","vscode.objective-c":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/objective-c.i18n.json","vscode.perl":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/perl.i18n.json","vscode.php-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/php-language-features.i18n.json","vscode.php":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/php.i18n.json","vscode.powershell":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/powershell.i18n.json","vscode.pug":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/pug.i18n.json","vscode.python":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/python.i18n.json","vscode.r":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/r.i18n.json","vscode.razor":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/razor.i18n.json","vscode.ruby":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/ruby.i18n.json","vscode.rust":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/rust.i18n.json","vscode.scss":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/scss.i18n.json","vscode.search-result":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/search-result.i18n.json","vscode.shaderlab":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/shaderlab.i18n.json","vscode.shellscript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/shellscript.i18n.json","vscode.simple-browser":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/simple-browser.i18n.json","vscode.sql":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/sql.i18n.json","vscode.swift":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/swift.i18n.json","vscode.testing-editor-contributions":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/testing-editor-contributions.i18n.json","vscode.theme-abyss":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-abyss.i18n.json","vscode.theme-defaults":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-defaults.i18n.json","vscode.theme-kimbie-dark":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-kimbie-dark.i18n.json","vscode.theme-monokai-dimmed":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-monokai-dimmed.i18n.json","vscode.theme-monokai":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-monokai.i18n.json","vscode.theme-quietlight":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-quietlight.i18n.json","vscode.theme-red":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-red.i18n.json","vscode.theme-seti":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-seti.i18n.json","vscode.theme-solarized-dark":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-solarized-dark.i18n.json","vscode.theme-solarized-light":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-solarized-light.i18n.json","vscode.theme-tomorrow-night-blue":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/theme-tomorrow-night-blue.i18n.json","vscode.typescript-basics":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/typescript-basics.i18n.json","vscode.typescript-language-features":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/typescript-language-features.i18n.json","vscode.vb":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vb.i18n.json","vscode.vscode-chrome-debug-core":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode-chrome-debug-core.i18n.json","ms-vscode.node-debug":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode-node-debug.i18n.json","ms-vscode.node-debug2":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode-node-debug2.i18n.json","vscode.vscode.bat":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.bat.i18n.json","vscode.vscode.clojure":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.clojure.i18n.json","vscode.vscode.coffeescript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.coffeescript.i18n.json","vscode.vscode.cpp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.cpp.i18n.json","vscode.vscode.csharp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.csharp.i18n.json","vscode.vscode.css":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.css.i18n.json","vscode.vscode.docker":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.docker.i18n.json","vscode.vscode.fsharp":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.fsharp.i18n.json","vscode.vscode.go":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.go.i18n.json","vscode.vscode.groovy":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.groovy.i18n.json","vscode.vscode.handlebars":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.handlebars.i18n.json","vscode.vscode.hlsl":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.hlsl.i18n.json","vscode.vscode.html":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.html.i18n.json","vscode.vscode.ini":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.ini.i18n.json","vscode.vscode.java":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.java.i18n.json","vscode.vscode.javascript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.javascript.i18n.json","vscode.vscode.json":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.json.i18n.json","vscode.vscode.less":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.less.i18n.json","vscode.vscode.log":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.log.i18n.json","vscode.vscode.lua":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.lua.i18n.json","vscode.vscode.make":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.make.i18n.json","vscode.vscode.markdown":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.markdown.i18n.json","vscode.vscode.objective-c":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.objective-c.i18n.json","vscode.vscode.perl":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.perl.i18n.json","vscode.vscode.php":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.php.i18n.json","vscode.vscode.powershell":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.powershell.i18n.json","vscode.vscode.pug":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.pug.i18n.json","vscode.vscode.r":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.r.i18n.json","vscode.vscode.razor":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.razor.i18n.json","vscode.vscode.ruby":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.ruby.i18n.json","vscode.vscode.rust":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.rust.i18n.json","vscode.vscode.scss":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.scss.i18n.json","vscode.vscode.shaderlab":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.shaderlab.i18n.json","vscode.vscode.shellscript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.shellscript.i18n.json","vscode.vscode.sql":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.sql.i18n.json","vscode.vscode.swift":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.swift.i18n.json","vscode.vscode.theme-abyss":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-abyss.i18n.json","vscode.vscode.theme-defaults":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-defaults.i18n.json","vscode.vscode.theme-kimbie-dark":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-kimbie-dark.i18n.json","vscode.vscode.theme-monokai-dimmed":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-monokai-dimmed.i18n.json","vscode.vscode.theme-monokai":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-monokai.i18n.json","vscode.vscode.theme-quietlight":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-quietlight.i18n.json","vscode.vscode.theme-red":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-red.i18n.json","vscode.vscode.theme-solarized-dark":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-solarized-dark.i18n.json","vscode.vscode.theme-solarized-light":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-solarized-light.i18n.json","vscode.vscode.theme-tomorrow-night-blue":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.theme-tomorrow-night-blue.i18n.json","vscode.vscode.typescript":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.typescript.i18n.json","vscode.vscode.vb":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.vb.i18n.json","vscode.vscode.vscode-theme-seti":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.vscode-theme-seti.i18n.json","vscode.vscode.xml":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.xml.i18n.json","vscode.vscode.yaml":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/vscode.yaml.i18n.json","vscode.xml":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/xml.i18n.json","vscode.yaml":"/home/serge/.vscode/extensions/ms-ceintl.vscode-language-pack-fr-1.63.3/translations/extensions/yaml.i18n.json"},"mtime":1639563258000},"result":[{"name":"bat","displayName":"Bases du langage Windows Bat","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers de commandes Windows.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.52.0"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin mmims/language-batchfile grammars/batchfile.cson ./syntaxes/batchfile.tmLanguage.json"},"contributes":{"languages":[{"id":"bat","extensions":[".bat",".cmd"],"aliases":["Batch","bat"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"bat","scopeName":"source.batchfile","path":"./syntaxes/batchfile.tmLanguage.json"}],"snippets":[{"language":"bat","path":"./snippets/batchfile.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.bat","identifier":{"value":"vscode.bat","_lower":"vscode.bat"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/bat","path":"/snap/code/85/usr/share/code/resources/app/extensions/bat","scheme":"file"}},{"name":"clojure","displayName":"Bases du langage Clojure","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Clojure.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-clojure grammars/clojure.cson ./syntaxes/clojure.tmLanguage.json"},"contributes":{"languages":[{"id":"clojure","aliases":["Clojure","clojure"],"extensions":[".clj",".cljs",".cljc",".cljx",".clojure",".edn"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"clojure","scopeName":"source.clojure","path":"./syntaxes/clojure.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.clojure","identifier":{"value":"vscode.clojure","_lower":"vscode.clojure"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/clojure","path":"/snap/code/85/usr/share/code/resources/app/extensions/clojure","scheme":"file"}},{"name":"coffeescript","displayName":"Bases du langage CoffeeScript","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers CoffeeScript.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-coffee-script grammars/coffeescript.cson ./syntaxes/coffeescript.tmLanguage.json"},"contributes":{"languages":[{"id":"coffeescript","extensions":[".coffee",".cson",".iced"],"aliases":["CoffeeScript","coffeescript","coffee"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"coffeescript","scopeName":"source.coffee","path":"./syntaxes/coffeescript.tmLanguage.json"}],"breakpoints":[{"language":"coffeescript"}],"snippets":[{"language":"coffeescript","path":"./snippets/coffeescript.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.coffeescript","identifier":{"value":"vscode.coffeescript","_lower":"vscode.coffeescript"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/coffeescript","path":"/snap/code/85/usr/share/code/resources/app/extensions/coffeescript","scheme":"file"}},{"name":"configuration-editing","displayName":"Configuration de l'édition","description":"Fournit des fonctionnalités (IntelliSense avancé, correction automatique) dans les fichiers de configuration comme les fichiers de paramètres, de lancement et de recommandation d'extension.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.0.0"},"icon":"images/icon.png","activationEvents":["onLanguage:json","onLanguage:jsonc"],"main":"./dist/configurationEditingMain","browser":"./dist/browser/configurationEditingMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"languages":[{"id":"jsonc","extensions":[".code-workspace","language-configuration.json","icon-theme.json","color-theme.json",".code-snippets"],"filenames":["settings.json","launch.json","tasks.json","keybindings.json","extensions.json","argv.json","profiles.json",".devcontainer.json"],"filenamePatterns":["**/.devcontainer/devcontainer.json","**/User/snippets/*.json"]}],"jsonValidation":[{"fileMatch":"vscode://defaultsettings/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"%APP_SETTINGS_HOME%/keybindings.json","url":"vscode://schemas/keybindings"},{"fileMatch":"vscode://defaultsettings/*.json","url":"vscode://schemas/settings/default"},{"fileMatch":"%APP_SETTINGS_HOME%/settings.json","url":"vscode://schemas/settings/user"},{"fileMatch":"%MACHINE_SETTINGS_HOME%/settings.json","url":"vscode://schemas/settings/machine"},{"fileMatch":"%APP_WORKSPACES_HOME%/*/workspace.json","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"**/*.code-workspace","url":"vscode://schemas/workspaceConfig"},{"fileMatch":"**/argv.json","url":"vscode://schemas/argv"},{"fileMatch":"/.vscode/settings.json","url":"vscode://schemas/settings/folder"},{"fileMatch":"/.vscode/launch.json","url":"vscode://schemas/launch"},{"fileMatch":"/.vscode/tasks.json","url":"vscode://schemas/tasks"},{"fileMatch":"%APP_SETTINGS_HOME%/tasks.json","url":"vscode://schemas/tasks"},{"fileMatch":"%APP_SETTINGS_HOME%/snippets/*.json","url":"vscode://schemas/snippets"},{"fileMatch":"%APP_SETTINGS_HOME%/sync/snippets/preview/*.json","url":"vscode://schemas/snippets"},{"fileMatch":"**/*.code-snippets","url":"vscode://schemas/global-snippets"},{"fileMatch":"/.vscode/extensions.json","url":"vscode://schemas/extensions"},{"fileMatch":"/.devcontainer/devcontainer.json","url":"./schemas/devContainer.schema.generated.json"},{"fileMatch":"/.devcontainer.json","url":"./schemas/devContainer.schema.generated.json"},{"fileMatch":"%APP_SETTINGS_HOME%/globalStorage/ms-vscode-remote.remote-containers/nameConfigs/*.json","url":"./schemas/attachContainer.schema.json"},{"fileMatch":"%APP_SETTINGS_HOME%/globalStorage/ms-vscode-remote.remote-containers/imageConfigs/*.json","url":"./schemas/attachContainer.schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.configuration-editing","identifier":{"value":"vscode.configuration-editing","_lower":"vscode.configuration-editing"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/configuration-editing","path":"/snap/code/85/usr/share/code/resources/app/extensions/configuration-editing","scheme":"file"}},{"name":"cpp","displayName":"Concepts de base du langage C/C++","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers C/C++.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"c","extensions":[".c",".i"],"aliases":["C","c"],"configuration":"./language-configuration.json"},{"id":"cpp","extensions":[".cpp",".cc",".cxx",".c++",".hpp",".hh",".hxx",".h++",".h",".ii",".ino",".inl",".ipp",".ixx",".tpp",".txx",".hpp.in",".h.in"],"aliases":["C++","Cpp","cpp"],"configuration":"./language-configuration.json"},{"id":"cuda-cpp","extensions":[".cu",".cuh"],"aliases":["CUDA C++"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"c","scopeName":"source.c","path":"./syntaxes/c.tmLanguage.json"},{"language":"cpp","scopeName":"source.cpp.embedded.macro","path":"./syntaxes/cpp.embedded.macro.tmLanguage.json"},{"language":"cpp","scopeName":"source.cpp","path":"./syntaxes/cpp.tmLanguage.json"},{"scopeName":"source.c.platform","path":"./syntaxes/platform.tmLanguage.json"},{"language":"cuda-cpp","scopeName":"source.cuda-cpp","path":"./syntaxes/cuda-cpp.tmLanguage.json"}],"problemPatterns":[{"name":"nvcc-location","regexp":"^(.*)\\((\\d+)\\):\\s+(warning|error):\\s+(.*)","kind":"location","file":1,"location":2,"severity":3,"message":4}],"problemMatchers":[{"name":"nvcc","owner":"cuda-cpp","fileLocation":["relative","${workspaceFolder}"],"pattern":"$nvcc-location"}],"snippets":[{"language":"c","path":"./snippets/c.code-snippets"},{"language":"cpp","path":"./snippets/cpp.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.cpp","identifier":{"value":"vscode.cpp","_lower":"vscode.cpp"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/cpp","path":"/snap/code/85/usr/share/code/resources/app/extensions/cpp","scheme":"file"}},{"name":"csharp","displayName":"Bases du langage C#","description":"Fournit les extraits de code, la coloration syntaxique, la correspondance des parenthèses et le repliement dans les fichiers C#.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin dotnet/csharp-tmLanguage grammars/csharp.tmLanguage ./syntaxes/csharp.tmLanguage.json"},"contributes":{"languages":[{"id":"csharp","extensions":[".cs",".csx",".cake"],"aliases":["C#","csharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"csharp","scopeName":"source.cs","path":"./syntaxes/csharp.tmLanguage.json"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.csharp","identifier":{"value":"vscode.csharp","_lower":"vscode.csharp"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/csharp","path":"/snap/code/85/usr/share/code/resources/app/extensions/csharp","scheme":"file"}},{"name":"css","displayName":"Concepts de base du langage CSS","description":"Fournit la coloration syntaxique et la correspondance des parenthèses dans les fichiers CSS, LESS et SCSS.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-css grammars/css.cson ./syntaxes/css.tmLanguage.json"},"contributes":{"languages":[{"id":"css","aliases":["CSS","css"],"extensions":[".css"],"mimetypes":["text/css"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"css","scopeName":"source.css","path":"./syntaxes/css.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.css","identifier":{"value":"vscode.css","_lower":"vscode.css"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/css","path":"/snap/code/85/usr/share/code/resources/app/extensions/css","scheme":"file"}},{"name":"css-language-features","displayName":"Fonctionnalités de langage CSS","description":"Fournit une prise en charge riche de langage pour les fichiers CSS, LESS et SCSS","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.29.0"},"icon":"icons/css.png","activationEvents":["onLanguage:css","onLanguage:less","onLanguage:scss","onCommand:_css.applyCodeAction"],"main":"./client/dist/node/cssClientMain","browser":"./client/dist/browser/cssClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"categories":["Programming Languages"],"contributes":{"configuration":[{"order":22,"id":"css","title":"CSS","properties":{"css.customData":{"type":"array","markdownDescription":"Liste de chemins d’accès relatifs vers des fichiers JSON respectant le [format de données personnalisé](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\r\n\r\nVS Code charge des données personnalisées au démarrage pour améliorer la prise en charge de CSS : les propriétés, directives @, pseudo-classes et pseudo-éléments CSS personnalisés que vous spécifiez dans les fichiers JSON.\r\n\r\nLes chemins de fichiers sont relatifs à l’espace de travail, et seuls les paramètres de dossier d’espace de travail sont pris en compte.","default":[],"items":{"type":"string"},"scope":"resource"},"css.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"Par défaut, VS Code déclenche la complétion de la valeur de propriété après la sélection d'une propriété CSS. Utilisez ce paramètre pour désactiver ce comportement."},"css.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insère un point-virgule à la fin de la ligne au moment de la complétion des propriétés CSS."},"css.validate":{"type":"boolean","scope":"resource","default":true,"description":"Active ou désactive toutes les validations"},"css.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Affiche la documentation relative aux balises et aux attributs CSS quand le curseur pointe dessus."},"css.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Affiche les références MDN pour CSS en cas de pointage du curseur."},"css.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Quand vous utilisez un préfixe spécifique au fournisseur assurez-vous d’inclure toutes les autres propriétés spécifiques au fournisseur."},"css.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Quand vous utilisez un préfixe spécifique au fournisseur, incluez également la propriété standard."},"css.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Ne pas utiliser les définitions de style en doublon."},"css.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Ne pas utiliser d'ensembles de règles vides"},"css.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les instructions Import ne se chargent pas en parallèle."},"css.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Ne pas utiliser `width` ou `height` lorsque vous utilisez `padding` ou `border`."},"css.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Le sélecteur universel (`*`) est connu pour être lent."},"css.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Aucune unité nécessaire pour zéro."},"css.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La règle '@font-face' doit définir les propriétés 'src' et 'font-family'."},"css.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Les couleurs hexadécimales doivent contenir trois ou six chiffres hexadécimaux."},"css.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Nombre de paramètres non valide."},"css.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Propriété inconnue."},"css.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"Liste de propriétés non validées par la règle 'unknownProperties'."},"css.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les hacks IE sont uniquement nécessaires pour prendre en charge IE7 et antérieur."},"css.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Propriété spécifique à un fournisseur inconnue."},"css.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La propriété est ignorée en raison du display. Par exemple, avec 'display: inline', les propriétés `width`, `height`, `margin-top`, `margin-bottom`, et `float` n’ont aucun effet."},"css.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Evitez d'utiliser `!important`. Cela indique que la spécificité de l'intégralité du code CSS est incorrecte et qu'il doit être refactorisé."},"css.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Évitez d’utiliser `float`. Les floats conduisent à un CSS fragile qui est facile à casser, si un des aspects de la mise en page change."},"css.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les sélecteurs ne doivent pas contenir d'ID, car ces règles sont trop fortement couplées au code HTML."},"css.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Règle-at inconnue."},"css.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Trace la communication entre VS Code et le serveur de langage CSS."}}},{"id":"scss","order":24,"title":"SCSS (Sass)","properties":{"scss.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"Par défaut, VS Code déclenche la complétion de la valeur de propriété après la sélection d'une propriété CSS. Utilisez ce paramètre pour désactiver ce comportement."},"scss.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insère un point-virgule à la fin de la ligne au moment de la complétion des propriétés CSS."},"scss.validate":{"type":"boolean","scope":"resource","default":true,"description":"Active ou désactive toutes les validations"},"scss.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Affiche la documentation relative aux balises et aux attributs SCSS quand le curseur pointe dessus."},"scss.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Affiche les références MDN pour SCSS en cas de pointage du curseur."},"scss.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Quand vous utilisez un préfixe spécifique au fournisseur assurez-vous d’inclure toutes les autres propriétés spécifiques au fournisseur."},"scss.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Quand vous utilisez un préfixe spécifique au fournisseur, incluez également la propriété standard."},"scss.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Ne pas utiliser les définitions de style en doublon."},"scss.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Ne pas utiliser d'ensembles de règles vides"},"scss.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les instructions Import ne se chargent pas en parallèle."},"scss.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Ne pas utiliser `width` ou `height` lorsque vous utilisez `padding` ou `border`."},"scss.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Le sélecteur universel (`*`) est connu pour être lent."},"scss.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Aucune unité nécessaire pour zéro."},"scss.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La règle '@font-face' doit définir les propriétés 'src' et 'font-family'."},"scss.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Les couleurs hexadécimales doivent contenir trois ou six chiffres hexadécimaux."},"scss.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Nombre de paramètres non valide."},"scss.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Propriété inconnue."},"scss.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"Liste de propriétés non validées par la règle 'unknownProperties'."},"scss.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les hacks IE sont uniquement nécessaires pour prendre en charge IE7 et antérieur."},"scss.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Propriété spécifique à un fournisseur inconnue."},"scss.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La propriété est ignorée en raison du display. Par exemple, avec 'display: inline', les propriétés `width`, `height`, `margin-top`, `margin-bottom`, et `float` n’ont aucun effet."},"scss.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Evitez d'utiliser `!important`. Cela indique que la spécificité de l'intégralité du code CSS est incorrecte et qu'il doit être refactorisé."},"scss.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Évitez d’utiliser `float`. Les floats conduisent à un CSS fragile qui est facile à casser, si un des aspects de la mise en page change."},"scss.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les sélecteurs ne doivent pas contenir d'ID, car ces règles sont trop fortement couplées au code HTML."},"scss.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Règle-at inconnue."}}},{"id":"less","order":23,"type":"object","title":"LESS","properties":{"less.completion.triggerPropertyValueCompletion":{"type":"boolean","scope":"resource","default":true,"description":"Par défaut, VS Code déclenche la complétion de la valeur de propriété après la sélection d'une propriété CSS. Utilisez ce paramètre pour désactiver ce comportement."},"less.completion.completePropertyWithSemicolon":{"type":"boolean","scope":"resource","default":true,"description":"Insère un point-virgule à la fin de la ligne au moment de la complétion des propriétés CSS."},"less.validate":{"type":"boolean","scope":"resource","default":true,"description":"Active ou désactive toutes les validations"},"less.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Affiche la documentation relative aux balises et aux attributs LESS quand le curseur pointe dessus."},"less.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Affiche les références MDN pour LESS en cas de pointage du curseur."},"less.lint.compatibleVendorPrefixes":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Quand vous utilisez un préfixe spécifique au fournisseur assurez-vous d’inclure toutes les autres propriétés spécifiques au fournisseur."},"less.lint.vendorPrefix":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Quand vous utilisez un préfixe spécifique au fournisseur, incluez également la propriété standard."},"less.lint.duplicateProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Ne pas utiliser les définitions de style en doublon."},"less.lint.emptyRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Ne pas utiliser d'ensembles de règles vides"},"less.lint.importStatement":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les instructions Import ne se chargent pas en parallèle."},"less.lint.boxModel":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Ne pas utiliser `width` ou `height` lorsque vous utilisez `padding` ou `border`."},"less.lint.universalSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Le sélecteur universel (`*`) est connu pour être lent."},"less.lint.zeroUnits":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Aucune unité nécessaire pour zéro."},"less.lint.fontFaceProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La règle '@font-face' doit définir les propriétés 'src' et 'font-family'."},"less.lint.hexColorLength":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Les couleurs hexadécimales doivent contenir trois ou six chiffres hexadécimaux."},"less.lint.argumentsInColorFunction":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"error","description":"Nombre de paramètres non valide."},"less.lint.unknownProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Propriété inconnue."},"less.lint.validProperties":{"type":"array","uniqueItems":true,"items":{"type":"string"},"scope":"resource","default":[],"description":"Liste de propriétés non validées par la règle 'unknownProperties'."},"less.lint.ieHack":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les hacks IE sont uniquement nécessaires pour prendre en charge IE7 et antérieur."},"less.lint.unknownVendorSpecificProperties":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Propriété spécifique à un fournisseur inconnue."},"less.lint.propertyIgnoredDueToDisplay":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"La propriété est ignorée en raison du display. Par exemple, avec 'display: inline', les propriétés `width`, `height`, `margin-top`, `margin-bottom`, et `float` n’ont aucun effet."},"less.lint.important":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Evitez d'utiliser `!important`. Cela indique que la spécificité de l'intégralité du code CSS est incorrecte et qu'il doit être refactorisé."},"less.lint.float":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","markdownDescription":"Évitez d’utiliser `float`. Les floats conduisent à un CSS fragile qui est facile à casser, si un des aspects de la mise en page change."},"less.lint.idSelector":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"ignore","description":"Les sélecteurs ne doivent pas contenir d'ID, car ces règles sont trop fortement couplées au code HTML."},"less.lint.unknownAtRules":{"type":"string","scope":"resource","enum":["ignore","warning","error"],"default":"warning","description":"Règle-at inconnue."}}}],"configurationDefaults":{"[css]":{"editor.suggest.insertMode":"replace"},"[scss]":{"editor.suggest.insertMode":"replace"},"[less]":{"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.css-data.json","url":"https://raw.githubusercontent.com/microsoft/vscode-css-languageservice/master/docs/customData.schema.json"},{"fileMatch":"package.json","url":"./schemas/package.schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.css-language-features","identifier":{"value":"vscode.css-language-features","_lower":"vscode.css-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/css-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/css-language-features","scheme":"file"}},{"name":"dart","displayName":"Bases du langage Dart","description":"Fournit la coloration syntaxique et la mise en correspondance des crochets dans les fichiers Dart.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin dart-lang/dart-syntax-highlight grammars/dart.json ./syntaxes/dart.tmLanguage.json"},"contributes":{"languages":[{"id":"dart","extensions":[".dart"],"aliases":["Dart"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dart","scopeName":"source.dart","path":"./syntaxes/dart.tmLanguage.json"}]},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.dart","identifier":{"value":"vscode.dart","_lower":"vscode.dart"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/dart","path":"/snap/code/85/usr/share/code/resources/app/extensions/dart","scheme":"file"}},{"name":"debug-auto-launch","displayName":"Attachement automatique du débogage de nœud","description":"Assistance pour la fonctionnalité d'attachement automatique quand les extensions de débogage de nœud ne sont pas actives. ","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.5.0"},"icon":"media/icon.png","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"activationEvents":["*"],"main":"./dist/extension","contributes":{"commands":[{"command":"extension.node-debug.toggleAutoAttach","title":{"value":"Activer/désactiver l'Attachement automatique","original":"Toggle Auto Attach"},"category":"Debug"}]},"prettier":{"printWidth":100,"trailingComma":"all","singleQuote":true,"arrowParens":"avoid"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.debug-auto-launch","identifier":{"value":"vscode.debug-auto-launch","_lower":"vscode.debug-auto-launch"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/debug-auto-launch","path":"/snap/code/85/usr/share/code/resources/app/extensions/debug-auto-launch","scheme":"file"}},{"name":"debug-server-ready","displayName":"Action de serveur prêt","description":"Ouvrez l'URI dans le navigateur si le serveur en cours de débogage est prêt.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.32.0"},"icon":"media/icon.png","activationEvents":["onDebugResolve"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["terminalDataWriteEvent"],"main":"./dist/extension","contributes":{"debuggers":[{"type":"*","configurationAttributes":{"launch":{"properties":{"serverReadyAction":{"oneOf":[{"type":"object","additionalProperties":false,"markdownDescription":"Traiter un URI quand un programme de serveur en cours de débogage est prêt (indiqué par l'envoi d'une sortie sous la forme 'écoute sur le port 3000' ou 'Écoute en cours sur : https://localhost:5001' dans la console de débogage.)","default":{"action":"openExternally"},"properties":{"action":{"type":"string","enum":["openExternally"],"enumDescriptions":["Ouvrez l'URI en externe avec l'application par défaut."],"markdownDescription":"Utilisation de l'URI quand le serveur est prêt.","default":"openExternally"},"pattern":{"type":"string","markdownDescription":"Le serveur est prêt si ce modèle apparaît dans la console de débogage. Le premier groupe de captures doit inclure un URI ou un numéro de port.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"Chaîne de format utilisée pour construire l'URI à partir d'un numéro de port. Le premier '%s' est remplacé par le numéro de port.","default":"http://localhost:%s"}}},{"type":"object","additionalProperties":false,"markdownDescription":"Traiter un URI quand un programme de serveur en cours de débogage est prêt (indiqué par l'envoi d'une sortie sous la forme 'écoute sur le port 3000' ou 'Écoute en cours sur : https://localhost:5001' dans la console de débogage.)","default":{"action":"debugWithEdge","pattern":"listening on port ([0-9]+)","uriFormat":"http://localhost:%s","webRoot":"${workspaceFolder}"},"properties":{"action":{"type":"string","enum":["debugWithChrome","debugWithEdge"],"enumDescriptions":["Démarrez le débogage avec le 'Débogueur pour Chrome'."],"markdownDescription":"Utilisation de l'URI quand le serveur est prêt.","default":"debugWithEdge"},"pattern":{"type":"string","markdownDescription":"Le serveur est prêt si ce modèle apparaît dans la console de débogage. Le premier groupe de captures doit inclure un URI ou un numéro de port.","default":"listening on port ([0-9]+)"},"uriFormat":{"type":"string","markdownDescription":"Chaîne de format utilisée pour construire l'URI à partir d'un numéro de port. Le premier '%s' est remplacé par le numéro de port.","default":"http://localhost:%s"},"webRoot":{"type":"string","markdownDescription":"Valeur passée à la configuration de débogage pour le 'Débogueur pour Chrome'.","default":"${workspaceFolder}"}}},{"type":"object","additionalProperties":false,"markdownDescription":"Traiter un URI quand un programme de serveur en cours de débogage est prêt (indiqué par l'envoi d'une sortie sous la forme 'écoute sur le port 3000' ou 'Écoute en cours sur : https://localhost:5001' dans la console de débogage.)","default":{"action":"startDebugging","name":"<launch browser config name>"},"required":["name"],"properties":{"action":{"type":"string","enum":["startDebugging"],"enumDescriptions":["Exécutez une autre configuration de lancement."],"markdownDescription":"Utilisation de l'URI quand le serveur est prêt.","default":"startDebugging"},"pattern":{"type":"string","markdownDescription":"Le serveur est prêt si ce modèle apparaît dans la console de débogage. Le premier groupe de captures doit inclure un URI ou un numéro de port.","default":"listening on port ([0-9]+)"},"name":{"type":"string","markdownDescription":"Nom de la configuration de lancement à exécuter.","default":"Launch Browser"}}}]}}}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.debug-server-ready","identifier":{"value":"vscode.debug-server-ready","_lower":"vscode.debug-server-ready"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/debug-server-ready","path":"/snap/code/85/usr/share/code/resources/app/extensions/debug-server-ready","scheme":"file"}},{"name":"diff","displayName":"Bases du langage Diff","description":"Fournit la coloration syntaxique et la mise en correspondance des crochets dans les fichiers Diff.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/diff.tmbundle Syntaxes/Diff.plist ./syntaxes/diff.tmLanguage.json"},"contributes":{"languages":[{"id":"diff","aliases":["Diff","diff"],"extensions":[".diff",".patch",".rej"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"diff","scopeName":"source.diff","path":"./syntaxes/diff.tmLanguage.json"}]},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.diff","identifier":{"value":"vscode.diff","_lower":"vscode.diff"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/diff","path":"/snap/code/85/usr/share/code/resources/app/extensions/diff","scheme":"file"}},{"name":"docker","displayName":"Bases du langage Docker","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Docker.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin moby/moby contrib/syntax/textmate/Docker.tmbundle/Syntaxes/Dockerfile.tmLanguage ./syntaxes/docker.tmLanguage.json"},"contributes":{"languages":[{"id":"dockerfile","extensions":[".dockerfile",".containerfile"],"filenames":["Dockerfile","Containerfile"],"filenamePatterns":["Dockerfile.*","Containerfile.*"],"aliases":["Docker","Dockerfile","Containerfile"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"dockerfile","scopeName":"source.dockerfile","path":"./syntaxes/docker.tmLanguage.json"}],"configurationDefaults":{"[dockerfile]":{"editor.quickSuggestions":{"strings":true}}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.docker","identifier":{"value":"vscode.docker","_lower":"vscode.docker"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/docker","path":"/snap/code/85/usr/share/code/resources/app/extensions/docker","scheme":"file"}},{"name":"emmet","displayName":"Emmet","description":"Prise en charge d'Emmet pour VS Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.13.0"},"icon":"images/icon.png","categories":["Other"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"activationEvents":["onCommand:emmet.expandAbbreviation","onCommand:editor.emmet.action.wrapWithAbbreviation","onCommand:editor.emmet.action.removeTag","onCommand:editor.emmet.action.updateTag","onCommand:editor.emmet.action.matchTag","onCommand:editor.emmet.action.balanceIn","onCommand:editor.emmet.action.balanceOut","onCommand:editor.emmet.action.prevEditPoint","onCommand:editor.emmet.action.nextEditPoint","onCommand:editor.emmet.action.mergeLines","onCommand:editor.emmet.action.selectPrevItem","onCommand:editor.emmet.action.selectNextItem","onCommand:editor.emmet.action.splitJoinTag","onCommand:editor.emmet.action.toggleComment","onCommand:editor.emmet.action.evaluateMathExpression","onCommand:editor.emmet.action.updateImageSize","onCommand:editor.emmet.action.incrementNumberByOneTenth","onCommand:editor.emmet.action.incrementNumberByOne","onCommand:editor.emmet.action.incrementNumberByTen","onCommand:editor.emmet.action.decrementNumberByOneTenth","onCommand:editor.emmet.action.decrementNumberByOne","onCommand:editor.emmet.action.decrementNumberByTen","onCommand:editor.emmet.action.reflectCSSValue","onCommand:workbench.action.showEmmetCommands","onStartupFinished"],"main":"./dist/node/emmetNodeMain","browser":"./dist/browser/emmetBrowserMain","contributes":{"configuration":{"type":"object","title":"Emmet","properties":{"emmet.showExpandedAbbreviation":{"type":["string"],"enum":["never","always","inMarkupAndStylesheetFilesOnly"],"default":"always","markdownDescription":"Affiche les abréviations Emmet développées en tant que suggestions.\r\nL'option \"inMarkupAndStylesheetFilesOnly\" s'applique aux syntaxes html, haml, jade, slim, xml, xsl, css, scss, sass, less et stylus.\r\nL'option \"always\" s'applique à toutes les parties du fichier indépendamment de la balise/du css."},"emmet.showAbbreviationSuggestions":{"type":"boolean","default":true,"markdownDescription":"Affiche les abréviations Emmet possibles comme suggestions. Non applicable dans les feuilles de style ou quand emmet.showExpandedAbbreviation a la valeur \"never\"."},"emmet.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"scope":"resource","markdownDescription":"Activer les abréviations Emmet dans les langages qui ne sont pas pris en charge par défaut. Ajoutez ici un mappage entre le langage en question et le langage pris en charge par Emmet.\r\n Exemple : `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`"},"emmet.variables":{"type":"object","properties":{"lang":{"type":"string","default":"en"},"charset":{"type":"string","default":"UTF-8"}},"additionalProperties":{"type":"string"},"default":{},"scope":"resource","markdownDescription":"Variables à utiliser dans les extraits de code Emmet."},"emmet.syntaxProfiles":{"type":"object","default":{},"scope":"resource","markdownDescription":"Définissez le profil pour la syntaxe spécifiée ou utilisez votre propre profil avec des règles spécifiques."},"emmet.excludeLanguages":{"type":"array","items":{"type":"string"},"default":["markdown"],"scope":"resource","markdownDescription":"Un tableau des langages pour lesquels les abréviations Emmet ne devraient pas être développées."},"emmet.extensionsPath":{"type":"array","items":{"type":"string","markdownDescription":"Chemin d’accès des fichiers Emmet syntaxProfiles et/ou des extraits de code."},"default":[],"scope":"machine-overridable","markdownDescription":"Tableau de chemins d’accès, où chaque chemin peut pointer vers un fichier Emmet syntaxProfiles et/ou d’extrait de code.\r\nEn cas de conflit, les profils/extraits de code des chemins plus récents remplacent ceux des chemins plus anciens.\r\nConsultez https://code.visualstudio.com/docs/editor/emmet pour plus d’informations et pour obtenir un exemple de fichier d’extrait."},"emmet.triggerExpansionOnTab":{"type":"boolean","default":false,"markdownDescription":"Lorsqu’activé, les abréviations Emmet sont développées lorsque vous appuyez sur TAB."},"emmet.preferences":{"type":"object","default":{},"scope":"resource","markdownDescription":"Préférences utilisées pour modifier le comportement de certaines actions et résolveurs d'Emmet.","properties":{"css.intUnit":{"type":"string","default":"px","markdownDescription":"Unité par défaut pour les valeurs de nombres entiers."},"css.floatUnit":{"type":"string","default":"em","markdownDescription":"Unité par défaut pour les valeurs de nombres à virgule flottante."},"css.propertyEnd":{"type":"string","default":";","markdownDescription":"Symbole à placer à la fin de la propriété CSS pendant le développement des abréviations CSS."},"sass.propertyEnd":{"type":"string","default":"","markdownDescription":"Symbole à placer à la fin de la propriété CSS pendant le développement des abréviations CSS dans les fichiers Sass."},"stylus.propertyEnd":{"type":"string","default":"","markdownDescription":"Symbole à placer à la fin de la propriété CSS pendant le développement des abréviations CSS dans les fichiers Stylus."},"css.valueSeparator":{"type":"string","default":": ","markdownDescription":"Symbole à placer entre la propriété CSS et sa valeur pendant le développement des abréviations CSS."},"sass.valueSeparator":{"type":"string","default":": ","markdownDescription":"Symbole à placer entre la propriété CSS et sa valeur pendant le développement des abréviations CSS dans les fichiers Sass."},"stylus.valueSeparator":{"type":"string","default":" ","markdownDescription":"Symbole à placer entre la propriété CSS et sa valeur pendant le développement des abréviations CSS dans les fichiers Stylus."},"bem.elementSeparator":{"type":"string","default":"__","markdownDescription":"Séparateur d’éléments utilisé pour les classes lorsque le filtre BEM est utilisé."},"bem.modifierSeparator":{"type":"string","default":"_","markdownDescription":"Séparateur de modificateur utilisé pour les classes lorsque le filtre BEM est utilisé."},"filter.commentBefore":{"type":"string","default":"","markdownDescription":"Une définition de commentaire qui doit être placée avant l’élément correspondant quand le filtre de commentaire est appliqué."},"filter.commentAfter":{"type":"string","default":"\n<!-- /[#ID][.CLASS] -->","markdownDescription":"Une définition de commentaire qui doit être placée après l’élément correspondant quand un filtre de commentaire est appliqué."},"filter.commentTrigger":{"type":"array","default":["id","class"],"markdownDescription":"Une liste de noms d’attributs qui devraient exister en abrégé pour que le filtre de commentaire soit appliqué. Les éléments de la liste doivent être séparés par des virgules."},"format.noIndentTags":{"type":"array","default":["html"],"markdownDescription":"Un tableau de noms de balises qui ne devraient jamais être indentées."},"format.forceIndentationForTags":{"type":"array","default":["body"],"markdownDescription":"Un tableau de noms de balises qui devraient toujours être indentées."},"profile.allowCompactBoolean":{"type":"boolean","default":false,"markdownDescription":"Si la valeur est `true`, une notation compacte des attributs booléens est produite."},"css.webkitProperties":{"type":"string","default":null,"markdownDescription":"Les propriétés css séparées par des virgules qui ont un préfixe 'webkit' vendor lorsqu’elles sont utilisées dans une abréviation emmet qui commence par '-'. Mettre une chaîne vide pour éviter le préfixe 'webkit'."},"css.mozProperties":{"type":"string","default":null,"markdownDescription":"Les propriétés css séparées par des virgules qui ont un préfixe 'moz' vendor lorsqu’elles sont utilisées dans une abréviation emmet qui commence par '-'. Mettre une chaîne vide pour éviter le préfixe 'moz'."},"css.oProperties":{"type":"string","default":null,"markdownDescription":"Les propriétés css séparées par des virgules qui ont un préfixe 'o' vendor lorsqu’elles sont utilisées dans une abréviation emmet qui commence par '-'. Mettre une chaîne vide pour éviter le préfixe 'o'."},"css.msProperties":{"type":"string","default":null,"markdownDescription":"Les propriétés css séparées par des virgules qui ont un préfixe 'ms' vendor lorsqu’elles sont utilisées dans une abréviation emmet qui commence par '-'. Mettre une chaîne vide pour éviter le préfixe 'ms'."},"css.fuzzySearchMinScore":{"type":"number","default":0.3,"markdownDescription":"La note minimale (de 0 à 1) que la correspondance de l'abréviation (fuzzy-matched) devrait atteindre. Des valeurs plus faibles peuvent produire de nombreuses correspondances de faux-positifs, des valeurs plus élevées peuvent réduire les correspondances possibles."},"output.inlineBreak":{"type":"number","default":0,"markdownDescription":"Nombre des éléments inclus frères nécessaires pour que les sauts de ligne soient placés entre ces éléments. Si la valeur est '0', les éléments inclus sont toujours développés sur une seule ligne."},"output.reverseAttributes":{"type":"boolean","default":false,"markdownDescription":"Si la valeur est true, inverse les directions de fusion des attributs au moment de la résolution des extraits."},"output.selfClosingStyle":{"type":"string","enum":["html","xhtml","xml"],"default":"html","markdownDescription":"Style des balises de fermeture automatique : html (`<br>`), xml (`<br/>`) ou xhtml (`<br />`)."},"css.color.short":{"type":"boolean","default":true,"markdownDescription":"Si la valeur est définie sur `true`, les valeurs de couleur telles que `#f` seront développées en `#fff` plutôt que `#ffffff`."}}},"emmet.showSuggestionsAsSnippets":{"type":"boolean","default":false,"markdownDescription":"Si la valeur est 'true', les suggestions Emmet s'affichent sous forme d'extraits, ce qui vous permet de les ordonner conformément au paramètre '#editor.snippetSuggestions#'."},"emmet.optimizeStylesheetParsing":{"type":"boolean","default":true,"markdownDescription":"Quand la valeur est 'false', la totalité du fichier est analysé, ce qui permet de déterminer si la position actuelle est valide pour le développement des abréviations Emmet. Quand la valeur est 'true', seul le contenu autour de la position actuelle dans les fichiers CSS/SCSS/Less est analysé."}}},"commands":[{"command":"editor.emmet.action.wrapWithAbbreviation","title":{"value":"Envelopper avec une abréviation","original":"Wrap with Abbreviation"},"category":"Emmet"},{"command":"editor.emmet.action.removeTag","title":{"value":"Supprimer une étiquette","original":"Remove Tag"},"category":"Emmet"},{"command":"editor.emmet.action.updateTag","title":{"value":"Mettre à jour la balise","original":"Update Tag"},"category":"Emmet"},{"command":"editor.emmet.action.matchTag","title":{"value":"Aller à la paire correspondante","original":"Go to Matching Pair"},"category":"Emmet"},{"command":"editor.emmet.action.balanceIn","title":{"value":"Equilibrer (vers l'intérieur)","original":"Balance (inward)"},"category":"Emmet"},{"command":"editor.emmet.action.balanceOut","title":{"value":"Equilibrer (vers l'extérieur)","original":"Balance (outward)"},"category":"Emmet"},{"command":"editor.emmet.action.prevEditPoint","title":{"value":"Aller au Point d'édition précédent","original":"Go to Previous Edit Point"},"category":"Emmet"},{"command":"editor.emmet.action.nextEditPoint","title":{"value":"Aller au Point d’édition suivant","original":"Go to Next Edit Point"},"category":"Emmet"},{"command":"editor.emmet.action.mergeLines","title":{"value":"Fusionner les lignes","original":"Merge Lines"},"category":"Emmet"},{"command":"editor.emmet.action.selectPrevItem","title":{"value":"Sélectionner l'élément précédent","original":"Select Previous Item"},"category":"Emmet"},{"command":"editor.emmet.action.selectNextItem","title":{"value":"Sélectionner l’élément suivant","original":"Select Next Item"},"category":"Emmet"},{"command":"editor.emmet.action.splitJoinTag","title":{"value":"Séparer / joindre la balise","original":"Split/Join Tag"},"category":"Emmet"},{"command":"editor.emmet.action.toggleComment","title":{"value":"Activer/désactiver le commentaire","original":"Toggle Comment"},"category":"Emmet"},{"command":"editor.emmet.action.evaluateMathExpression","title":{"value":"Évaluer l'expression mathématique","original":"Evaluate Math Expression"},"category":"Emmet"},{"command":"editor.emmet.action.updateImageSize","title":{"value":"Mettre à jour la taille de l’image","original":"Update Image Size"},"category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOneTenth","title":{"value":"Incrémenter de 0,1","original":"Increment by 0.1"},"category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByOne","title":{"value":"Incrémenter de 1","original":"Increment by 1"},"category":"Emmet"},{"command":"editor.emmet.action.incrementNumberByTen","title":{"value":"Incrémenter de 10","original":"Increment by 10"},"category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOneTenth","title":{"value":"Décrémenter de 0,1","original":"Decrement by 0.1"},"category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByOne","title":{"value":"Décrémenter de 1","original":"Decrement by 1"},"category":"Emmet"},{"command":"editor.emmet.action.decrementNumberByTen","title":{"value":"Décrémenter de 10","original":"Decrement by 10"},"category":"Emmet"},{"command":"editor.emmet.action.reflectCSSValue","title":{"value":"Reflèter la valeur CSS","original":"Reflect CSS Value"},"category":"Emmet"},{"command":"workbench.action.showEmmetCommands","title":{"value":"Afficher les commandes Emmet","original":"Show Emmet Commands"},"category":""}],"menus":{"commandPalette":[{"command":"editor.emmet.action.wrapWithAbbreviation","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.removeTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.updateTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.matchTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.balanceIn","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.balanceOut","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.prevEditPoint","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.nextEditPoint","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.mergeLines","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.selectPrevItem","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.selectNextItem","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.splitJoinTag","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.toggleComment","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.evaluateMathExpression","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.updateImageSize","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByOneTenth","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByOne","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.incrementNumberByTen","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByOneTenth","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByOne","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.decrementNumberByTen","when":"!activeEditorIsReadonly"},{"command":"editor.emmet.action.reflectCSSValue","when":"!activeEditorIsReadonly"}]}},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.emmet","identifier":{"value":"vscode.emmet","_lower":"vscode.emmet"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/emmet","path":"/snap/code/85/usr/share/code/resources/app/extensions/emmet","scheme":"file"}},{"name":"extension-editing","displayName":"Création d’extension","description":"Fournit des fonctions de linting pour la création d’extensions.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.4.0"},"icon":"images/icon.png","activationEvents":["onLanguage:json","onLanguage:markdown"],"main":"./dist/extensionEditingMain","browser":"./dist/browser/extensionEditingBrowserMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"vscode://schemas/vscode-extensions"},{"fileMatch":"*language-configuration.json","url":"vscode://schemas/language-configuration"},{"fileMatch":["*icon-theme.json","!*product-icon-theme.json"],"url":"vscode://schemas/icon-theme"},{"fileMatch":"*product-icon-theme.json","url":"vscode://schemas/product-icon-theme"},{"fileMatch":"*color-theme.json","url":"vscode://schemas/color-theme"}],"languages":[{"id":"ignore","filenames":[".vscodeignore"]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.extension-editing","identifier":{"value":"vscode.extension-editing","_lower":"vscode.extension-editing"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/extension-editing","path":"/snap/code/85/usr/share/code/resources/app/extensions/extension-editing","scheme":"file"}},{"name":"fsharp","displayName":"Bases du langage F#","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers F#.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin ionide/ionide-fsgrammar grammars/fsharp.json ./syntaxes/fsharp.tmLanguage.json"},"contributes":{"languages":[{"id":"fsharp","extensions":[".fs",".fsi",".fsx",".fsscript"],"aliases":["F#","FSharp","fsharp"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"fsharp","scopeName":"source.fsharp","path":"./syntaxes/fsharp.tmLanguage.json"}],"snippets":[{"language":"fsharp","path":"./snippets/fsharp.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.fsharp","identifier":{"value":"vscode.fsharp","_lower":"vscode.fsharp"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/fsharp","path":"/snap/code/85/usr/share/code/resources/app/extensions/fsharp","scheme":"file"}},{"name":"git","displayName":"Git","description":"Intégration Git SCM","publisher":"vscode","license":"MIT","version":"1.0.0","engines":{"vscode":"^1.5.0"},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","enabledApiProposals":["diffCommand","contribViewsWelcome","scmActionButton","scmSelectedProvider","scmValidation","timeline"],"categories":["Other"],"activationEvents":["*","onFileSystem:git"],"extensionDependencies":["vscode.git-base"],"main":"./dist/main","icon":"resources/icons/git.png","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":false}},"contributes":{"commands":[{"command":"git.setLogLevel","title":{"value":"Définir le niveau de journalisation (log) ...","original":"Set Log Level..."},"category":"Git"},{"command":"git.clone","title":{"value":"Cloner","original":"Clone"},"category":"Git"},{"command":"git.cloneRecursive","title":{"value":"Cloner (récursif)","original":"Clone (Recursive)"},"category":"Git"},{"command":"git.init","title":{"value":"Initialiser le dépôt","original":"Initialize Repository"},"category":"Git","icon":"$(add)"},{"command":"git.openRepository","title":{"value":"Ouvrir le dépôt","original":"Open Repository"},"category":"Git"},{"command":"git.close","title":{"value":"Fermer le dépôt","original":"Close Repository"},"category":"Git"},{"command":"git.refresh","title":{"value":"Actualiser","original":"Refresh"},"category":"Git","icon":"$(refresh)"},{"command":"git.openChange","title":{"value":"Ouvrir les modifications","original":"Open Changes"},"category":"Git","icon":"$(compare-changes)"},{"command":"git.openChangeEditor","title":{"value":"Ouvrir les modifications","original":"Open Changes"},"category":"Git","icon":"$(compare-changes)","enablement":"scmActiveResourceHasChanges"},{"command":"git.openAllChanges","title":{"value":"Ouvrir tous les changements","original":"Open All Changes"},"category":"Git"},{"command":"git.openFile","title":{"value":"Ouvrir un fichier","original":"Open File"},"category":"Git","icon":"$(go-to-file)"},{"command":"git.openFile2","title":{"value":"Ouvrir un fichier","original":"Open File"},"category":"Git","icon":"$(go-to-file)"},{"command":"git.openHEADFile","title":{"value":"Ouvrir le fichier (HEAD)","original":"Open File (HEAD)"},"category":"Git"},{"command":"git.stage","title":{"value":"Mettre en attente les modifications","original":"Stage Changes"},"category":"Git","icon":"$(add)"},{"command":"git.stageAll","title":{"value":"Mettre en attente toutes les modifications","original":"Stage All Changes"},"category":"Git","icon":"$(add)"},{"command":"git.stageAllTracked","title":{"value":"Indexer tous les changements suivis","original":"Stage All Tracked Changes"},"category":"Git","icon":"$(add)"},{"command":"git.stageAllUntracked","title":{"value":"Indexer tous les changements non suivis","original":"Stage All Untracked Changes"},"category":"Git","icon":"$(add)"},{"command":"git.stageAllMerge","title":{"value":"Indexer toutes les fusions de changements","original":"Stage All Merge Changes"},"category":"Git","icon":"$(add)"},{"command":"git.stageSelectedRanges","title":{"value":"Mettre en attente les plages sélectionnées","original":"Stage Selected Ranges"},"category":"Git"},{"command":"git.revertSelectedRanges","title":{"value":"Restaurer les portées sélectionnées","original":"Revert Selected Ranges"},"category":"Git"},{"command":"git.stageChange","title":{"value":"Mettre en attente la modification","original":"Stage Change"},"category":"Git","icon":"$(add)"},{"command":"git.revertChange","title":{"value":"Restaurer la modification","original":"Revert Change"},"category":"Git","icon":"$(discard)"},{"command":"git.unstage","title":{"value":"Annuler la mise en attente des modifications","original":"Unstage Changes"},"category":"Git","icon":"$(remove)"},{"command":"git.unstageAll","title":{"value":"Annuler la mise en attente de toutes les modifications","original":"Unstage All Changes"},"category":"Git","icon":"$(remove)"},{"command":"git.unstageSelectedRanges","title":{"value":"Annuler la mise en attente des plages sélectionnées","original":"Unstage Selected Ranges"},"category":"Git"},{"command":"git.clean","title":{"value":"Ignorer les modifications","original":"Discard Changes"},"category":"Git","icon":"$(discard)"},{"command":"git.cleanAll","title":{"value":"Ignorer toutes les modifications","original":"Discard All Changes"},"category":"Git","icon":"$(discard)"},{"command":"git.cleanAllTracked","title":{"value":"Ignorer tous les changements suivis","original":"Discard All Tracked Changes"},"category":"Git","icon":"$(discard)"},{"command":"git.cleanAllUntracked","title":{"value":"Ignorer tous les changements non suivis","original":"Discard All Untracked Changes"},"category":"Git","icon":"$(discard)"},{"command":"git.rename","title":{"value":"Renommer","original":"Rename"},"category":"Git","icon":"$(discard)"},{"command":"git.commit","title":{"value":"Activer","original":"Commit"},"category":"Git","icon":"$(check)"},{"command":"git.commitStaged","title":{"value":"Valider le contenu en zone de transit","original":"Commit Staged"},"category":"Git"},{"command":"git.commitEmpty","title":{"value":"Commit vide","original":"Commit Empty"},"category":"Git"},{"command":"git.commitStagedSigned","title":{"value":"Valider les modifications en attente (signé)","original":"Commit Staged (Signed Off)"},"category":"Git"},{"command":"git.commitStagedAmend","title":{"value":"Valider les modifications en attente (modifier)","original":"Commit Staged (Amend)"},"category":"Git"},{"command":"git.commitAll","title":{"value":"Valider tout","original":"Commit All"},"category":"Git"},{"command":"git.commitAllSigned","title":{"value":"Valider tout (signé)","original":"Commit All (Signed Off)"},"category":"Git"},{"command":"git.commitAllAmend","title":{"value":"Tout Valider (Modifier)","original":"Commit All (Amend)"},"category":"Git"},{"command":"git.commitNoVerify","title":{"value":"Commiter (aucune vérification)","original":"Commit (No Verify)"},"category":"Git","icon":"$(check)"},{"command":"git.commitStagedNoVerify","title":{"value":"Commiter l'index (aucune vérification)","original":"Commit Staged (No Verify)"},"category":"Git"},{"command":"git.commitEmptyNoVerify","title":{"value":"Commiter le contenu vide (aucune vérification)","original":"Commit Empty (No Verify)"},"category":"Git"},{"command":"git.commitStagedSignedNoVerify","title":{"value":"Commiter l'index (signé, aucune vérification)","original":"Commit Staged (Signed Off, No Verify)"},"category":"Git"},{"command":"git.commitStagedAmendNoVerify","title":{"value":"Commiter l'index (modifier, aucune vérification)","original":"Commit Staged (Amend, No Verify)"},"category":"Git"},{"command":"git.commitAllNoVerify","title":{"value":"Tout commiter (aucune vérification)","original":"Commit All (No Verify)"},"category":"Git"},{"command":"git.commitAllSignedNoVerify","title":{"value":"Tout commiter (signé, aucune vérification)","original":"Commit All (Signed Off, No Verify)"},"category":"Git"},{"command":"git.commitAllAmendNoVerify","title":{"value":"Tout commiter (modifier, aucune vérification)","original":"Commit All (Amend, No Verify)"},"category":"Git"},{"command":"git.restoreCommitTemplate","title":{"value":"Restaurer le modèle de commit","original":"Restore Commit Template"},"category":"Git"},{"command":"git.undoCommit","title":{"value":"Annuler la dernière validation","original":"Undo Last Commit"},"category":"Git"},{"command":"git.checkout","title":{"value":"Extraire vers...","original":"Checkout to..."},"category":"Git"},{"command":"git.checkoutDetached","title":{"value":"Extraire vers (mode détaché)...","original":"Checkout to (Detached)..."},"category":"Git"},{"command":"git.branch","title":{"value":"Créer une branche...","original":"Create Branch..."},"category":"Git"},{"command":"git.branchFrom","title":{"value":"Créer une branche à partir de...","original":"Create Branch From..."},"category":"Git"},{"command":"git.deleteBranch","title":{"value":"Supprimer la branche...","original":"Delete Branch..."},"category":"Git"},{"command":"git.renameBranch","title":{"value":"Renommer la branche...","original":"Rename Branch..."},"category":"Git"},{"command":"git.merge","title":{"value":"Fusionner la branche...","original":"Merge Branch..."},"category":"Git"},{"command":"git.rebase","title":{"value":"Rebaser la branche...","original":"Rebase Branch..."},"category":"Git"},{"command":"git.createTag","title":{"value":"Créer une balise","original":"Create Tag"},"category":"Git"},{"command":"git.deleteTag","title":{"value":"Supprimer l'étiquette","original":"Delete Tag"},"category":"Git"},{"command":"git.fetch","title":{"value":"Rappatrier","original":"Fetch"},"category":"Git"},{"command":"git.fetchPrune","title":{"value":"Récupérer (élaguer)","original":"Fetch (Prune)"},"category":"Git"},{"command":"git.fetchAll","title":{"value":"Récupérer depuis tous les Remotes","original":"Fetch From All Remotes"},"category":"Git"},{"command":"git.pull","title":{"value":"Pull","original":"Pull"},"category":"Git"},{"command":"git.pullRebase","title":{"value":"Pull (rebaser)","original":"Pull (Rebase)"},"category":"Git"},{"command":"git.pullFrom","title":{"value":"Extraire de...","original":"Pull from..."},"category":"Git"},{"command":"git.push","title":{"value":"Push","original":"Push"},"category":"Git"},{"command":"git.pushForce","title":{"value":"Pousser (forcer)","original":"Push (Force)"},"category":"Git"},{"command":"git.pushTo","title":{"value":"Transfert (Push) vers...","original":"Push to..."},"category":"Git"},{"command":"git.pushToForce","title":{"value":"Transfert (Push) vers... (Force)","original":"Push to... (Force)"},"category":"Git"},{"command":"git.pushTags","title":{"value":"Envoyer (push) des étiquettes","original":"Push Tags"},"category":"Git"},{"command":"git.pushWithTags","title":{"value":"Pousser (suivre des balises)","original":"Push (Follow Tags)"},"category":"Git"},{"command":"git.pushWithTagsForce","title":{"value":"Pousser (suivre des balises, forcer)","original":"Push (Follow Tags, Force)"},"category":"Git"},{"command":"git.cherryPick","title":{"value":"Faire un cherry-pick...","original":"Cherry Pick..."},"category":"Git"},{"command":"git.addRemote","title":{"value":"Ajouter un dépôt distant...","original":"Add Remote..."},"category":"Git"},{"command":"git.removeRemote","title":{"value":"Supprimer le dépôt distant","original":"Remove Remote"},"category":"Git"},{"command":"git.sync","title":{"value":"Synchroniser","original":"Sync"},"category":"Git"},{"command":"git.syncRebase","title":{"value":"Synchroniser (Rebase)","original":"Sync (Rebase)"},"category":"Git"},{"command":"git.publish","title":{"value":"Publier la branche...","original":"Publish Branch..."},"category":"Git"},{"command":"git.showOutput","title":{"value":"Afficher la sortie Git","original":"Show Git Output"},"category":"Git"},{"command":"git.ignore","title":{"value":"Ajouter à .gitignore","original":"Add to .gitignore"},"category":"Git"},{"command":"git.revealInExplorer","title":{"value":"Révéler dans la barre latérale","original":"Reveal in Side Bar"},"category":"Git"},{"command":"git.stashIncludeUntracked","title":{"value":"Remiser (Inclure les non-tracés)","original":"Stash (Include Untracked)"},"category":"Git"},{"command":"git.stash","title":{"value":"Remiser (stash)","original":"Stash"},"category":"Git"},{"command":"git.stashPop","title":{"value":"Appliquer et supprimer la remise...","original":"Pop Stash..."},"category":"Git"},{"command":"git.stashPopLatest","title":{"value":"Appliquer et supprimer la dernière remise","original":"Pop Latest Stash"},"category":"Git"},{"command":"git.stashApply","title":{"value":"Appliquer la remise (Stash)...","original":"Apply Stash..."},"category":"Git"},{"command":"git.stashApplyLatest","title":{"value":"Appliquer la dernière remise (Stash)","original":"Apply Latest Stash"},"category":"Git"},{"command":"git.stashDrop","title":{"value":"Supprimer le remisage (stash)...","original":"Drop Stash..."},"category":"Git"},{"command":"git.timeline.openDiff","title":{"value":"Ouvrir les modifications","original":"Open Changes"},"icon":"$(compare-changes)","category":"Git"},{"command":"git.timeline.copyCommitId","title":{"value":"Copier l'ID de commit","original":"Copy Commit ID"},"category":"Git"},{"command":"git.timeline.copyCommitMessage","title":{"value":"Copiez le message de commit.","original":"Copy Commit Message"},"category":"Git"},{"command":"git.timeline.selectForCompare","title":{"value":"Sélectionner pour comparaison","original":"Select for Compare"},"category":"Git"},{"command":"git.timeline.compareWithSelected","title":{"value":"Comparer avec la sélection","original":"Compare with Selected"},"category":"Git"},{"command":"git.rebaseAbort","title":{"value":"Abandonner le rebasage","original":"Abort Rebase"},"category":"Git"},{"command":"git.api.getRepositories","title":{"value":"Obtenir les dépôts","original":"Get Repositories"},"category":"Git API"},{"command":"git.api.getRepositoryState","title":{"value":"Obtenir l’état du dépôt","original":"Get Repository State"},"category":"Git API"},{"command":"git.api.getRemoteSources","title":{"value":"Obtenir les sources distantes","original":"Get Remote Sources"},"category":"Git API"}],"keybindings":[{"command":"git.stageSelectedRanges","key":"ctrl+k ctrl+alt+s","mac":"cmd+k cmd+alt+s","when":"isInDiffEditor"},{"command":"git.unstageSelectedRanges","key":"ctrl+k ctrl+n","mac":"cmd+k cmd+n","when":"isInDiffEditor"},{"command":"git.revertSelectedRanges","key":"ctrl+k ctrl+r","mac":"cmd+k cmd+r","when":"isInDiffEditor"}],"menus":{"commandPalette":[{"command":"git.setLogLevel","when":"config.git.enabled && !git.missing"},{"command":"git.clone","when":"config.git.enabled && !git.missing"},{"command":"git.cloneRecursive","when":"config.git.enabled && !git.missing"},{"command":"git.init","when":"config.git.enabled && !git.missing"},{"command":"git.openRepository","when":"config.git.enabled && !git.missing"},{"command":"git.close","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.refresh","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.openFile","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.openHEADFile","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.openChange","when":"false"},{"command":"git.openChangeEditor","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stage","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllTracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageAllMerge","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stageChange","when":"false"},{"command":"git.revertSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.revertChange","when":"false"},{"command":"git.openFile2","when":"false"},{"command":"git.unstage","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.unstageAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.unstageSelectedRanges","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.clean","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAllTracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cleanAllUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.rename","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && resourceScheme == file"},{"command":"git.commit","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStaged","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitEmpty","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedSigned","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedAmend","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAllSigned","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.commitAllAmend","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.rebaseAbort","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && gitRebaseInProgress"},{"command":"git.commitNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitEmptyNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedSignedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitStagedAmendNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllSignedNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.commitAllAmendNoVerify","when":"config.git.enabled && !git.missing && config.git.allowNoVerifyCommit && gitOpenRepositoryCount != 0"},{"command":"git.restoreCommitTemplate","when":"false"},{"command":"git.revealInExplorer","when":"false"},{"command":"git.undoCommit","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.checkout","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.branch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.branchFrom","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteBranch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.renameBranch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.cherryPick","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pull","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pullFrom","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pullRebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.merge","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.rebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.createTag","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.deleteTag","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetch","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetchPrune","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.fetchAll","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.push","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushTo","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushToForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTags","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.pushWithTagsForce","when":"config.git.enabled && !git.missing && config.git.allowForcePush && gitOpenRepositoryCount != 0"},{"command":"git.pushTags","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.addRemote","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.removeRemote","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.sync","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.syncRebase","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.publish","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.showOutput","when":"config.git.enabled"},{"command":"git.ignore","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashIncludeUntracked","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stash","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashPop","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashPopLatest","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashApply","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashApplyLatest","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.stashDrop","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0"},{"command":"git.timeline.openDiff","when":"false"},{"command":"git.timeline.copyCommitId","when":"false"},{"command":"git.timeline.copyCommitMessage","when":"false"},{"command":"git.timeline.selectForCompare","when":"false"},{"command":"git.timeline.compareWithSelected","when":"false"},{"command":"git.api.getRepositories","when":"false"},{"command":"git.api.getRepositoryState","when":"false"},{"command":"git.api.getRemoteSources","when":"false"}],"scm/title":[{"command":"git.commit","group":"navigation","when":"scmProvider == git"},{"command":"git.refresh","group":"navigation","when":"scmProvider == git"},{"command":"git.pull","group":"1_header@1","when":"scmProvider == git"},{"command":"git.push","group":"1_header@2","when":"scmProvider == git"},{"command":"git.clone","group":"1_header@3","when":"scmProvider == git"},{"command":"git.checkout","group":"1_header@4","when":"scmProvider == git"},{"submenu":"git.commit","group":"2_main@1","when":"scmProvider == git"},{"submenu":"git.changes","group":"2_main@2","when":"scmProvider == git"},{"submenu":"git.pullpush","group":"2_main@3","when":"scmProvider == git"},{"submenu":"git.branch","group":"2_main@4","when":"scmProvider == git"},{"submenu":"git.remotes","group":"2_main@5","when":"scmProvider == git"},{"submenu":"git.stash","group":"2_main@6","when":"scmProvider == git"},{"submenu":"git.tags","group":"2_main@7","when":"scmProvider == git"},{"command":"git.showOutput","group":"3_footer","when":"scmProvider == git"}],"scm/sourceControl":[{"command":"git.close","group":"navigation","when":"scmProvider == git"}],"scm/resourceGroup/context":[{"command":"git.stageAllMerge","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.stageAllMerge","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstageAll","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"1_modification"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"1_modification"},{"command":"git.cleanAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"inline@2"},{"command":"git.stageAll","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges == mixed","group":"inline@2"},{"command":"git.cleanAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"1_modification"},{"command":"git.stageAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"1_modification"},{"command":"git.cleanAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"inline@2"},{"command":"git.stageAllTracked","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.untrackedChanges != mixed","group":"inline@2"},{"command":"git.cleanAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.stageAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.cleanAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.stageAllUntracked","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"}],"scm/resourceFolder/context":[{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification@3"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification@3"}],"scm/resourceState/context":[{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == merge","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == merge","group":"inline@2"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == merge","group":"2_view"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == merge && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == index","group":"navigation"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"1_modification"},{"command":"git.unstage","when":"scmProvider == git && scmResourceGroup == index","group":"inline@2"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == index","group":"2_view"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == index && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == workingTree","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == workingTree","group":"inline@2"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == workingTree && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == workingTree","group":"1_modification@3"},{"command":"git.revealInExplorer","when":"scmProvider == git && scmResourceGroup == workingTree","group":"2_view"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.openHEADFile","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.openFile","when":"scmProvider == git && scmResourceGroup == untracked","group":"navigation"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository","group":"1_modification"},{"command":"git.clean","when":"scmProvider == git && scmResourceGroup == untracked && !gitFreshRepository","group":"inline@2"},{"command":"git.stage","when":"scmProvider == git && scmResourceGroup == untracked","group":"inline@2"},{"command":"git.openFile2","when":"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && config.git.openDiffOnClick","group":"inline@1"},{"command":"git.openChange","when":"scmProvider == git && scmResourceGroup == untracked && config.git.showInlineOpenFileAction && !config.git.openDiffOnClick","group":"inline@1"},{"command":"git.ignore","when":"scmProvider == git && scmResourceGroup == untracked","group":"1_modification@3"}],"editor/title":[{"command":"git.openFile","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.openFile","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInNotebookTextDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.openChangeEditor","group":"navigation","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == file"},{"command":"git.stageSelectedRanges","group":"2_git@1","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.unstageSelectedRanges","group":"2_git@2","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.revertSelectedRanges","group":"2_git@3","when":"config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"}],"editor/context":[{"command":"git.stageSelectedRanges","group":"2_git@1","when":"isInDiffRightEditor && !isInEmbeddedDiffEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.unstageSelectedRanges","group":"2_git@2","when":"isInDiffRightEditor && !isInEmbeddedDiffEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"},{"command":"git.revertSelectedRanges","group":"2_git@3","when":"isInDiffRightEditor && !isInEmbeddedDiffEditor && config.git.enabled && !git.missing && gitOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^git$|^file$/"}],"scm/change/title":[{"command":"git.stageChange","when":"config.git.enabled && !git.missing && originalResourceScheme == git"},{"command":"git.revertChange","when":"config.git.enabled && !git.missing && originalResourceScheme == git"}],"timeline/item/context":[{"command":"git.timeline.openDiff","group":"1_actions","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.compareWithSelected","group":"3_compare@1","when":"config.git.enabled && !git.missing && git.timeline.selectedForCompare && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.selectForCompare","group":"3_compare@2","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file\\b/ && !listMultiSelection"},{"command":"git.timeline.copyCommitId","group":"5_copy@1","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection"},{"command":"git.timeline.copyCommitMessage","group":"5_copy@2","when":"config.git.enabled && !git.missing && timelineItem =~ /git:file:commit\\b/ && !listMultiSelection"}],"git.commit":[{"command":"git.commit","group":"1_commit@1"},{"command":"git.commitStaged","group":"1_commit@2"},{"command":"git.commitAll","group":"1_commit@3"},{"command":"git.undoCommit","group":"1_commit@4"},{"command":"git.rebaseAbort","group":"1_commit@5"},{"command":"git.commitNoVerify","group":"1_commit@6","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedNoVerify","group":"1_commit@7","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllNoVerify","group":"1_commit@8","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedAmend","group":"2_amend@1"},{"command":"git.commitAllAmend","group":"2_amend@2"},{"command":"git.commitStagedAmendNoVerify","group":"2_amend@3","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllAmendNoVerify","group":"2_amend@4","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitStagedSigned","group":"3_signoff@1"},{"command":"git.commitAllSigned","group":"3_signoff@2"},{"command":"git.commitStagedSignedNoVerify","group":"3_signoff@3","when":"config.git.allowNoVerifyCommit"},{"command":"git.commitAllSignedNoVerify","group":"3_signoff@4","when":"config.git.allowNoVerifyCommit"}],"git.changes":[{"command":"git.stageAll","group":"changes@1"},{"command":"git.unstageAll","group":"changes@2"},{"command":"git.cleanAll","group":"changes@3"}],"git.pullpush":[{"command":"git.sync","group":"1_sync@1"},{"command":"git.syncRebase","when":"gitState == idle","group":"1_sync@2"},{"command":"git.pull","group":"2_pull@1"},{"command":"git.pullRebase","group":"2_pull@2"},{"command":"git.pullFrom","group":"2_pull@3"},{"command":"git.push","group":"3_push@1"},{"command":"git.pushForce","when":"config.git.allowForcePush","group":"3_push@2"},{"command":"git.pushTo","group":"3_push@3"},{"command":"git.pushToForce","when":"config.git.allowForcePush","group":"3_push@4"},{"command":"git.fetch","group":"4_fetch@1"},{"command":"git.fetchPrune","group":"4_fetch@2"},{"command":"git.fetchAll","group":"4_fetch@3"}],"git.branch":[{"command":"git.merge","group":"branch@1"},{"command":"git.rebase","group":"branch@2"},{"command":"git.branch","group":"branch@3"},{"command":"git.branchFrom","group":"branch@4"},{"command":"git.renameBranch","group":"branch@5"},{"command":"git.deleteBranch","group":"branch@6"},{"command":"git.publish","group":"branch@7"}],"git.remotes":[{"command":"git.addRemote","group":"remote@1"},{"command":"git.removeRemote","group":"remote@2"}],"git.stash":[{"command":"git.stash","group":"stash@1"},{"command":"git.stashIncludeUntracked","group":"stash@2"},{"command":"git.stashApplyLatest","group":"stash@3"},{"command":"git.stashApply","group":"stash@4"},{"command":"git.stashPopLatest","group":"stash@5"},{"command":"git.stashPop","group":"stash@6"},{"command":"git.stashDrop","group":"stash@7"}],"git.tags":[{"command":"git.createTag","group":"tags@1"},{"command":"git.deleteTag","group":"tags@2"}]},"submenus":[{"id":"git.commit","label":"Valider"},{"id":"git.changes","label":"Changements"},{"id":"git.pullpush","label":"Tirer (pull), envoyer (push)"},{"id":"git.branch","label":"Branche"},{"id":"git.remotes","label":"À distance"},{"id":"git.stash","label":"Remiser (stash)"},{"id":"git.tags","label":"Étiquettes"}],"configuration":{"title":"Git","properties":{"git.enabled":{"type":"boolean","scope":"resource","description":"Indique si git est activé.","default":true},"git.path":{"type":["string","null","array"],"markdownDescription":"Chemin et nom de fichier de l'exécutable git. Exemple : 'C:\\Program Files\\Git\\bin\\git.exe' (Windows). Il peut s'agir également d'un tableau de valeurs de chaîne contenant plusieurs chemins de recherche.","default":null,"scope":"machine"},"git.autoRepositoryDetection":{"type":["boolean","string"],"enum":[true,false,"subFolders","openEditors"],"enumDescriptions":["Recherchez dans les deux sous-dossiers du dossier ouvert en cours et dans les dossiers parents de fichiers ouverts.","Désactivez l’analyse de dépôt automatique.","Rechercher dans les sous-dossiers du dossier actuellement ouvert.","Rechercher dans les dossiers parents de fichiers ouverts."],"description":"Configure le moment où les dépôts doivent être détectés automatiquement.","default":true},"git.autorefresh":{"type":"boolean","description":"Détermine si l'actualisation automatique est activée.","default":true},"git.autofetch":{"type":["boolean","string"],"enum":[true,false,"all"],"scope":"resource","markdownDescription":"Quand la valeur est true, les commits sont automatiquement récupérés (fetch) à partir du dépôt distant par défaut du dépôt Git actuel. Quand la valeur est 'all', les commits sont récupérés à partir de tous les dépôts distants.","default":false,"tags":["usesOnlineServices"]},"git.autofetchPeriod":{"type":"number","scope":"resource","markdownDescription":"Durée en secondes entre chaque récupération git automatique quand `git.autofetch` est activé.","default":180},"git.branchValidationRegex":{"type":"string","description":"Expression régulière pour valider les nouveaux noms de branche.","default":""},"git.branchWhitespaceChar":{"type":"string","description":"Le caractère pour remplacer les espaces dans les nouveaux noms de branche.","default":"-"},"git.confirmSync":{"type":"boolean","description":"Confirmez avant de synchroniser des dépôts git.","default":true},"git.countBadge":{"type":"string","enum":["all","tracked","off"],"enumDescriptions":["Compter tous les changements.","Compter uniquement les changements suivis.","Désactivez le compteur."],"description":"Contrôle le badge de compte Git.","default":"all","scope":"resource"},"git.checkoutType":{"type":"array","items":{"type":"string","enum":["local","tags","remote"],"enumDescriptions":["Branches locales","Étiquettes","Branches distantes"]},"uniqueItems":true,"markdownDescription":"Contrôle le type des références Git listées au moment de l'exécution de Extraire vers...","default":["local","remote","tags"]},"git.ignoreLegacyWarning":{"type":"boolean","description":"Ignore l'avertissement Git hérité.","default":false},"git.ignoreMissingGitWarning":{"type":"boolean","description":"Ignore l'avertissement quand Git est manquant.","default":false},"git.ignoreWindowsGit27Warning":{"type":"boolean","description":"Ignore l'avertissement lorsque Git 2.25 - 2.26 est installé sur Windows.","default":false},"git.ignoreLimitWarning":{"type":"boolean","description":"Ignore l'avertissement en cas de changements trop nombreux dans un dépôt.","default":false},"git.ignoreRebaseWarning":{"type":"boolean","description":"Ignore l'avertissement quand il semble que la branche ait été rebasée au moment du tirage (pull).","default":false},"git.defaultCloneDirectory":{"type":["string","null"],"default":null,"scope":"machine","description":"Emplacement par défaut où cloner un dépôt git."},"git.enableSmartCommit":{"type":"boolean","scope":"resource","description":"Validez toutes les modifications en l'absence de modifications en attente.","default":false},"git.smartCommitChanges":{"type":"string","enum":["all","tracked"],"enumDescriptions":["Organise automatiquement toutes les modifications.","Organise automatiquement les modifications suivies uniquement."],"scope":"resource","description":"Contrôle les modifications organisées automatiquement par Smart Commit.","default":"all"},"git.suggestSmartCommit":{"type":"boolean","scope":"resource","description":"Propose d'activer Smart Commit (valide toutes les modifications en l'absence de modifications organisées).","default":true},"git.enableCommitSigning":{"type":"boolean","scope":"resource","description":"Active la signature de commit avec GPG ou X.509.","default":false},"git.confirmEmptyCommits":{"type":"boolean","scope":"resource","description":"Confirmez toujours la création de commits vides pour la commande 'Git: Commit Empty'.","default":true},"git.decorations.enabled":{"type":"boolean","default":true,"description":"Contrôle si Git contribue aux couleurs et aux badges de l'Explorateur et de la vue Éditeurs ouverts."},"git.enableStatusBarSync":{"type":"boolean","default":true,"description":"Contrôle si la commande Git Sync apparaît dans la barre d'état.","scope":"resource"},"git.followTagsWhenSync":{"type":"boolean","scope":"resource","default":false,"description":"Suit l'envoi (push) de toutes les étiquettes au moment de l'exécution de la commande de synchronisation."},"git.promptToSaveFilesBeforeStash":{"type":"string","enum":["always","staged","never"],"enumDescriptions":["Vérifiez les fichiers non enregistrés.","Vérifiez uniquement les fichiers organisés non enregistrés.","Désactive cette vérification."],"scope":"resource","default":"always","description":"Contrôle si Git doit rechercher les fichiers non enregistrés avant de faire un stash des changements."},"git.promptToSaveFilesBeforeCommit":{"type":"string","enum":["always","staged","never"],"enumDescriptions":["Vérifiez les fichiers non enregistrés.","Vérifiez uniquement les fichiers organisés non enregistrés.","Désactivez la vérification."],"scope":"resource","default":"always","description":"Contrôle si Git doit vérifier les fichiers non sauvegardés avant d'effectuer le commit."},"git.postCommitCommand":{"type":"string","enum":["none","push","sync"],"enumDescriptions":["N'exécutez pas de commande après une validation.","Exécutez 'Git Push' après une validation réussie.","Exécutez 'Git Sync' après une validation réussie."],"markdownDescription":"Exécute une commande git après un commit réussi.","scope":"resource","default":"none"},"git.openAfterClone":{"type":"string","enum":["always","alwaysNewWindow","whenNoFolderOpen","prompt"],"enumDescriptions":["Effectue toujours l'ouverture dans la fenêtre active.","Effectue toujours l'ouverture dans une nouvelle fenêtre.","Effectue uniquement l'ouverture dans la fenêtre active quand aucun dossier n'est ouvert.","Demande toujours l'action à effectuer."],"default":"prompt","description":"Détermine s'il est nécessaire d'ouvrir un dépôt automatiquement après le clonage."},"git.showInlineOpenFileAction":{"type":"boolean","default":true,"description":"Contrôle s’il faut afficher une action Ouvrir le fichier dans l’affichage des modifications de Git."},"git.showPushSuccessNotification":{"type":"boolean","description":"Contrôle s’il faut afficher une notification en cas de réussite d'un envoi (push).","default":false},"git.inputValidation":{"type":"string","enum":["always","warn","off"],"default":"warn","description":"Contrôle quand afficher la validation de la saisie du message de commit."},"git.inputValidationLength":{"type":"number","default":72,"description":"Contrôle le taille de la longueur de message de commit pour afficher un avertissement."},"git.inputValidationSubjectLength":{"type":["number","null"],"default":50,"description":"Contrôle le seuil de longueur de l'objet du message de validation pour afficher un avertissement. Annulez pour hériter la valeur de 'config.inputValidationLength'."},"git.detectSubmodules":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle s’il faut détecter automatiquement les sous-modules git."},"git.detectSubmodulesLimit":{"type":"number","scope":"resource","default":10,"description":"Contrôle la limite de sous-modules git détectés."},"git.alwaysShowStagedChangesResourceGroup":{"type":"boolean","scope":"resource","default":false,"description":"Toujours afficher le groupe de ressources des changements en zone de transit (Staged)."},"git.alwaysSignOff":{"type":"boolean","scope":"resource","default":false,"description":"Contrôle le flag signoff pour toutes les modifications."},"git.ignoreSubmodules":{"type":"boolean","scope":"resource","default":false,"description":"Ignore les modifications apportées aux sous-modules dans l'arborescence de fichiers."},"git.ignoredRepositories":{"type":"array","items":{"type":"string"},"default":[],"scope":"window","description":"Liste des dépôts git à ignorer."},"git.scanRepositories":{"type":"array","items":{"type":"string"},"default":[],"scope":"resource","description":"Liste des chemins d’accès pour rechercher des dépôts git."},"git.showProgress":{"type":"boolean","description":"Contrôle si les actions git doivent afficher la progression.","default":true,"scope":"resource"},"git.rebaseWhenSync":{"type":"boolean","scope":"resource","default":false,"description":"Forcez git à utiliser rebase pendant l'exécution de la commande sync."},"git.fetchOnPull":{"type":"boolean","scope":"resource","default":false,"description":"Si activé, récupère toutes les branches au tirage. Sinon, récupère seulement la branche actuelle."},"git.pruneOnFetch":{"type":"boolean","scope":"resource","default":false,"description":"Effectue un élagage au moment de la récupération."},"git.pullTags":{"type":"boolean","scope":"resource","default":true,"description":"Récupérez toutes les balises pendant le tirage."},"git.autoStash":{"type":"boolean","scope":"resource","default":false,"description":"Remisez (stash) les changements avant de les tirer et de les restaurer après un tirage réussi."},"git.allowForcePush":{"type":"boolean","default":false,"description":"Contrôle si force push (avec ou sans lease) est activé."},"git.useForcePushWithLease":{"type":"boolean","default":true,"description":"Contrôles si force push utilise la variante force-with-lease plus sûr."},"git.confirmForcePush":{"type":"boolean","default":true,"description":"Détermine s’il faut demander confirmation avant de forcer le push."},"git.allowNoVerifyCommit":{"type":"boolean","default":false,"description":"Détermine si les commits sans exécution des crochets pre-commit et commit-msg sont autorisés."},"git.confirmNoVerifyCommit":{"type":"boolean","default":true,"description":"Contrôle s’il faut demander une confirmation avant la validation sans vérification."},"git.openDiffOnClick":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle si l'éditeur de diff doit être ouvert quand l'utilisateur clique sur un changement. Sinon, l'éditeur normal est ouvert."},"git.supportCancellation":{"type":"boolean","scope":"resource","default":false,"description":"Contrôle si une notification apparaît lors de l'exécution de l'action Sync, qui permet à l'utilisateur d'annuler l'opération."},"git.branchSortOrder":{"type":"string","enum":["committerdate","alphabetically"],"default":"committerdate","description":"Contrôle l'ordre de tri des branches."},"git.untrackedChanges":{"type":"string","enum":["mixed","separate","hidden"],"enumDescriptions":["Tous les changements, suivis et non suivis, apparaissent ensemble et se comportent de la même manière.","Les changements non suivis apparaissent séparément dans la vue Contrôle de code source. Ils sont également exclus de plusieurs actions.","Les changements non suivis sont masqués et exclus de plusieurs actions."],"default":"mixed","description":"Contrôle le comportement des changements non suivis.","scope":"resource"},"git.requireGitUserConfig":{"type":"boolean","description":"Contrôle si une configuration utilisateur Git explicite est nécessaire ou si elle peut être devinée par Git quand elle est manquante.","default":true},"git.showCommitInput":{"type":"boolean","scope":"resource","default":true,"description":"Détermine si l'entrée de commit doit être affichée dans le panneau de contrôle de code source Git."},"git.terminalAuthentication":{"type":"boolean","scope":"resource","default":true,"description":"Détermine si VS Code doit être activé en tant que gestionnaire d'authentification pour les processus git générés dans le terminal intégré. Remarque : Les terminaux doivent redémarrer pour permettre la prise en compte des changements apportés à ce paramètre."},"git.useCommitInputAsStashMessage":{"type":"boolean","scope":"resource","default":false,"description":"Détermine s'il est nécessaire d'utiliser le message de la zone d'entrée de commit en tant que message de stash par défaut."},"git.githubAuthentication":{"deprecationMessage":"This setting is now deprecated, please use `github.gitAuthentication` instead."},"git.timeline.date":{"type":"string","enum":["committed","authored"],"enumDescriptions":["Utiliser la date de commit","Utiliser la date de création"],"default":"committed","description":"Contrôle la date à utiliser pour les éléments de la vue Chronologie.","scope":"window"},"git.timeline.showAuthor":{"type":"boolean","default":true,"description":"Contrôle si l'auteur du commit doit être affiché dans la vue Chronologie.","scope":"window"},"git.showUnpublishedCommitsButton":{"type":"string","enum":["always","whenEmpty","never"],"enumDescriptions":["Affiche toujours le bouton d’action, s’il existe des validations non publiées.","Affiche uniquement le bouton d’action s’il n’y a pas d’autres modifications et s’il existe des validations non publiées.","N’affiche jamais le bouton d’action."],"default":"whenEmpty","description":"Contrôle s’il faut afficher un bouton d’action pour synchroniser ou publier, s’il existe des validations non publiées.","scope":"resource"},"git.statusLimit":{"type":"number","scope":"resource","default":10000,"description":"Contrôle comment limiter le nombre de modifications qui peuvent être analysées à partir de la commande d’état Git. Peut être défini sur 0 sans limite."}}},"colors":[{"id":"gitDecoration.addedResourceForeground","description":"Couleur des ressources ajoutées.","defaults":{"light":"#587c0c","dark":"#81b88b","highContrast":"#1b5225"}},{"id":"gitDecoration.modifiedResourceForeground","description":"Couleur pour les ressources modifiées.","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitDecoration.deletedResourceForeground","description":"Couleur des ressources supprimées.","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitDecoration.renamedResourceForeground","description":"Couleur des ressources renommées ou copiées.","defaults":{"light":"#007100","dark":"#73C991","highContrast":"#73C991"}},{"id":"gitDecoration.untrackedResourceForeground","description":"Couleur pour les ressources non tracées.","defaults":{"light":"#007100","dark":"#73C991","highContrast":"#73C991"}},{"id":"gitDecoration.ignoredResourceForeground","description":"Couleur des ressources ignorées.","defaults":{"light":"#8E8E90","dark":"#8C8C8C","highContrast":"#A7A8A9"}},{"id":"gitDecoration.stageModifiedResourceForeground","description":"Couleur des ressources modifiées qui ont été indexées.","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitDecoration.stageDeletedResourceForeground","description":"Couleur des ressources supprimées qui ont été indexées.","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitDecoration.conflictingResourceForeground","description":"Couleur pour les ressources avec des conflits.","defaults":{"light":"#ad0707","dark":"#e4676b","highContrast":"#c74e39"}},{"id":"gitDecoration.submoduleResourceForeground","description":"Couleur pour les ressources de sous-module.","defaults":{"light":"#1258a7","dark":"#8db9e2","highContrast":"#8db9e2"}}],"configurationDefaults":{"[git-commit]":{"editor.rulers":[72],"workbench.editor.restoreViewState":false},"[git-rebase]":{"workbench.editor.restoreViewState":false}},"viewsWelcome":[{"view":"scm","contents":"Si vous voulez utiliser des fonctionnalités git, activez git dans vos [paramètres](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).\r\nPour en savoir plus sur l'utilisation de Git et du contrôle de code source dans VS Code, [lisez notre documentation](https://aka.ms/vscode-scm).","when":"!config.git.enabled"},{"view":"scm","contents":"Aucune installation git valide n'a été détectée, plus de détails sont disponibles dans la [sortie git](command:git.showOutput).\r\n[Installez git](https://git-scm.com/) ou découvrez plus d'informations sur l'utilisation de Git et du contrôle de code source dans VS Code dans [notre documentation](https://aka.ms/vscode-scm).\r\nSi vous utilisez un système de contrôle de version différent, vous pouvez [rechercher dans la Plage de marché](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) des extensions supplémentaires.","when":"config.git.enabled && git.missing"},{"view":"scm","contents":"Pour utiliser des fonctionnalités git, vous pouvez ouvrir un dossier contenant un dépôt git ou le cloner à partir d'une URL.\r\n[Ouvrir un dossier](command:vscode.openFolder)\r\n[Cloner le dépôt](command:git.clone)\r\nPour en savoir plus sur la façon d'utiliser git et le contrôle de code source dans VS Code [lisez nos documents](https://aka.ms/vscode-scm).","when":"config.git.enabled && workbenchState == empty","enablement":"git.state == initialized","group":"2_open@1"},{"view":"scm","contents":"Le dossier actif ne contient aucun dépôt git. Vous pouvez initialiser un dépôt pour activer les fonctionnalités de contrôle de code source basées sur git.\r\n[Initialiser un dépôt](command:git.init?%5Btrue%5D)\r\nPour en savoir plus sur l’utilisation de git et le contrôle de code source dans VSCode, [consultez notre documentation](https://aka.ms/vscode-scm).","when":"config.git.enabled && workbenchState == folder","enablement":"git.state == initialized","group":"5_scm@1"},{"view":"scm","contents":"L’espace de travail actif n’a aucun dossier contenant des dépôts git. Vous pouvez initialiser un dépôt dans un dossier pour activer les fonctionnalités de contrôle de code source basées sur git.\r\n[Initialiser un dépôt](command:git.init)\r\nPour en savoir plus sur l’utilisation de git et le contrôle de code source dans VS Code, [consultez notre documentation](https://aka.ms/vscode-scm).","when":"config.git.enabled && workbenchState == workspace && workspaceFolderCount != 0","enablement":"git.state == initialized","group":"5_scm@1"},{"view":"scm","contents":"L'espace de travail actuellement ouvert n'a aucun dossier contenant des dépôts git.\r\n[Ajouter un dossier à l'espace de travail](command:workbench.action.addRootFolder)\r\nPour en savoir plus sur la façon d'utiliser git et le contrôle de code source dans VS Code [lisez nos documents](https://aka.ms/vscode-scm).","when":"config.git.enabled && workbenchState == workspace && workspaceFolderCount == 0","enablement":"git.state == initialized","group":"2_open@1"},{"view":"explorer","contents":"Vous pouvez cloner un dépôt localement.\r\n[Cloner un dépôt](command:git.clone 'Cloner un dépôt une fois l’extension Git activée')","when":"config.git.enabled","enablement":"git.state == initialized","group":"5_scm@1"},{"view":"explorer","contents":"Pour en savoir plus sur l'utilisation de Git et du contrôle de code source dans VS Code, [lisez notre documentation](https://aka.ms/vscode-scm).","when":"config.git.enabled","enablement":"git.state == initialized","group":"5_scm@10"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.git","identifier":{"value":"vscode.git","_lower":"vscode.git"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/git","path":"/snap/code/85/usr/share/code/resources/app/extensions/git","scheme":"file"}},{"name":"git-base","displayName":"Git Base","description":"Contributions et sélecteurs statiques Git.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"categories":["Other"],"activationEvents":["*"],"main":"./dist/extension.js","icon":"resources/icons/git.png","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"git-base.api.getRemoteSources","title":{"value":"Obtenir les sources distantes","original":"Get Remote Sources"},"category":"Git Base API"}],"menus":{"commandPalette":[{"command":"git-base.api.getRemoteSources","when":"false"}]},"languages":[{"id":"git-commit","aliases":["Git Commit Message","git-commit"],"filenames":["COMMIT_EDITMSG","MERGE_MSG"],"configuration":"./languages/git-commit.language-configuration.json"},{"id":"git-rebase","aliases":["Git Rebase Message","git-rebase"],"filenames":["git-rebase-todo"],"configuration":"./languages/git-rebase.language-configuration.json"},{"id":"ignore","aliases":["Ignore","ignore"],"extensions":[".gitignore_global",".gitignore"],"configuration":"./languages/ignore.language-configuration.json"}],"grammars":[{"language":"git-commit","scopeName":"text.git-commit","path":"./syntaxes/git-commit.tmLanguage.json"},{"language":"git-rebase","scopeName":"text.git-rebase","path":"./syntaxes/git-rebase.tmLanguage.json"},{"language":"ignore","scopeName":"source.ignore","path":"./syntaxes/ignore.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.git-base","identifier":{"value":"vscode.git-base","_lower":"vscode.git-base"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/git-base","path":"/snap/code/85/usr/share/code/resources/app/extensions/git-base","scheme":"file"}},{"name":"github","displayName":"GitHub","description":"Fonctionnalités GitHub pour VS Code","publisher":"vscode","license":"MIT","version":"0.0.1","engines":{"vscode":"^1.41.0"},"icon":"images/icon.png","categories":["Other"],"activationEvents":["*"],"extensionDependencies":["vscode.git-base"],"main":"./dist/extension.js","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"github.publish","title":"Publish to GitHub"}],"menus":{"commandPalette":[{"command":"github.publish","when":"git-base.gitEnabled"}]},"configuration":[{"title":"GitHub","properties":{"github.gitAuthentication":{"type":"boolean","scope":"resource","default":true,"description":"Détermine si l'authentification GitHub automatique doit être activée pour les commandes Git dans VS Code."}}}],"viewsWelcome":[{"view":"scm","contents":"Vous pouvez également publier directement ce dossier sur un dépôt GitHub. Une fois la publication effectuée, vous avez accès aux fonctionnalités de contrôle de code source gérées par git et GitHub.\r\n[$(github) Publier sur GitHub](command:github.publish)","when":"config.git.enabled && git.state == initialized && workbenchState == folder"},{"view":"scm","contents":"Vous pouvez également publier directement un dossier d’espace de travail sur un dépôt GitHub. Une fois la publication effectuée, vous avez accès aux fonctionnalités de contrôle de code source gérées par git et GitHub.\r\n[$(github) Publier sur GitHub](command:github.publish)","when":"config.git.enabled && git.state == initialized && workbenchState == workspace && workspaceFolderCount != 0"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.github","identifier":{"value":"vscode.github","_lower":"vscode.github"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/github","path":"/snap/code/85/usr/share/code/resources/app/extensions/github","scheme":"file"}},{"name":"github-authentication","displayName":"Authentification GitHub","description":"Fournisseur d'authentification GitHub","publisher":"vscode","license":"MIT","version":"0.0.2","engines":{"vscode":"^1.41.0"},"icon":"images/icon.png","categories":["Other"],"extensionKind":["ui","workspace"],"activationEvents":["onAuthenticationRequest:github","onAuthenticationRequest:github-enterprise"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"authentication":[{"label":"GitHub","id":"github"},{"label":"GitHub Enterprise","id":"github-enterprise"}],"configuration":{"title":"GitHub Enterprise Authentication Provider","properties":{"github-enterprise.uri":{"type":"string","description":"URI of your GitHub Enterprise Instance"}}}},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","main":"./dist/extension.js","browser":"./dist/browser/extension.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.github-authentication","identifier":{"value":"vscode.github-authentication","_lower":"vscode.github-authentication"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/github-authentication","path":"/snap/code/85/usr/share/code/resources/app/extensions/github-authentication","scheme":"file"}},{"name":"go","displayName":"Bases du langage Go","description":"Fournit la coloration syntaxique et la correspondance de parenthèses dans les fichiers Go.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin jeff-hykin/better-go-syntax export/generated.tmLanguage.json ./syntaxes/go.tmLanguage.json"},"contributes":{"languages":[{"id":"go","extensions":[".go"],"aliases":["Go"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"go","scopeName":"source.go","path":"./syntaxes/go.tmLanguage.json"}],"configurationDefaults":{"[go]":{"editor.insertSpaces":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.go","identifier":{"value":"vscode.go","_lower":"vscode.go"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/go","path":"/snap/code/85/usr/share/code/resources/app/extensions/go","scheme":"file"}},{"name":"groovy","displayName":"Concepts de base du langage Groovy","description":"Fournit des extraits de code, la coloration syntaxique et la correspondance des crochets dans les fichiers Groovy.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/groovy.tmbundle Syntaxes/Groovy.tmLanguage ./syntaxes/groovy.tmLanguage.json"},"contributes":{"languages":[{"id":"groovy","aliases":["Groovy","groovy"],"extensions":[".groovy",".gvy",".gradle",".jenkinsfile",".nf"],"filenames":["Jenkinsfile"],"filenamePatterns":["Jenkinsfile.*"],"firstLine":"^#!.*\\bgroovy\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"groovy","scopeName":"source.groovy","path":"./syntaxes/groovy.tmLanguage.json"}],"snippets":[{"language":"groovy","path":"./snippets/groovy.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.groovy","identifier":{"value":"vscode.groovy","_lower":"vscode.groovy"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/groovy","path":"/snap/code/85/usr/share/code/resources/app/extensions/groovy","scheme":"file"}},{"name":"grunt","publisher":"vscode","description":"Extension to add Grunt capabilities to VS Code.","displayName":"Grunt support for VS Code","version":"1.0.0","icon":"images/grunt.png","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"grunt","type":"object","title":"Grunt","properties":{"grunt.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Contrôle l’activation de la détection des tâches Grunt. La détection des tâches Grunt peut entraîner l’exécution de fichiers dans un espace de travail ouvert."}}},"taskDefinitions":[{"type":"grunt","required":["task"],"properties":{"task":{"type":"string","description":"La tâche Grunt à personnaliser."},"args":{"type":"array","description":"Arguments de ligne de commande à passer à la tâche grunt"},"file":{"type":"string","description":"Le fichier Grunt qui fournit la tâche. Peut être oublié."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.grunt","identifier":{"value":"vscode.grunt","_lower":"vscode.grunt"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/grunt","path":"/snap/code/85/usr/share/code/resources/app/extensions/grunt","scheme":"file"}},{"name":"gulp","publisher":"vscode","description":"Extension qui ajoute des fonctionnalités Gulp à VS Code.","displayName":"Prise en charge de Gulp pour VS Code","version":"1.0.0","icon":"images/gulp.png","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"gulp","type":"object","title":"Gulp","properties":{"gulp.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Contrôle l’activation de la détection des tâches Gulp. La détection des tâches Gulp peut entraîner l’exécution de fichiers dans un espace de travail ouvert."}}},"taskDefinitions":[{"type":"gulp","required":["task"],"properties":{"task":{"type":"string","description":"La tâche Gulp à personnaliser."},"file":{"type":"string","description":"Le fichier Gulp qui fournit la tâche. Peut être oublié."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.gulp","identifier":{"value":"vscode.gulp","_lower":"vscode.gulp"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/gulp","path":"/snap/code/85/usr/share/code/resources/app/extensions/gulp","scheme":"file"}},{"name":"handlebars","displayName":"Bases du langage Handlebars","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Handlebars.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin daaain/Handlebars grammars/Handlebars.json ./syntaxes/Handlebars.tmLanguage.json"},"contributes":{"languages":[{"id":"handlebars","extensions":[".handlebars",".hbs",".hjs"],"aliases":["Handlebars","handlebars"],"mimetypes":["text/x-handlebars-template"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"handlebars","scopeName":"text.html.handlebars","path":"./syntaxes/Handlebars.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.handlebars","identifier":{"value":"vscode.handlebars","_lower":"vscode.handlebars"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/handlebars","path":"/snap/code/85/usr/share/code/resources/app/extensions/handlebars","scheme":"file"}},{"name":"hlsl","displayName":"Concepts de base du langage HLSL","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers HLSL.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin tgjones/shaders-tmLanguage grammars/hlsl.json ./syntaxes/hlsl.tmLanguage.json"},"contributes":{"languages":[{"id":"hlsl","extensions":[".hlsl",".hlsli",".fx",".fxh",".vsh",".psh",".cginc",".compute"],"aliases":["HLSL","hlsl"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"hlsl","path":"./syntaxes/hlsl.tmLanguage.json","scopeName":"source.hlsl"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.hlsl","identifier":{"value":"vscode.hlsl","_lower":"vscode.hlsl"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/hlsl","path":"/snap/code/85/usr/share/code/resources/app/extensions/hlsl","scheme":"file"}},{"name":"html","displayName":"Notions de base du langage HTML","description":"Fournit la coloration syntaxique, la mise en correspondance des crochets et les extraits dans les fichiers HTML.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"contributes":{"languages":[{"id":"html","extensions":[".html",".htm",".shtml",".xhtml",".xht",".mdoc",".jsp",".asp",".aspx",".jshtm",".volt",".ejs",".rhtml"],"aliases":["HTML","htm","html","xhtml"],"mimetypes":["text/html","text/x-jshtm","text/template","text/ng-template","application/xhtml+xml"],"configuration":"./language-configuration.json"}],"grammars":[{"scopeName":"text.html.basic","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}},{"language":"html","scopeName":"text.html.derivative","path":"./syntaxes/html-derivative.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.css":"css","source.js":"javascript","source.python":"python","source.smarty":"smarty"},"tokenTypes":{"meta.tag string.quoted":"other"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.html","identifier":{"value":"vscode.html","_lower":"vscode.html"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/html","path":"/snap/code/85/usr/share/code/resources/app/extensions/html","scheme":"file"}},{"name":"html-language-features","displayName":"Fonctionnalités de langage HTML","description":"Fournit une prise en charge de langage complète pour les fichiers HTML et Handlebar","version":"1.0.0","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"0.10.x"},"icon":"icons/html.png","activationEvents":["onLanguage:html","onLanguage:handlebars"],"main":"./client/dist/node/htmlClientMain","browser":"./client/dist/browser/htmlClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"categories":["Programming Languages"],"contributes":{"configuration":{"id":"html","order":20,"type":"object","title":"HTML","properties":{"html.completion.attributeDefaultValue":{"type":"string","scope":"resource","enum":["doublequotes","singlequotes","empty"],"enumDescriptions":["La valeur de l'attribut est fixée à \"\".","La valeur de l'attribut est fixée à ''.","La valeur de l'attribut n'est pas définie."],"default":"doublequotes","description":"Contrôle la valeur par défaut des attributs une fois l’achèvement accepté"},"html.customData":{"type":"array","markdownDescription":"Liste de chemins de fichiers relatifs pointant vers des fichiers JSON respectant le [format de données personnalisé](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\r\n\r\nVS Code charge des données personnalisées au démarrage pour améliorer la prise en charge des balises, attributs et valeurs d’attribut HTML personnalisés que vous spécifiez dans les fichiers JSON.\r\n\r\nLes chemins de fichiers sont relatifs à l’espace de travail, et seuls les paramètres de dossier d’espace de travail sont pris en compte.","default":[],"items":{"type":"string"},"scope":"resource"},"html.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Activer/désactiver le formateur HTML par défaut."},"html.format.wrapLineLength":{"type":"integer","scope":"resource","default":120,"description":"Nombre maximal de caractères par ligne (0 = désactiver)."},"html.format.unformatted":{"type":["string","null"],"scope":"resource","default":"wbr","markdownDescription":"Liste des balises, séparées par des virgules, qui ne devrait pas être reformatées. `null` par défaut toutes les balises répertoriées dans https://www.w3.org/TR/html5/dom.html#phrasing-content."},"html.format.contentUnformatted":{"type":["string","null"],"scope":"resource","default":"pre,code,textarea","markdownDescription":"Liste des balises, séparés par des virgules, où le contenu ne devrait pas être reformaté. `null` par défaut pour la balise `pre`."},"html.format.indentInnerHtml":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Mettez en retrait les sections '<head>' et '<body>'."},"html.format.preserveNewLines":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle si les sauts de ligne existants avant des éléments doivent être préservés. Fonctionne uniquement avant des éléments, pas à l’intérieur de balises ou dans le texte."},"html.format.maxPreserveNewLines":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Nombre maximal de sauts de ligne à être conservés dans un segment unique. Utiliser `null` pour illimité."},"html.format.indentHandlebars":{"type":"boolean","scope":"resource","default":false,"markdownDescription":"Mettez en forme et indenter `{{#foo}}`, ainsi que `{{/foo}}`."},"html.format.endWithNewline":{"type":"boolean","scope":"resource","default":false,"description":"Finissez par un caractère de nouvelle ligne."},"html.format.extraLiners":{"type":["string","null"],"scope":"resource","default":"head, body, /html","markdownDescription":"Liste des balises, séparées par des virgules, qui devraient avoir un saut de ligne supplémentaire devant eux. `null` par défaut pour `\"head, body, /html\"`."},"html.format.wrapAttributes":{"type":"string","scope":"resource","default":"auto","enum":["auto","force","force-aligned","force-expand-multiline","aligned-multiple","preserve","preserve-aligned"],"enumDescriptions":["Retour automatique à la ligne des attributs uniquement en cas de dépassement de la longueur de la ligne.","Retour automatique à la ligne de chaque attribut, sauf le premier.","Retour automatique à la ligne de chaque attribut, sauf le premier, avec maintien de l'alignement.","Retour automatique à la ligne de chaque attribut.","Entourer lorsque la longueur de ligne est dépassée, aligner verticalement les attributs.","Conserve le retour à la ligne des attributs.","Conservez le wrapping des attributs, mais alignez-les."],"description":"Retour à la ligne des attributs."},"html.format.wrapAttributesIndentSize":{"type":["number","null"],"scope":"resource","default":null,"markdownDescription":"Mettez en retrait les attributs encapsulés après N caractères. Utilisez 'null' pour utiliser la taille de retrait par défaut. Ignoré si '#html.format.wrapAttributes#' a la valeur 'aligned'."},"html.format.templating":{"type":"boolean","scope":"resource","default":false,"description":"Privilégie les balises de langage de templating django, erb, handlebars et php."},"html.format.unformattedContentDelimiter":{"type":"string","scope":"resource","default":"","markdownDescription":"Garde ensemble le contenu du texte dans cette chaîne."},"html.suggest.html5":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle si la prise en charge intégrée du langage HTML propose des balises, des propriétés et des valeurs HTML5."},"html.validate.scripts":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle si la prise en charge intégrée du langage HTML valide les scripts incorporés."},"html.validate.styles":{"type":"boolean","scope":"resource","default":true,"description":"Contrôle si la prise en charge intégrée du langage HTML valide les styles incorporés."},"html.autoClosingTags":{"type":"boolean","scope":"resource","default":true,"description":"Activez/désactivez la fermeture automatique des balises HTML."},"html.hover.documentation":{"type":"boolean","scope":"resource","default":true,"description":"Affiche la documentation relative aux balises et aux attributs quand le curseur passe sur l'élément."},"html.hover.references":{"type":"boolean","scope":"resource","default":true,"description":"Affiche les références à MDN quand le curseur passe sur l'élément."},"html.mirrorCursorOnMatchingTag":{"type":"boolean","scope":"resource","default":false,"description":"Activez/désactivez le curseur de mise en miroir sur la balise HTML correspondante.","deprecationMessage":"Déprécié au profit de 'editor.linkedEditing'"},"html.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Trace la communication entre VS Code et le serveur de langage HTML."}}},"configurationDefaults":{"[html]":{"editor.suggest.insertMode":"replace"},"[handlebars]":{"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.html-data.json","url":"https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/master/docs/customData.schema.json"},{"fileMatch":"package.json","url":"./schemas/package.schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.html-language-features","identifier":{"value":"vscode.html-language-features","_lower":"vscode.html-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/html-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/html-language-features","scheme":"file"}},{"name":"image-preview","displayName":"Aperçu de l'image","description":"Fournit l'aperçu d'image intégré de VS Code","extensionKind":["ui","workspace"],"version":"1.0.0","publisher":"vscode","icon":"icon.png","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.39.0"},"main":"./dist/extension","browser":"./dist/browser/extension.js","categories":["Other"],"activationEvents":["onCustomEditor:imagePreview.previewEditor","onCommand:imagePreview.zoomIn","onCommand:imagePreview.zoomOut"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"customEditors":[{"viewType":"imagePreview.previewEditor","displayName":"Aperçu de l'image","priority":"builtin","selector":[{"filenamePattern":"*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif}"}]}],"commands":[{"command":"imagePreview.zoomIn","title":{"value":"Zoom avant","original":"Zoom in"},"category":"Image Preview"},{"command":"imagePreview.zoomOut","title":{"value":"Zoom arrière","original":"Zoom out"},"category":"Image Preview"}],"menus":{"commandPalette":[{"command":"imagePreview.zoomIn","when":"activeCustomEditorId == 'imagePreview.previewEditor'","group":"1_imagePreview"},{"command":"imagePreview.zoomOut","when":"activeCustomEditorId == 'imagePreview.previewEditor'","group":"1_imagePreview"}]}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.image-preview","identifier":{"value":"vscode.image-preview","_lower":"vscode.image-preview"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/image-preview","path":"/snap/code/85/usr/share/code/resources/app/extensions/image-preview","scheme":"file"}},{"name":"ini","displayName":"Bases du langage Ini","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Ini.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/ini.tmbundle Syntaxes/Ini.plist ./syntaxes/ini.tmLanguage.json"},"contributes":{"languages":[{"id":"ini","extensions":[".ini"],"aliases":["Ini","ini"],"configuration":"./ini.language-configuration.json"},{"id":"properties","extensions":[".properties",".cfg",".conf",".directory",".gitattributes",".gitconfig",".gitmodules",".editorconfig"],"filenames":["gitconfig"],"filenamePatterns":["**/.config/git/config","**/.git/config"],"aliases":["Properties","properties"],"configuration":"./properties.language-configuration.json"}],"grammars":[{"language":"ini","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"},{"language":"properties","scopeName":"source.ini","path":"./syntaxes/ini.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.ini","identifier":{"value":"vscode.ini","_lower":"vscode.ini"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ini","path":"/snap/code/85/usr/share/code/resources/app/extensions/ini","scheme":"file"}},{"name":"ipynb","displayName":"prise en charge de ipynb","description":"Fournit une prise en charge de base pour l’ouverture et la lecture des fichiers de bloc-notes .ipynb de Jupyter","publisher":"vscode","version":"1.0.0","license":"MIT","engines":{"vscode":"^1.57.0"},"enabledApiProposals":["notebookEditor","notebookEditorEdit"],"activationEvents":["onNotebook:jupyter-notebook"],"extensionKind":["workspace","ui"],"main":"./dist/ipynbMain.js","browser":"./dist/browser/ipynbMain.js","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"languages":[{"id":"jupyter","aliases":["Jupyter (JSON)"],"extensions":[".ipynb"]}],"grammars":[{"language":"jupyter","scopeName":"source.jupyter","path":"./syntaxes/jupyter.tmLanguage.json","embeddedLanguages":{"source.json":"json"}}],"notebooks":[{"type":"jupyter-notebook","displayName":"Jupyter Notebook","selector":[{"filenamePattern":"*.ipynb"}],"priority":"default"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.ipynb","identifier":{"value":"vscode.ipynb","_lower":"vscode.ipynb"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ipynb","path":"/snap/code/85/usr/share/code/resources/app/extensions/ipynb","scheme":"file"}},{"name":"jake","publisher":"vscode","description":"Extension pour ajouter des fonctionnalités Jake à VS Code.","displayName":"Prise en charge de Jake pour VS Code","icon":"images/cowboy_hat.png","version":"1.0.0","license":"MIT","engines":{"vscode":"*"},"categories":["Other"],"main":"./dist/main","activationEvents":["onCommand:workbench.action.tasks.runTask"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"contributes":{"configuration":{"id":"jake","type":"object","title":"Jake","properties":{"jake.autoDetect":{"scope":"application","type":"string","enum":["off","on"],"default":"off","description":"Contrôle l’activation de la détection des tâches Jake. La détection des tâches Jake peut entraîner l’exécution de fichiers dans un espace de travail ouvert."}}},"taskDefinitions":[{"type":"jake","required":["task"],"properties":{"task":{"type":"string","description":"La tâche Jake à personnaliser."},"file":{"type":"string","description":"Le fichier Jake qui fournit la tâche. Peut être oublié."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.jake","identifier":{"value":"vscode.jake","_lower":"vscode.jake"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/jake","path":"/snap/code/85/usr/share/code/resources/app/extensions/jake","scheme":"file"}},{"name":"java","displayName":"Concepts de base du langage Java","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers Java.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-java grammars/java.cson ./syntaxes/java.tmLanguage.json"},"contributes":{"languages":[{"id":"java","extensions":[".java",".jav"],"aliases":["Java","java"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"java","scopeName":"source.java","path":"./syntaxes/java.tmLanguage.json"}],"snippets":[{"language":"java","path":"./snippets/java.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.java","identifier":{"value":"vscode.java","_lower":"vscode.java"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/java","path":"/snap/code/85/usr/share/code/resources/app/extensions/java","scheme":"file"}},{"name":"javascript","displayName":"Concepts de base du langage JavaScript","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers JavaScript.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"contributes":{"configurationDefaults":{"[javascript]":{"editor.maxTokenizationLineLength":2500}},"languages":[{"id":"javascriptreact","aliases":["JavaScript React","jsx"],"extensions":[".jsx"],"configuration":"./javascript-language-configuration.json"},{"id":"javascript","aliases":["JavaScript","javascript","js"],"extensions":[".js",".es6",".mjs",".cjs",".pac"],"filenames":["jakefile"],"firstLine":"^#!.*\\bnode","mimetypes":["text/javascript"],"configuration":"./javascript-language-configuration.json"},{"id":"jsx-tags","aliases":[],"configuration":"./tags-language-configuration.json"}],"grammars":[{"language":"javascriptreact","scopeName":"source.js.jsx","path":"./syntaxes/JavaScriptReact.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js.jsx":"javascriptreact","meta.embedded.expression.js":"javascriptreact"},"tokenTypes":{"meta.template.expression":"other","meta.template.expression string":"string","meta.template.expression comment":"comment","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"javascript","scopeName":"source.js","path":"./syntaxes/JavaScript.tmLanguage.json","embeddedLanguages":{"meta.tag.js":"jsx-tags","meta.tag.without-attributes.js":"jsx-tags","meta.tag.attributes.js":"javascript","meta.embedded.expression.js":"javascript"},"tokenTypes":{"meta.template.expression":"other","meta.template.expression string":"string","meta.template.expression comment":"comment","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"scopeName":"source.js.regexp","path":"./syntaxes/Regular Expressions (JavaScript).tmLanguage"}],"semanticTokenScopes":[{"language":"javascript","scopes":{"property":["variable.other.property.js"],"property.readonly":["variable.other.constant.property.js"],"variable":["variable.other.readwrite.js"],"variable.readonly":["variable.other.constant.object.js"],"function":["entity.name.function.js"],"namespace":["entity.name.type.module.js"],"variable.defaultLibrary":["support.variable.js"],"function.defaultLibrary":["support.function.js"]}},{"language":"javascriptreact","scopes":{"property":["variable.other.property.jsx"],"property.readonly":["variable.other.constant.property.jsx"],"variable":["variable.other.readwrite.jsx"],"variable.readonly":["variable.other.constant.object.jsx"],"function":["entity.name.function.jsx"],"namespace":["entity.name.type.module.jsx"],"variable.defaultLibrary":["support.variable.js"],"function.defaultLibrary":["support.function.js"]}}],"snippets":[{"language":"javascript","path":"./snippets/javascript.code-snippets"},{"language":"javascriptreact","path":"./snippets/javascript.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.javascript","identifier":{"value":"vscode.javascript","_lower":"vscode.javascript"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/javascript","path":"/snap/code/85/usr/share/code/resources/app/extensions/javascript","scheme":"file"}},{"name":"json","displayName":"Bases du langage JSON","description":"Fournit la coloration syntaxique et la mise en correspondance des crochets dans les fichiers JSON.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"json","aliases":["JSON","json"],"extensions":[".json",".bowerrc",".jscsrc",".webmanifest",".js.map",".css.map",".ts.map",".har",".jslintrc",".jsonld",".geojson"],"filenames":["composer.lock",".watchmanconfig"],"mimetypes":["application/json","application/manifest+json"],"configuration":"./language-configuration.json"},{"id":"jsonc","aliases":["JSON with Comments"],"extensions":[".jsonc",".eslintrc",".eslintrc.json",".jsfmtrc",".jshintrc",".swcrc",".hintrc",".babelrc"],"filenames":["babel.config.json",".babelrc.json",".ember-cli"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"json","scopeName":"source.json","path":"./syntaxes/JSON.tmLanguage.json"},{"language":"jsonc","scopeName":"source.json.comments","path":"./syntaxes/JSONC.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.json","identifier":{"value":"vscode.json","_lower":"vscode.json"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/json","path":"/snap/code/85/usr/share/code/resources/app/extensions/json","scheme":"file"}},{"name":"json-language-features","displayName":"Fonctionnalités de langage JSON","description":"Fournit une prise en charge de langage pour les fichiers JSON","version":"1.0.0","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"0.10.x"},"icon":"icons/json.png","activationEvents":["onLanguage:json","onLanguage:jsonc"],"main":"./client/dist/node/jsonClientMain","browser":"./client/dist/browser/jsonClientMain","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["languageStatus"],"categories":["Programming Languages"],"contributes":{"configuration":{"id":"json","order":20,"type":"object","title":"JSON","properties":{"json.schemas":{"type":"array","scope":"resource","description":"Associe les schémas aux fichiers JSON dans le projet actif.","items":{"type":"object","default":{"fileMatch":["/myfile"],"url":"schemaURL"},"properties":{"url":{"type":"string","default":"/user.schema.json","description":"URL de schéma ou chemin relatif d'un schéma dans le répertoire actuel"},"fileMatch":{"type":"array","items":{"type":"string","default":"MyFile.json","description":"Modèle de fichier pouvant contenir '*' à mapper durant la résolution de fichiers JSON en schémas."},"minItems":1,"description":"Tableau de modèles de fichiers pour la recherche de correspondances durant la résolution de fichiers JSON en schémas. Le caractère '*' peut être utilisé en tant que caractère générique. Les modèles d'exclusion peuvent également être définis et commencer par '!'. Un fichier correspond quand il existe au moins un modèle correspondant et que le dernier modèle correspondant n'est pas un modèle d'exclusion."},"schema":{"$ref":"http://json-schema.org/draft-07/schema#","description":"Définition de schéma pour l'URL indiquée. Le schéma doit être fourni uniquement pour éviter les accès à l'URL du schéma."}}}},"json.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Activer/désactiver le formateur JSON par défaut"},"json.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"default":"off","description":"Trace la communication entre VS Code et le serveur de langage JSON."},"json.colorDecorators.enable":{"type":"boolean","scope":"window","default":true,"description":"Active ou désactive les éléments décoratifs de couleurs","deprecationMessage":"Le paramètre 'json.colorDecorators.enable' a été déprécié en faveur de 'editor.colorDecorators'."},"json.maxItemsComputed":{"type":"number","default":5000,"description":"Nombre maximal de symboles de plan et de régions de pliage calculé (limité pour des raisons de performances)."},"json.schemaDownload.enable":{"type":"boolean","default":true,"description":"Quand ils sont activés, les schémas JSON peuvent être récupérés (fetch) à partir des emplacements http et https.","tags":["usesOnlineServices"]}}},"configurationDefaults":{"[json]":{"editor.quickSuggestions":{"strings":true},"editor.suggest.insertMode":"replace"},"[jsonc]":{"editor.quickSuggestions":{"strings":true},"editor.suggest.insertMode":"replace"}},"jsonValidation":[{"fileMatch":"*.schema.json","url":"http://json-schema.org/draft-07/schema#"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.json-language-features","identifier":{"value":"vscode.json-language-features","_lower":"vscode.json-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/json-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/json-language-features","scheme":"file"}},{"name":"julia","displayName":"Principes de base du langage Julia","description":"Fournit la coloration syntaxique et la mise en correspondance des crochets dans les fichiers Julia.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin JuliaEditorSupport/atom-language-julia grammars/julia_vscode.json ./syntaxes/julia.tmLanguage.json"},"contributes":{"languages":[{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"],"firstLine":"^#!\\s*/.*\\bjulia[0-9.-]*\\b","configuration":"./language-configuration.json"},{"id":"juliamarkdown","aliases":["Julia Markdown","juliamarkdown"],"extensions":[".jmd"]}],"grammars":[{"language":"julia","scopeName":"source.julia","path":"./syntaxes/julia.tmLanguage.json","embeddedLanguages":{"meta.embedded.inline.cpp":"cpp","meta.embedded.inline.javascript":"javascript","meta.embedded.inline.python":"python","meta.embedded.inline.r":"r","meta.embedded.inline.sql":"sql"}}]},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.julia","identifier":{"value":"vscode.julia","_lower":"vscode.julia"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/julia","path":"/snap/code/85/usr/share/code/resources/app/extensions/julia","scheme":"file"}},{"name":"less","displayName":"Bases du langage Less","description":"Fournit la coloration syntaxique, la correspondance des parenthèses et le pliage dans les fichiers Less.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-less grammars/less.cson ./syntaxes/less.tmLanguage.json"},"contributes":{"languages":[{"id":"less","aliases":["Less","less"],"extensions":[".less"],"mimetypes":["text/x-less","text/less"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"less","scopeName":"source.css.less","path":"./syntaxes/less.tmLanguage.json"}],"problemMatchers":[{"name":"lessc","label":"Lessc compiler","owner":"lessc","source":"less","fileLocation":"absolute","pattern":{"regexp":"(.*)\\sin\\s(.*)\\son line\\s(\\d+),\\scolumn\\s(\\d+)","message":1,"file":2,"line":3,"column":4}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.less","identifier":{"value":"vscode.less","_lower":"vscode.less"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/less","path":"/snap/code/85/usr/share/code/resources/app/extensions/less","scheme":"file"}},{"name":"log","displayName":"LOG","description":"Fournit la coloration syntaxique pour les fichiers avec une extension .log.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin emilast/vscode-logfile-highlighter syntaxes/log.tmLanguage ./syntaxes/log.tmLanguage.json"},"contributes":{"languages":[{"id":"log","extensions":[".log","*.log.?"],"aliases":["Log"]}],"grammars":[{"language":"log","scopeName":"text.log","path":"./syntaxes/log.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.log","identifier":{"value":"vscode.log","_lower":"vscode.log"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/log","path":"/snap/code/85/usr/share/code/resources/app/extensions/log","scheme":"file"}},{"name":"lua","displayName":"Concepts de base du langage Lua","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Lua.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/lua.tmbundle Syntaxes/Lua.plist ./syntaxes/lua.tmLanguage.json"},"contributes":{"languages":[{"id":"lua","extensions":[".lua"],"aliases":["Lua","lua"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"lua","scopeName":"source.lua","path":"./syntaxes/lua.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.lua","identifier":{"value":"vscode.lua","_lower":"vscode.lua"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/lua","path":"/snap/code/85/usr/share/code/resources/app/extensions/lua","scheme":"file"}},{"name":"make","displayName":"Bases du langage Make","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Make.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin fadeevab/make.tmbundle Syntaxes/Makefile.plist ./syntaxes/make.tmLanguage.json"},"contributes":{"languages":[{"id":"makefile","aliases":["Makefile","makefile"],"extensions":[".mak",".mk"],"filenames":["Makefile","makefile","GNUmakefile","OCamlMakefile"],"firstLine":"^#!\\s*/usr/bin/make","configuration":"./language-configuration.json"}],"grammars":[{"language":"makefile","scopeName":"source.makefile","path":"./syntaxes/make.tmLanguage.json","tokenTypes":{"string.interpolated":"other"}}],"configurationDefaults":{"[makefile]":{"editor.insertSpaces":false}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.make","identifier":{"value":"vscode.make","_lower":"vscode.make"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/make","path":"/snap/code/85/usr/share/code/resources/app/extensions/make","scheme":"file"}},{"name":"markdown","displayName":"Markdown Language Basics","description":"Provides snippets and syntax highlighting for Markdown.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"^1.20.0"},"contributes":{"languages":[{"id":"markdown","aliases":["Markdown","markdown"],"extensions":[".md",".mkd",".mdwn",".mdown",".markdown",".markdn",".mdtxt",".mdtext",".workbook"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"markdown","scopeName":"text.html.markdown","path":"./syntaxes/markdown.tmLanguage.json","embeddedLanguages":{"meta.embedded.block.html":"html","source.js":"javascript","source.css":"css","meta.embedded.block.frontmatter":"yaml","meta.embedded.block.css":"css","meta.embedded.block.ini":"ini","meta.embedded.block.java":"java","meta.embedded.block.lua":"lua","meta.embedded.block.makefile":"makefile","meta.embedded.block.perl":"perl","meta.embedded.block.r":"r","meta.embedded.block.ruby":"ruby","meta.embedded.block.php":"php","meta.embedded.block.sql":"sql","meta.embedded.block.vs_net":"vs_net","meta.embedded.block.xml":"xml","meta.embedded.block.xsl":"xsl","meta.embedded.block.yaml":"yaml","meta.embedded.block.dosbatch":"dosbatch","meta.embedded.block.clojure":"clojure","meta.embedded.block.coffee":"coffee","meta.embedded.block.c":"c","meta.embedded.block.cpp":"cpp","meta.embedded.block.diff":"diff","meta.embedded.block.dockerfile":"dockerfile","meta.embedded.block.go":"go","meta.embedded.block.groovy":"groovy","meta.embedded.block.pug":"jade","meta.embedded.block.javascript":"javascript","meta.embedded.block.json":"json","meta.embedded.block.less":"less","meta.embedded.block.objc":"objc","meta.embedded.block.scss":"scss","meta.embedded.block.perl6":"perl6","meta.embedded.block.powershell":"powershell","meta.embedded.block.python":"python","meta.embedded.block.rust":"rust","meta.embedded.block.scala":"scala","meta.embedded.block.shellscript":"shellscript","meta.embedded.block.typescript":"typescript","meta.embedded.block.typescriptreact":"typescriptreact","meta.embedded.block.csharp":"csharp","meta.embedded.block.fsharp":"fsharp"}}],"snippets":[{"language":"markdown","path":"./snippets/markdown.code-snippets"}],"configurationDefaults":{"[markdown]":{"editor.unicodeHighlight.ambiguousCharacters":false}}},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin microsoft/vscode-markdown-tm-grammar syntaxes/markdown.tmLanguage ./syntaxes/markdown.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.markdown","identifier":{"value":"vscode.markdown","_lower":"vscode.markdown"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-basics","path":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-basics","scheme":"file"}},{"name":"markdown-language-features","displayName":"Fonctionnalités de langage Markdown","description":"Fournit une prise en charge riche de langage pour Markdown","version":"1.0.0","icon":"icon.png","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.20.0"},"main":"./dist/extension","browser":"./dist/browser/extension","categories":["Programming Languages"],"activationEvents":["onLanguage:markdown","onCommand:markdown.preview.toggleLock","onCommand:markdown.preview.refresh","onCommand:markdown.showPreview","onCommand:markdown.showPreviewToSide","onCommand:markdown.showLockedPreviewToSide","onCommand:markdown.showSource","onCommand:markdown.showPreviewSecuritySelector","onCommand:markdown.api.render","onCommand:markdown.api.reloadPlugins","onWebviewPanel:markdown.preview","onCustomEditor:vscode.markdown.preview.editor"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Requis pour le chargement des styles configurés dans l’espace de travail.","restrictedConfigurations":["markdown.styles"]}},"contributes":{"notebookRenderer":[{"id":"markdownItRenderer","displayName":"Markdown it renderer","entrypoint":"./notebook-out/index.js","mimeTypes":["text/markdown"]}],"commands":[{"command":"markdown.showPreview","title":{"value":"Ouvrir l'aperçu","original":"Open Preview"},"category":"Markdown","icon":{"light":"./media/preview-light.svg","dark":"./media/preview-dark.svg"}},{"command":"markdown.showPreviewToSide","title":{"value":"Ouvrir l'aperçu sur le côté","original":"Open Preview to the Side"},"category":"Markdown","icon":"$(open-preview)"},{"command":"markdown.showLockedPreviewToSide","title":{"value":"Ouvrir l'aperçu verrrouillé sur le côté","original":"Open Locked Preview to the Side"},"category":"Markdown","icon":"$(open-preview)"},{"command":"markdown.showSource","title":{"value":"Afficher la source","original":"Show Source"},"category":"Markdown","icon":"$(go-to-file)"},{"command":"markdown.showPreviewSecuritySelector","title":{"value":"Changer les paramètres de sécurité de l'aperçu","original":"Change Preview Security Settings"},"category":"Markdown"},{"command":"markdown.preview.refresh","title":{"value":"Actualiser l'aperçu","original":"Refresh Preview"},"category":"Markdown"},{"command":"markdown.preview.toggleLock","title":{"value":"Activer/désactiver le verrouillage de l'aperçu","original":"Toggle Preview Locking"},"category":"Markdown"}],"menus":{"editor/title":[{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused && !hasCustomMarkdownPreview","alt":"markdown.showPreview","group":"navigation"},{"command":"markdown.showSource","when":"markdownPreviewFocus","group":"navigation"},{"command":"markdown.preview.refresh","when":"markdownPreviewFocus","group":"1_markdown"},{"command":"markdown.preview.toggleLock","when":"markdownPreviewFocus","group":"1_markdown"},{"command":"markdown.showPreviewSecuritySelector","when":"markdownPreviewFocus","group":"1_markdown"}],"explorer/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown","group":"navigation"}],"editor/title/context":[{"command":"markdown.showPreview","when":"resourceLangId == markdown","group":"1_open"}],"commandPalette":[{"command":"markdown.showPreview","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showLockedPreviewToSide","when":"editorLangId == markdown && !notebookEditorFocused","group":"navigation"},{"command":"markdown.showSource","when":"markdownPreviewFocus","group":"navigation"},{"command":"markdown.showPreviewSecuritySelector","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.showPreviewSecuritySelector","when":"markdownPreviewFocus"},{"command":"markdown.preview.toggleLock","when":"markdownPreviewFocus"},{"command":"markdown.preview.refresh","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.preview.refresh","when":"markdownPreviewFocus"}]},"keybindings":[{"command":"markdown.showPreview","key":"shift+ctrl+v","mac":"shift+cmd+v","when":"editorLangId == markdown && !notebookEditorFocused"},{"command":"markdown.showPreviewToSide","key":"ctrl+k v","mac":"cmd+k v","when":"editorLangId == markdown && !notebookEditorFocused"}],"configuration":{"type":"object","title":"Markdown","order":20,"properties":{"markdown.styles":{"type":"array","items":{"type":"string"},"default":[],"description":"Liste d'URL ou de chemins locaux de feuilles de style CSS à utiliser dans l'aperçu Markdown. Les chemins relatifs sont interprétés par rapport au dossier ouvert dans l'Explorateur. Si aucun dossier n'est ouvert, ils sont interprétés par rapport à l'emplacement du fichier Markdown. Tous les signes '\\' doivent être écrits sous la forme '\\\\'.","scope":"resource"},"markdown.preview.breaks":{"type":"boolean","default":false,"description":"Définit la façon dont les sauts de ligne sont affichés dans l'aperçu Markdown. Si vous affectez la valeur 'true', un <br> est créé pour les nouvelles lignes à l'intérieur des paragraphes.","scope":"resource"},"markdown.preview.linkify":{"type":"boolean","default":true,"description":"Active ou désactive la conversion de texte de type URL en liens dans l'aperçu Markdown.","scope":"resource"},"markdown.preview.typographer":{"type":"boolean","default":false,"description":"Active ou désactive certains remplacements indépendants du langage ainsi que l'amélioration de la présentation des guillemets dans l'aperçu Markdown.","scope":"resource"},"markdown.preview.fontFamily":{"type":"string","default":"-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif","description":"Contrôle la famille de polices utilisée dans l'aperçu Markdown.","scope":"resource"},"markdown.preview.fontSize":{"type":"number","default":14,"description":"Contrôle la taille de police en pixels utilisée dans l'aperçu Markdown.","scope":"resource"},"markdown.preview.lineHeight":{"type":"number","default":1.6,"description":"Contrôle la hauteur de ligne utilisée dans l'aperçu Markdown. Ce nombre est relatif à la taille de police.","scope":"resource"},"markdown.preview.scrollPreviewWithEditor":{"type":"boolean","default":true,"description":"Quand la fenêtre de l'éditeur Markdown défile, la vue de l'aperçu est mise à jour.","scope":"resource"},"markdown.preview.markEditorSelection":{"type":"boolean","default":true,"description":"Marque la sélection actuelle de l'éditeur dans l'aperçu Markdown.","scope":"resource"},"markdown.preview.scrollEditorWithPreview":{"type":"boolean","default":true,"description":"Quand un aperçu Markdown défile, la vue de l'éditeur est mise à jour.","scope":"resource"},"markdown.preview.doubleClickToSwitchToEditor":{"type":"boolean","default":true,"description":"Double-cliquez dans l'aperçu Markdown pour passer à l'éditeur.","scope":"resource"},"markdown.preview.openMarkdownLinks":{"type":"string","default":"inPreview","description":"Contrôle la façon dont les liens vers d'autres fichiers Markdown doivent s'ouvrir dans l'aperçu Markdown.","scope":"resource","enum":["inPreview","inEditor"],"enumDescriptions":["Tente d'ouvrir les liens dans l'aperçu Markdown.","Tente d'ouvrir les liens dans l'éditeur."]},"markdown.links.openLocation":{"type":"string","default":"currentGroup","description":"Contrôle l'emplacement où doivent s'ouvrir les liens dans les fichiers Markdown.","scope":"resource","enum":["currentGroup","beside"],"enumDescriptions":["Ouvrez les liens dans le groupe d'éditeurs actif.","Ouvrez les liens à côté de l'éditeur actif."]},"markdown.trace":{"type":"string","enum":["off","verbose"],"default":"off","description":"Active la journalisation du débogage pour l'extension Markdown.","scope":"window"}}},"configurationDefaults":{"[markdown]":{"editor.wordWrap":"on","editor.quickSuggestions":false}},"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"}],"markdown.previewStyles":["./media/markdown.css","./media/highlight.css"],"markdown.previewScripts":["./media/index.js"],"customEditors":[{"viewType":"vscode.markdown.preview.editor","displayName":"Markdown Preview","priority":"option","selector":[{"filenamePattern":"*.md"}]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.markdown-language-features","identifier":{"value":"vscode.markdown-language-features","_lower":"vscode.markdown-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-language-features","scheme":"file"}},{"name":"markdown-math","displayName":"Mathématiques Markdown","description":"Ajoute la prise en charge mathématique à Markdown dans les blocs-notes.","version":"1.0.0","icon":"icon.png","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.54.0"},"categories":["Other"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"main":"./dist/extension","browser":"./dist/browser/extension","activationEvents":[],"contributes":{"languages":[{"id":"markdown-math","aliases":[],"configuration":"./language-configuration.json"}],"grammars":[{"language":"markdown-math","scopeName":"text.html.markdown.math","path":"./syntaxes/md-math.tmLanguage.json"},{"scopeName":"markdown.math.block","path":"./syntaxes/md-math-block.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.math.markdown":"markdown-math"}},{"scopeName":"markdown.math.inline","path":"./syntaxes/md-math-inline.tmLanguage.json","injectTo":["text.html.markdown"],"embeddedLanguages":{"meta.embedded.math.markdown":"markdown-math"}}],"notebookRenderer":[{"id":"markdownItRenderer-katex","displayName":"Markdown it KaTeX renderer","entrypoint":{"extends":"markdownItRenderer","path":"./notebook-out/katex.js"}}],"markdown.markdownItPlugins":true,"markdown.previewStyles":["./notebook-out/katex.min.css","./preview-styles/index.css"],"configuration":[{"title":"Markdown Math","properties":{"markdown.math.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver le rendu des maths dans la préversion intégrée de la Démarque."}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.markdown-math","identifier":{"value":"vscode.markdown-math","_lower":"vscode.markdown-math"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-math","path":"/snap/code/85/usr/share/code/resources/app/extensions/markdown-math","scheme":"file"}},{"name":"merge-conflict","publisher":"vscode","displayName":"Conflit de fusion","description":"Mise en surbrillance et commandes pour les conflits de fusion inline.","icon":"media/icon.png","version":"1.0.0","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.5.0"},"categories":["Other"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onStartupFinished"],"main":"./dist/mergeConflictMain","browser":"./dist/browser/mergeConflictMain","contributes":{"commands":[{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter les modifications actuelles","original":"Accept All Current"},"original":"Accept All Current","command":"merge-conflict.accept.all-current"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter toutes les modifications entrantes","original":"Accept All Incoming"},"original":"Accept All Incoming","command":"merge-conflict.accept.all-incoming"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter les deux","original":"Accept All Both"},"original":"Accept All Both","command":"merge-conflict.accept.all-both"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter les modifications actuelles","original":"Accept Current"},"original":"Accept Current","command":"merge-conflict.accept.current"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter les modifications entrantes","original":"Accept Incoming"},"original":"Accept Incoming","command":"merge-conflict.accept.incoming"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter la sélection","original":"Accept Selection"},"original":"Accept Selection","command":"merge-conflict.accept.selection"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Accepter les deux","original":"Accept Both"},"original":"Accept Both","command":"merge-conflict.accept.both"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Conflit suivant","original":"Next Conflict"},"original":"Next Conflict","command":"merge-conflict.next","icon":"$(arrow-down)"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Conflit précédent","original":"Previous Conflict"},"original":"Previous Conflict","command":"merge-conflict.previous","icon":"$(arrow-up)"},{"category":{"value":"Conflit de fusion","original":"Merge Conflict"},"title":{"value":"Conflit de comparaison des modifications actuelles","original":"Compare Current Conflict"},"original":"Compare Current Conflict","command":"merge-conflict.compare"}],"menus":{"scm/resourceState/context":[{"command":"merge-conflict.accept.all-current","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"},{"command":"merge-conflict.accept.all-incoming","when":"scmProvider == git && scmResourceGroup == merge","group":"1_modification"}],"editor/title":[{"command":"merge-conflict.previous","group":"navigation@1","when":"mergeConflictsCount && mergeConflictsCount != 0"},{"command":"merge-conflict.next","group":"navigation@2","when":"mergeConflictsCount && mergeConflictsCount != 0"}]},"configuration":{"title":"Conflit de fusion","properties":{"merge-conflict.codeLens.enabled":{"type":"boolean","description":"Créer un CodeLens pour les blocs de conflit de fusion dans l’éditeur.","default":true},"merge-conflict.decorators.enabled":{"type":"boolean","description":"Créer des décorateurs pour les blocs de conflit de fusion dans l’éditeur.","default":true},"merge-conflict.autoNavigateNextConflict.enabled":{"type":"boolean","description":"Détermine s'il faut automatiquement passer au conflit de fusion suivant après la résolution d'un conflit de fusion.","default":false},"merge-conflict.diffViewPosition":{"type":"string","enum":["Current","Beside","Below"],"description":"Contrôle si la vue Diff doit être ouverte pendant la comparaison des changements dans les conflits de fusion.","enumDescriptions":["Ouvrez la vue Diff dans le groupe d'éditeurs actuel.","Ouvrez la vue Diff à côté du groupe d'éditeurs actuel.","Ouvrez la vue Diff sous le groupe d'éditeurs actuel."],"default":"Current"}}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.merge-conflict","identifier":{"value":"vscode.merge-conflict","_lower":"vscode.merge-conflict"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/merge-conflict","path":"/snap/code/85/usr/share/code/resources/app/extensions/merge-conflict","scheme":"file"}},{"name":"microsoft-authentication","publisher":"vscode","license":"MIT","displayName":"Compte Microsoft","description":"Fournisseur d'authentification Microsoft","version":"0.0.1","engines":{"vscode":"^1.42.0"},"icon":"media/icon.png","categories":["Other"],"activationEvents":["onAuthenticationRequest:microsoft"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"extensionKind":["ui","workspace"],"contributes":{"authentication":[{"label":"Microsoft","id":"microsoft"}]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","main":"./dist/extension.js","browser":"./dist/browser/extension.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.microsoft-authentication","identifier":{"value":"vscode.microsoft-authentication","_lower":"vscode.microsoft-authentication"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/microsoft-authentication","path":"/snap/code/85/usr/share/code/resources/app/extensions/microsoft-authentication","scheme":"file"}},{"name":"js-debug","displayName":"JavaScript Debugger","version":"1.62.0","publisher":"ms-vscode","author":{"name":"Microsoft Corporation"},"keywords":["pwa","javascript","node","chrome","debugger"],"description":"An extension for debugging Node.js programs and Chrome.","license":"MIT","engines":{"vscode":"^1.60.0-insider","node":">=10"},"icon":"resources/logo.png","categories":["Debuggers"],"private":true,"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-pwa.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-pwa/issues"},"prettier":{"trailingComma":"all","singleQuote":true,"arrowParens":"avoid","printWidth":100,"tabWidth":2},"main":"./src/extension.js","enableProposedApi":true,"activationEvents":["onDebugDynamicConfigurations","onDebugInitialConfigurations","onDebugResolve:node","onDebugResolve:extensionHost","onDebugResolve:chrome","onTerminalProfile:extension.js-debug.debugTerminal","onCommand:extension.js-debug.addCustomBreakpoints","onCommand:extension.pwa-node-debug.attachNodeProcess","onCommand:extension.js-debug.clearAutoAttachVariables","onCommand:extension.js-debug.setAutoAttachVariables","onCommand:extension.js-debug.autoAttachToProcess","onCommand:extension.js-debug.createDebuggerTerminal","onCommand:extension.js-debug.createDiagnostics","onCommand:extension.js-debug.debugLink","onCommand:extension.js-debug.npmScript","onCommand:extension.js-debug.pickNodeProcess","onCommand:extension.js-debug.prettyPrint","onCommand:extension.js-debug.removeAllCustomBreakpoints","onCommand:extension.js-debug.removeCustomBreakpoint","onCommand:extension.js-debug.revealPage","onCommand:extension.js-debug.startProfile","onCommand:extension.js-debug.stopProfile","onCommand:extension.js-debug.toggleSkippingFile","onCommand:extension.node-debug.startWithStopOnEntry","onCommand:extension.js-debug.requestCDPProxy","onCommand:extension.js-debug.openEdgeDevTools","onDebugResolve:pwa-node","onDebugResolve:node-terminal","onDebugResolve:pwa-extensionHost","onDebugResolve:pwa-chrome","onDebugResolve:pwa-msedge","onDebugResolve:node","onDebugResolve:chrome","onDebugResolve:extensionHost","onDebugResolve:msedge","onWebviewPanel:jsDebugDiagnostics"],"extensionKind":["workspace"],"contributes":{"views":{"debug":[{"id":"jsBrowserBreakpoints","name":"Browser breakpoints","when":"debugConfigurationType == 'pwa-chrome'"}]},"terminal":{"profiles":[{"id":"extension.js-debug.debugTerminal","title":"JavaScript Debug Terminal","icon":"$(debug)"}]},"menus":{"commandPalette":[{"command":"extension.js-debug.prettyPrint","title":"Pretty print for debugging","when":"debugType == pwa-extensionHost && inDebugMode || debugType == node-terminal && inDebugMode || debugType == pwa-node && inDebugMode || debugType == pwa-chrome && inDebugMode || debugType == pwa-msedge && inDebugMode"},{"command":"extension.js-debug.startProfile","title":"Take Performance Profile","when":"debugType == pwa-extensionHost && inDebugMode && !jsDebugIsProfiling || debugType == node-terminal && inDebugMode && !jsDebugIsProfiling || debugType == pwa-node && inDebugMode && !jsDebugIsProfiling || debugType == pwa-chrome && inDebugMode && !jsDebugIsProfiling || debugType == pwa-msedge && inDebugMode && !jsDebugIsProfiling"},{"command":"extension.js-debug.stopProfile","title":"Stop Performance Profile","when":"debugType == pwa-extensionHost && inDebugMode && jsDebugIsProfiling || debugType == node-terminal && inDebugMode && jsDebugIsProfiling || debugType == pwa-node && inDebugMode && jsDebugIsProfiling || debugType == pwa-chrome && inDebugMode && jsDebugIsProfiling || debugType == pwa-msedge && inDebugMode && jsDebugIsProfiling"},{"command":"extension.js-debug.revealPage","when":"false"},{"command":"extension.js-debug.debugLink","title":"Open Link","when":"!isWeb"},{"command":"extension.js-debug.createDiagnostics","title":"Diagnose Breakpoint Problems","when":"debugType == pwa-extensionHost && inDebugMode || debugType == node-terminal && inDebugMode || debugType == pwa-node && inDebugMode || debugType == pwa-chrome && inDebugMode || debugType == pwa-msedge && inDebugMode"},{"command":"extension.js-debug.openEdgeDevTools","title":"Open Browser Devtools","when":"debugType == pwa-msedge"}],"debug/callstack/context":[{"command":"extension.js-debug.revealPage","group":"navigation","when":"debugType == pwa-chrome && callStackItemType == 'session' || debugType == pwa-msedge && callStackItemType == 'session'"},{"command":"extension.js-debug.toggleSkippingFile","group":"navigation","when":"debugType == pwa-extensionHost && callStackItemType == 'session' || debugType == node-terminal && callStackItemType == 'session' || debugType == pwa-node && callStackItemType == 'session' || debugType == pwa-chrome && callStackItemType == 'session' || debugType == pwa-msedge && callStackItemType == 'session'"},{"command":"extension.js-debug.startProfile","group":"navigation","when":"debugType == pwa-extensionHost && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == node-terminal && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-node && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-chrome && !jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-msedge && !jsDebugIsProfiling && callStackItemType == 'session'"},{"command":"extension.js-debug.stopProfile","group":"navigation","when":"debugType == pwa-extensionHost && jsDebugIsProfiling && callStackItemType == 'session' || debugType == node-terminal && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-node && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-chrome && jsDebugIsProfiling && callStackItemType == 'session' || debugType == pwa-msedge && jsDebugIsProfiling && callStackItemType == 'session'"},{"command":"extension.js-debug.startProfile","group":"inline","when":"debugType == pwa-extensionHost && !jsDebugIsProfiling || debugType == node-terminal && !jsDebugIsProfiling || debugType == pwa-node && !jsDebugIsProfiling || debugType == pwa-chrome && !jsDebugIsProfiling || debugType == pwa-msedge && !jsDebugIsProfiling"},{"command":"extension.js-debug.stopProfile","group":"inline","when":"debugType == pwa-extensionHost && jsDebugIsProfiling || debugType == node-terminal && jsDebugIsProfiling || debugType == pwa-node && jsDebugIsProfiling || debugType == pwa-chrome && jsDebugIsProfiling || debugType == pwa-msedge && jsDebugIsProfiling"}],"debug/toolBar":[{"command":"extension.js-debug.stopProfile","when":"debugType == pwa-extensionHost && jsDebugIsProfiling || debugType == node-terminal && jsDebugIsProfiling || debugType == pwa-node && jsDebugIsProfiling || debugType == pwa-chrome && jsDebugIsProfiling || debugType == pwa-msedge && jsDebugIsProfiling"},{"command":"extension.js-debug.openEdgeDevTools","when":"debugType == pwa-msedge"}],"view/title":[{"command":"extension.js-debug.addCustomBreakpoints","when":"view == jsBrowserBreakpoints"},{"command":"extension.js-debug.removeAllCustomBreakpoints","when":"view == jsBrowserBreakpoints"}],"view/item/context":[{"command":"extension.js-debug.removeCustomBreakpoint","when":"view == jsBrowserBreakpoints","group":"inline"},{"command":"extension.js-debug.addCustomBreakpoints","when":"view == jsBrowserBreakpoints"},{"command":"extension.js-debug.removeCustomBreakpoint","when":"view == jsBrowserBreakpoints"}]},"breakpoints":[{"language":"javascript"},{"language":"typescript"},{"language":"typescriptreact"},{"language":"javascriptreact"},{"language":"fsharp"},{"language":"html"}],"debuggers":[{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","type":"string"},"attachExistingChildren":{"default":false,"description":"Whether to attempt to attach to already-spawned child processes.","type":"boolean"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"continueOnAttach":{"default":true,"markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","type":"boolean"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"port":{"default":9229,"description":"Debug port to attach to. Default is 9229.","type":"number"},"processId":{"default":"${command:PickProcess}","description":"ID of process to attach to.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"websocketAddress":{"description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port.","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}}}},"configurationSnippets":[],"label":"Node.js","languages":["javascript","typescript","javascriptreact","typescriptreact"],"type":"pwa-node","variables":{"PickProcess":"extension.js-debug.pickNodeProcess"}},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","type":"string"},"attachExistingChildren":{"default":false,"description":"Whether to attempt to attach to already-spawned child processes.","type":"boolean"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"continueOnAttach":{"default":true,"markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","type":"boolean"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"port":{"default":9229,"description":"Debug port to attach to. Default is 9229.","type":"number"},"processId":{"default":"${command:PickProcess}","description":"ID of process to attach to.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"websocketAddress":{"description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port.","type":"string"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}}}},"configurationSnippets":[{"body":{"name":"${1:Attach}","port":9229,"request":"attach","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Attach to a running node program","label":"Node.js: Attach"},{"body":{"address":"${2:TCP/IP address of process to be debugged}","localRoot":"^\"\\${workspaceFolder}\"","name":"${1:Attach to Remote}","port":9229,"remoteRoot":"${3:Absolute path to the remote directory containing the program}","request":"attach","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Attach to the debug port of a remote node program","label":"Node.js: Attach to Remote Program"},{"body":{"name":"${1:Attach by Process ID}","processId":"^\"\\${command:PickProcess}\"","request":"attach","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Open process picker to select node process to attach to","label":"Node.js: Attach to Process"},{"body":{"name":"${2:Launch Program}","program":"^\"\\${workspaceFolder}/${1:app.js}\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Launch a node program in debug mode","label":"Node.js: Launch Program"},{"body":{"name":"${1:Launch via NPM}","request":"launch","runtimeArgs":["run-script","debug"],"runtimeExecutable":"npm","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"label":"Node.js: Launch via npm","markdownDescription":"Launch a node program through an npm `debug` script"},{"body":{"console":"integratedTerminal","internalConsoleOptions":"neverOpen","name":"nodemon","program":"^\"\\${workspaceFolder}/${1:app.js}\"","request":"launch","restart":true,"runtimeExecutable":"nodemon","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Use nodemon to relaunch a debug session on source changes","label":"Node.js: Nodemon Setup"},{"body":{"args":["-u","tdd","--timeout","999999","--colors","^\"\\${workspaceFolder}/${1:test}\""],"internalConsoleOptions":"openOnSessionStart","name":"Mocha Tests","program":"^\"\\${workspaceFolder}/node_modules/mocha/bin/_mocha\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Debug mocha tests","label":"Node.js: Mocha Tests"},{"body":{"args":["${1:generator}"],"console":"integratedTerminal","internalConsoleOptions":"neverOpen","name":"Yeoman ${1:generator}","program":"^\"\\${workspaceFolder}/node_modules/yo/lib/cli.js\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"label":"Node.js: Yeoman generator","markdownDescription":"Debug yeoman generator (install by running `npm link` in project folder)"},{"body":{"args":["${1:task}"],"name":"Gulp ${1:task}","program":"^\"\\${workspaceFolder}/node_modules/gulp/bin/gulp.js\"","request":"launch","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Debug gulp task (make sure to have a local gulp installed in your project)","label":"Node.js: Gulp task"},{"body":{"name":"Electron Main","program":"^\"\\${workspaceFolder}/main.js\"","request":"launch","runtimeExecutable":"^\"\\${workspaceFolder}/node_modules/.bin/electron\"","skipFiles":["<node_internals>/**"],"type":"pwa-node"},"description":"Debug the Electron main process","label":"Node.js: Electron Main"}],"label":"Node.js","type":"node","variables":{"PickProcess":"extension.js-debug.pickNodeProcess"}},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}}}},"configurationSnippets":[{"body":{"command":"npm start","name":"Run npm start","request":"launch","type":"node-terminal"},"description":"Run \"npm start\" in a debug terminal","label":"Run \"npm start\" in a debug terminal"}],"label":"JavaScript Debug Terminal","languages":[],"type":"node-terminal"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"properties":{"args":{"default":["--extensionDevelopmentPath=${workspaceFolder}"],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"debugWebWorkerHost":{"default":true,"markdownDescription":"Configures whether we should try to attach to the web worker extension host.","type":["boolean"]},"debugWebviews":{"default":true,"markdownDescription":"Configures whether we should try to attach to webviews in the launched VS Code instance. This will only work in desktop VS Code.","type":["boolean"]},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"rendererDebugOptions":{"default":{"webRoot":"${workspaceFolder}"},"markdownDescription":"Chrome launch options used when attaching to the renderer process, with `debugWebviews` or `debugWebWorkerHost`.","properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}},"type":"object"},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeExecutable":{"default":"node","markdownDescription":"Absolute path to VS Code.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"required":["args"]}},"configurationSnippets":[],"label":"VS Code Extension Development","languages":["javascript","typescript","javascriptreact","typescriptreact"],"type":"pwa-extensionHost"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"properties":{"args":{"default":["--extensionDevelopmentPath=${workspaceFolder}"],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"debugWebWorkerHost":{"default":true,"markdownDescription":"Configures whether we should try to attach to the web worker extension host.","type":["boolean"]},"debugWebviews":{"default":true,"markdownDescription":"Configures whether we should try to attach to webviews in the launched VS Code instance. This will only work in desktop VS Code.","type":["boolean"]},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"rendererDebugOptions":{"default":{"webRoot":"${workspaceFolder}"},"markdownDescription":"Chrome launch options used when attaching to the renderer process, with `debugWebviews` or `debugWebWorkerHost`.","properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}},"type":"object"},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeExecutable":{"default":"node","markdownDescription":"Absolute path to VS Code.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"required":["args"]}},"configurationSnippets":[{"body":{"args":["^\"--extensionDevelopmentPath=\\${workspaceFolder}\""],"name":"Launch Extension","outFiles":["^\"\\${workspaceFolder}/out/**/*.js\""],"preLaunchTask":"npm","request":"launch","type":"pwa-extensionHost"},"description":"Launch a VS Code extension in debug mode","label":"VS Code Extension Development"}],"label":"VS Code Extension Development","type":"extensionHost"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}},"launch":{"properties":{"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object"},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","type":"string"},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":0,"description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","type":"number"},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","type":["string","null"]},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"]},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}}},"configurationSnippets":[],"label":"Chrome","languages":["javascript","typescript","javascriptreact","typescriptreact","html","css","coffeescript","handlebars","vue"],"type":"pwa-chrome"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}},"launch":{"properties":{"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object"},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","type":"string"},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":0,"description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","type":"number"},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","type":["string","null"]},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"]},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}}},"configurationSnippets":[{"body":{"name":"Launch Chrome","request":"launch","type":"pwa-chrome","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Launch Chrome to debug a URL","label":"Chrome: Launch"},{"body":{"name":"Attach to Chrome","port":9222,"request":"attach","type":"pwa-chrome","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Attach to an instance of Chrome already in debug mode","label":"Chrome: Attach"}],"label":"Chrome","type":"chrome"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"useWebView":{"default":false,"description":"(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}},"launch":{"properties":{"address":{"default":"localhost","description":"When debugging webviews, the IP address or hostname the webview is listening on. Will be automatically discovered if not set.","type":"string"},"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object"},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","type":"string"},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"When debugging webviews, the port the webview debugger is listening on. Will be automatically discovered if not set.","type":"number"},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'dev', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or EDGE_PATH environment variable.","type":["string","null"]},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"useWebView":{"default":false,"description":"(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean"},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"]},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}}},"configurationSnippets":[],"label":"Edge: Launch","languages":["javascript","typescript","javascriptreact","typescriptreact","html","css","coffeescript","handlebars","vue"],"type":"pwa-msedge"},{"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"attach":{"properties":{"address":{"default":"localhost","description":"IP address or hostname the debugged browser is listening on.","type":"string"},"browserAttachLocation":{"default":null,"description":"Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.","type":"number"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":false,"markdownDescription":"Whether to reconnect if the browser connection is closed","type":"boolean"},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"targetSelection":{"default":"automatic","enum":["pick","automatic"],"markdownDescription":"Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").","type":"string"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"useWebView":{"default":false,"description":"(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean"},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}},"launch":{"properties":{"address":{"default":"localhost","description":"When debugging webviews, the IP address or hostname the webview is listening on. Will be automatically discovered if not set.","type":"string"},"browserLaunchLocation":{"default":null,"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","oneOf":[{"type":"null"},{"enum":["ui","workspace"],"type":"string"}]},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"cleanUp":{"default":"wholeBrowser","description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","enum":["wholeBrowser","onlyTab"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":null,"description":"Optional working directory for the runtime executable.","type":"string"},"disableNetworkCache":{"default":true,"description":"Controls whether to skip the network cache for each request","type":"boolean"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"default":{},"description":"Optional dictionary of environment key/value pairs for the browser.","type":"object"},"file":{"default":"${workspaceFolder}/index.html","description":"A local html file to open in the browser","type":"string"},"includeDefaultArgs":{"default":true,"description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","type":"boolean"},"inspectUri":{"default":null,"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","type":["string","null"]},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pathMapping":{"default":{},"description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","type":"object"},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"perScriptSourcemaps":{"default":"auto","description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate.","enum":["yes","no","auto"],"type":"string"},"port":{"default":9229,"description":"When debugging webviews, the port the webview debugger is listening on. Will be automatically discovered if not set.","type":"number"},"profileStartup":{"default":true,"description":"If true, will start profiling soon as the process launches","type":"boolean"},"resolveSourceMapLocations":{"default":null,"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"stable","description":"Either 'canary', 'stable', 'dev', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or EDGE_PATH environment variable.","type":["string","null"]},"server":{"oneOf":[{"additionalProperties":false,"default":{"program":"node my-server.js"},"description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":"array"},"attachSimplePort":{"default":9229,"description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","type":"integer"},"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"console":{"default":"internalConsole","description":"Where to launch the debug target.","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"type":"string"},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"killBehavior":{"default":"forceful","enum":["forceful","polite","none"],"markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"profileStartup":{"default":true,"description":"If true, will start profiling as soon as the process launches","type":"boolean"},"program":{"default":"","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","type":"string"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"restart":{"default":true,"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","oneOf":[{"type":"boolean"},{"properties":{"delay":{"default":1000,"minimum":0,"type":"number"},"maxAttempts":{"default":10,"minimum":0,"type":"number"}},"type":"object"}]},"runtimeArgs":{"default":[],"description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"type":"array"},"runtimeExecutable":{"default":"node","markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","type":["string","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"runtimeVersion":{"default":"default","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","type":"string"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"stopOnEntry":{"default":true,"description":"Automatically stop program after launch.","type":["boolean","string"]},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"},{"additionalProperties":false,"default":{"program":"npm start"},"description":"JavaScript Debug Terminal","properties":{"autoAttachChildProcesses":{"default":true,"description":"Attach debugger to new child processes automatically.","type":"boolean"},"cascadeTerminateToConfigurations":{"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped.","items":{"type":"string","uniqueItems":true},"type":"array"},"command":{"default":"npm start","description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","type":["string","null"]},"customDescriptionGenerator":{"description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      ","type":"string"},"customPropertiesGenerator":{"deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181","type":"string"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","docDefault":"localRoot || ${workspaceFolder}","type":"string"},"enableContentValidation":{"default":true,"description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.","type":"boolean"},"env":{"additionalProperties":{"type":["string","null"]},"default":{},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"localRoot":{"default":null,"description":"Path to the local directory containing the program.","type":["string","null"]},"nodeVersionHint":{"default":12,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","minimum":8,"type":"number"},"outFiles":{"default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","items":{"type":"string"},"type":["array"]},"outputCapture":{"default":"console","enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`."},"pauseForSourceMap":{"default":false,"markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","type":"boolean"},"remoteRoot":{"default":null,"description":"Absolute path to the remote directory containing the program.","type":["string","null"]},"resolveSourceMapLocations":{"default":["${workspaceFolder}/**","!**/node_modules/**"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","items":{"type":"string"},"type":["array","null"]},"runtimeSourcemapPausePatterns":{"default":[],"items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","type":"array"},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]}},"type":"object"}]},"showAsyncStacks":{"default":true,"description":"Show the async calls that led to the current call stack.","oneOf":[{"type":"boolean"},{"properties":{"onAttach":{"default":32,"type":"number"}},"required":["onAttach"],"type":"object"},{"properties":{"onceBreakpointResolved":{"default":32,"type":"number"}},"required":["onceBreakpointResolved"],"type":"object"}]},"skipFiles":{"default":["<node_internals>/**"],"description":"An array of file or folder names, or path globs, to skip when debugging.","type":"array"},"smartStep":{"default":true,"description":"Automatically step through generated code that cannot be mapped back to the original source.","type":"boolean"},"sourceMapPathOverrides":{"default":{"meteor://💻app/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","webpack://?:*/*":"${workspaceFolder}/*"},"description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","type":"object"},"sourceMapRenames":{"default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers.","type":"boolean"},"sourceMaps":{"default":true,"description":"Use JavaScript source maps (if they exist).","type":"boolean"},"timeout":{"default":10000,"description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","type":"number"},"timeouts":{"additionalProperties":false,"default":{},"description":"Timeouts for several debugger operations.","markdownDescription":"Timeouts for several debugger operations.","properties":{"sourceMapCumulativePause":{"default":1000,"description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","type":"number"},"sourceMapMinPause":{"default":1000,"description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","type":"number"}},"type":"object"},"trace":{"default":true,"description":"Configures what diagnostic output is produced.","oneOf":[{"description":"Trace may be set to 'true' to write diagnostic logs to the disk.","type":"boolean"},{"additionalProperties":false,"properties":{"console":{"description":"Whether to return trace data from the launched application or browser.","type":"boolean"},"level":{"description":"Configures the level of logs recorded.","enum":["fatal","error","warn","info","verbose"]},"logFile":{"description":"Configures where on disk logs are written.","type":["string","null"]},"stdio":{"description":"Configures whether logs are also returned to the debug console.","type":"boolean"},"tags":{"description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]},"type":"array"}},"type":"object"}]},"url":{"default":"http://localhost:8080","description":"Will search for a tab with this exact url and attach to it, if found","type":"string"},"urlFilter":{"default":"","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","type":"string"},"useWebView":{"default":false,"description":"(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.","type":"boolean"},"userDataDir":{"default":true,"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","type":["string","boolean"]},"vueComponentPaths":{"default":["${workspaceFolder}/**/*.vue"],"description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","type":"array"},"webRoot":{"default":"${workspaceFolder}","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","type":"string"}}}},"configurationSnippets":[{"body":{"name":"Launch Edge","request":"launch","type":"pwa-msedge","url":"http://localhost:8080","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Launch Edge to debug a URL","label":"Edge: Launch"},{"body":{"name":"Attach to Edge","port":9222,"request":"attach","type":"pwa-msedge","webRoot":"^\"${2:\\${workspaceFolder\\}}\""},"description":"Attach to an instance of Edge already in debug mode","label":"Edge: Attach"}],"label":"Edge: Launch","type":"msedge"}],"commands":[{"command":"extension.js-debug.prettyPrint","title":"Pretty print for debugging","category":"Debug"},{"command":"extension.js-debug.toggleSkippingFile","title":"Toggle Skipping this File","category":"Debug"},{"command":"extension.js-debug.addCustomBreakpoints","title":"Add Browser Breakpoint","icon":"$(add)"},{"command":"extension.js-debug.removeCustomBreakpoint","title":"Remove Browser Breakpoint","icon":"$(remove)"},{"command":"extension.js-debug.removeAllCustomBreakpoints","title":"Remove All Browser Breakpoints","icon":"$(close-all)"},{"command":"extension.pwa-node-debug.attachNodeProcess","title":"Attach to Node Process","category":"Debug"},{"command":"extension.js-debug.npmScript","title":"Debug npm Script","category":"Debug"},{"command":"extension.js-debug.createDebuggerTerminal","title":"JavaScript Debug Terminal","category":"Debug"},{"command":"extension.js-debug.startProfile","title":"Take Performance Profile","category":"Debug","icon":"$(record)"},{"command":"extension.js-debug.stopProfile","title":"Stop Performance Profile","category":"Debug","icon":"resources/dark/stop-profiling.svg"},{"command":"extension.js-debug.revealPage","title":"Focus Tab","category":"Debug"},{"command":"extension.js-debug.debugLink","title":"Open Link","category":"Debug"},{"command":"extension.js-debug.createDiagnostics","title":"Diagnose Breakpoint Problems","category":"Debug"},{"command":"extension.node-debug.startWithStopOnEntry","title":"Start Debugging and Stop on Entry","category":"Debug"},{"command":"extension.js-debug.openEdgeDevTools","title":"Open Browser Devtools","icon":"$(inspect)","category":"Debug"}],"keybindings":[{"command":"extension.node-debug.startWithStopOnEntry","key":"F10","mac":"F10","when":"debugConfigurationType == pwa-node && !inDebugMode || debugConfigurationType == pwa-extensionHost && !inDebugMode || debugConfigurationType == node && !inDebugMode"},{"command":"extension.node-debug.startWithStopOnEntry","key":"F11","mac":"F11","when":"debugConfigurationType == pwa-node && !inDebugMode || debugConfigurationType == pwa-extensionHost && !inDebugMode || debugConfigurationType == node && !inDebugMode"}],"configuration":{"title":"JavaScript Debugger","properties":{"debug.javascript.codelens.npmScripts":{"enum":["top","all","never"],"default":"top","description":"Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\"."},"debug.javascript.terminalOptions":{"type":"object","description":"Default launch options for the JavaScript debug terminal and npm scripts.","default":{},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"items":{"type":"string"}},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":["<node_internals>/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"console":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"stdio":{"type":"boolean","description":"Configures whether logs are also returned to the debug console."},"level":{"enum":["fatal","error","warn","info","verbose"],"description":"Configures the level of logs recorded."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."},"tags":{"type":"array","description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]}}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}"},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"command":{"type":["string","null"],"description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","default":"npm start"}}},"debug.javascript.suggestPrettyPrinting":{"type":"boolean","description":"Whether to suggest pretty printing JavaScript code that looks minified when you step into it.","default":true},"debug.javascript.automaticallyTunnelRemoteServer":{"type":"boolean","description":"When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.","default":true},"debug.javascript.debugByLinkOptions":{"default":"on","description":"Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.","oneOf":[{"type":"string","enum":["on","off","always"]},{"type":"object","properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":null,"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"items":{"type":"string"}},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":["<node_internals>/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"console":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"stdio":{"type":"boolean","description":"Configures whether logs are also returned to the debug console."},"level":{"enum":["fatal","error","warn","info","verbose"],"description":"Configures the level of logs recorded."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."},"tags":{"type":"array","description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]}}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"disableNetworkCache":{"type":"boolean","description":"Controls whether to skip the network cache for each request","default":true},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk","default":{}},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"url":{"type":"string","description":"Will search for a tab with this exact url and attach to it, if found","default":"http://localhost:8080"},"inspectUri":{"type":["string","null"],"description":"Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n","default":null},"vueComponentPaths":{"type":"array","description":"A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.","default":["${workspaceFolder}/**/*.vue"]},"server":{"oneOf":[{"type":"object","description":"Configures a web server to start up. Takes the same configuration as the 'node' launch task.","additionalProperties":false,"default":{"program":"node my-server.js"},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"items":{"type":"string"}},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":["<node_internals>/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"console":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"stdio":{"type":"boolean","description":"Configures whether logs are also returned to the debug console."},"level":{"enum":["fatal","error","warn","info","verbose"],"description":"Configures the level of logs recorded."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."},"tags":{"type":"array","description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]}}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}"},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"program":{"type":"string","description":"Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.","default":""},"stopOnEntry":{"type":["boolean","string"],"description":"Automatically stop program after launch.","default":true},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["VS Code Debug Console (which doesn't support to read input from a program)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"restart":{"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","properties":{"delay":{"type":"number","minimum":0,"default":1000},"maxAttempts":{"type":"number","minimum":0,"default":10}}}]},"runtimeExecutable":{"type":["string","null"],"markdownDescription":"Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.","default":"node"},"runtimeVersion":{"type":"string","markdownDescription":"Version of `node` runtime to use. Requires `nvm`.","default":"default"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"profileStartup":{"type":"boolean","description":"If true, will start profiling as soon as the process launches","default":true},"attachSimplePort":{"type":"integer","description":"If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.","default":9229},"killBehavior":{"type":"string","enum":["forceful","polite","none"],"default":"forceful","markdownDescription":"Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."}}},{"type":"object","description":"JavaScript Debug Terminal","additionalProperties":false,"default":{"program":"npm start"},"properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"items":{"type":"string"}},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":["<node_internals>/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"console":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"stdio":{"type":"boolean","description":"Configures whether logs are also returned to the debug console."},"level":{"enum":["fatal","error","warn","info","verbose"],"description":"Configures the level of logs recorded."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."},"tags":{"type":"array","description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]}}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}"},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"command":{"type":["string","null"],"description":"Command to run in the launched terminal. If not provided, the terminal will open without launching a program.","default":"npm start"}}}]},"perScriptSourcemaps":{"type":"string","default":"auto","enum":["yes","no","auto"],"description":"Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."},"port":{"type":"number","description":"Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.","default":0},"file":{"type":"string","description":"A local html file to open in the browser","default":"${workspaceFolder}/index.html"},"userDataDir":{"type":["string","boolean"],"description":"By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.","default":true},"includeDefaultArgs":{"type":"boolean","description":"Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.","default":true},"runtimeExecutable":{"type":["string","null"],"description":"Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.","default":"stable"},"runtimeArgs":{"type":"array","description":"Optional arguments passed to the runtime executable.","items":{"type":"string"},"default":[]},"env":{"type":"object","description":"Optional dictionary of environment key/value pairs for the browser.","default":{}},"cwd":{"type":"string","description":"Optional working directory for the runtime executable.","default":null},"profileStartup":{"type":"boolean","description":"If true, will start profiling soon as the process launches","default":true},"cleanUp":{"type":"string","enum":["wholeBrowser","onlyTab"],"description":"What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.","default":"wholeBrowser"},"browserLaunchLocation":{"description":"Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.","default":null,"oneOf":[{"type":"null"},{"type":"string","enum":["ui","workspace"]}]},"enabled":{"type":"string","enum":["on","off","always"]}}}]},"debug.javascript.pickAndAttachOptions":{"type":"object","default":{},"markdownDescription":"Default options used when debugging a process through the `Debug: Attach to Node.js Process` command","properties":{"resolveSourceMapLocations":{"type":["array","null"],"description":"A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.","default":["${workspaceFolder}/**","!**/node_modules/**"],"items":{"type":"string"}},"outFiles":{"type":["array"],"description":"If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.","default":["${workspaceFolder}/**/*.js","!**/node_modules/**"],"items":{"type":"string"}},"pauseForSourceMap":{"type":"boolean","markdownDescription":"Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.","default":false},"showAsyncStacks":{"description":"Show the async calls that led to the current call stack.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","required":["onAttach"],"properties":{"onAttach":{"type":"number","default":32}}},{"type":"object","required":["onceBreakpointResolved"],"properties":{"onceBreakpointResolved":{"type":"number","default":32}}}]},"skipFiles":{"type":"array","description":"An array of file or folder names, or path globs, to skip when debugging.","default":["<node_internals>/**"]},"smartStep":{"type":"boolean","description":"Automatically step through generated code that cannot be mapped back to the original source.","default":true},"sourceMaps":{"type":"boolean","description":"Use JavaScript source maps (if they exist).","default":true},"sourceMapRenames":{"type":"boolean","default":true,"description":"Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.","default":{"webpack://?:*/*":"${workspaceFolder}/*","webpack:///./~/*":"${workspaceFolder}/node_modules/*","meteor://💻app/*":"${workspaceFolder}/*"}},"timeout":{"type":"number","description":"Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.","default":10000},"timeouts":{"type":"object","description":"Timeouts for several debugger operations.","default":{},"properties":{"sourceMapMinPause":{"type":"number","description":"Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed","default":1000},"sourceMapCumulativePause":{"type":"number","description":"Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted","default":1000}},"additionalProperties":false,"markdownDescription":"Timeouts for several debugger operations."},"trace":{"description":"Configures what diagnostic output is produced.","default":true,"oneOf":[{"type":"boolean","description":"Trace may be set to 'true' to write diagnostic logs to the disk."},{"type":"object","additionalProperties":false,"properties":{"console":{"type":"boolean","description":"Whether to return trace data from the launched application or browser."},"stdio":{"type":"boolean","description":"Configures whether logs are also returned to the debug console."},"level":{"enum":["fatal","error","warn","info","verbose"],"description":"Configures the level of logs recorded."},"logFile":{"type":["string","null"],"description":"Configures where on disk logs are written."},"tags":{"type":"array","description":"Configures what types of logs are recorded.","items":{"enum":["cdp","dap","runtime"]}}}}]},"outputCapture":{"enum":["console","std"],"markdownDescription":"From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.","default":"console"},"enableContentValidation":{"default":true,"type":"boolean","description":"Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."},"customDescriptionGenerator":{"type":"string","description":"Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "},"customPropertiesGenerator":{"type":"string","deprecated":true,"description":"Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"},"cascadeTerminateToConfigurations":{"type":"array","items":{"type":"string","uniqueItems":true},"default":[],"description":"A list of debug sessions which, when this debug session is terminated, will also be stopped."},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder","default":"${workspaceFolder}","docDefault":"localRoot || ${workspaceFolder}"},"localRoot":{"type":["string","null"],"description":"Path to the local directory containing the program.","default":null},"remoteRoot":{"type":["string","null"],"description":"Absolute path to the remote directory containing the program.","default":null},"autoAttachChildProcesses":{"type":"boolean","description":"Attach debugger to new child processes automatically.","default":true},"env":{"type":"object","additionalProperties":{"type":["string","null"]},"markdownDescription":"Environment variables passed to the program. The value `null` removes the variable from the environment.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"runtimeSourcemapPausePatterns":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).","default":[]},"nodeVersionHint":{"type":"number","minimum":8,"description":"Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.","default":12},"address":{"type":"string","description":"TCP/IP address of process to be debugged. Default is 'localhost'.","default":"localhost"},"port":{"type":"number","description":"Debug port to attach to. Default is 9229.","default":9229},"websocketAddress":{"type":"string","description":"Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."},"restart":{"description":"Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.","default":true,"oneOf":[{"type":"boolean"},{"type":"object","properties":{"delay":{"type":"number","minimum":0,"default":1000},"maxAttempts":{"type":"number","minimum":0,"default":10}}}]},"processId":{"type":"string","description":"ID of process to attach to.","default":"${command:PickProcess}"},"attachExistingChildren":{"type":"boolean","description":"Whether to attempt to attach to already-spawned child processes.","default":false},"continueOnAttach":{"type":"boolean","markdownDescription":"If true, we'll automatically resume programs launched and waiting on `--inspect-brk`","default":true}}},"debug.javascript.autoExpandGetters":{"type":"boolean","default":false,"markdownDescription":"Configures whether property getters will be expanded automatically. If this is false, the getter will appear as `get propertyName` and will only be evaluated when you click on it."},"debug.javascript.autoAttachFilter":{"type":"string","default":"disabled","enum":["always","smart","onlyWithFlag","disabled"],"enumDescriptions":["Auto attach to every Node.js process launched in the terminal.","Auto attach when running scripts that aren't in a node_modules folder.","Only auto attach when the `--inspect` is given.","Auto attach is disabled and not shown in status bar."],"markdownDescription":"Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting."},"debug.javascript.autoAttachSmartPattern":{"type":"array","items":{"type":"string"},"default":["${workspaceFolder}/**","!**/node_modules/**","**/$KNOWN_TOOLS$/**"],"markdownDescription":"Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns)."},"debug.javascript.breakOnConditionalError":{"type":"boolean","default":false,"markdownDescription":"Whether to stop when conditional breakpoints throw an error."},"debug.javascript.unmapMissingSources":{"type":"boolean","default":false,"description":"Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown."},"debug.javascript.defaultRuntimeExecutable":{"type":"object","default":{"pwa-node":"node"},"markdownDescription":"The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.","properties":{"pwa-node":{"type":"string"},"pwa-chrome":{"type":"string"},"pwa-msedge":{"type":"string"}}},"debug.javascript.resourceRequestOptions":{"type":"object","default":{},"markdownDescription":"Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`."}}},"viewsWelcome":[{"view":"debug","contents":"[JavaScript Debug Terminal](command:extension.js-debug.createDebuggerTerminal)\n\nYou can use the JavaScript Debug Terminal to debug Node.js processes run on the command line.\n\n[Debug URL](command:extension.js-debug.debugLink)","when":"debugStartLanguage == javascript && !isWeb || debugStartLanguage == typescript && !isWeb || debugStartLanguage == javascriptreact && !isWeb || debugStartLanguage == typescriptreact && !isWeb"},{"view":"debug","contents":"[JavaScript Debug Terminal](command:extension.js-debug.createDebuggerTerminal)\n\nYou can use the JavaScript Debug Terminal to debug Node.js processes run on the command line.","when":"debugStartLanguage == javascript && isWeb || debugStartLanguage == typescript && isWeb || debugStartLanguage == javascriptreact && isWeb || debugStartLanguage == typescriptreact && isWeb"}]},"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"Trust is required to debug code in this workspace."}},"uuid":"25629058-ddac-4e17-abba-74678e126c5d","isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.js-debug","identifier":{"value":"ms-vscode.js-debug","_lower":"ms-vscode.js-debug"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.js-debug","path":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.js-debug","scheme":"file"}},{"name":"js-debug-companion","displayName":"JavaScript Debugger Companion Extension","description":"Companion extension to js-debug that provides capability for remote debugging","version":"1.0.15","publisher":"ms-vscode","engines":{"vscode":"^1.59.0"},"icon":"resources/logo.png","categories":["Other"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-js-debug-companion.git"},"author":"Connor Peet <connor@peet.io>","license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-js-debug-companion/issues"},"homepage":"https://github.com/microsoft/vscode-js-debug-companion#readme","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"activationEvents":["onCommand:js-debug-companion.launchAndAttach","onCommand:js-debug-companion.kill"],"main":"./out/extension.js","contributes":{},"extensionKind":["ui"],"api":"none","prettier":{"trailingComma":"all","singleQuote":true,"printWidth":100,"tabWidth":2,"arrowParens":"avoid"},"uuid":"99cb0b7f-7354-4278-b8da-6cc79972169d","isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.js-debug-companion","identifier":{"value":"ms-vscode.js-debug-companion","_lower":"ms-vscode.js-debug-companion"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.js-debug-companion","path":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.js-debug-companion","scheme":"file"}},{"name":"references-view","displayName":"Reference Search View","icon":"media/icon.png","description":"Reference Search results as separate, stable view in the sidebar","version":"0.0.81","publisher":"ms-vscode","engines":{"vscode":"^1.40.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-reference-view"},"bugs":{"url":"https://github.com/Microsoft/vscode-reference-view/issues"},"categories":["Programming Languages"],"activationEvents":["onCommand:references-view.find","onCommand:references-view.findReferences","onCommand:references-view.findImplementations","onCommand:references-view.showCallHierarchy","onCommand:references-view.showTypeHierarchy","onCommand:editor.action.showReferences","onView:references-view.tree"],"main":"./dist/extension","browser":"./dist/extension","contributes":{"configuration":{"properties":{"references.preferredLocation":{"description":"Controls whether 'Peek References' or 'Find References' is invoked when selecting code lens references","type":"string","default":"peek","enum":["peek","view"],"enumDescriptions":["Show references in peek editor.","Show references in separate view."]}}},"viewsContainers":{"activitybar":[{"id":"references-view","icon":"$(references)","title":"References"}]},"views":{"references-view":[{"id":"references-view.tree","name":"Results","when":"reference-list.isActive"}]},"commands":[{"command":"references-view.findReferences","title":"Find All References","category":"References"},{"command":"references-view.findImplementations","title":"Find All Implementations","category":"References"},{"command":"references-view.clearHistory","title":"Clear History","category":"References","icon":"$(clear-all)"},{"command":"references-view.clear","title":"Clear","category":"References","icon":"$(clear-all)"},{"command":"references-view.refresh","title":"Refresh","category":"References","icon":"$(refresh)"},{"command":"references-view.pickFromHistory","title":"Show History","category":"References"},{"command":"references-view.removeReferenceItem","title":"Dismiss","icon":"$(close)"},{"command":"references-view.copy","title":"Copy"},{"command":"references-view.copyAll","title":"Copy All"},{"command":"references-view.copyPath","title":"Copy Path"},{"command":"references-view.refind","title":"Rerun","icon":"$(refresh)"},{"command":"references-view.showCallHierarchy","title":"Show Call Hierarchy","category":"Calls"},{"command":"references-view.showOutgoingCalls","title":"Show Outgoing Calls","category":"Calls","icon":"$(call-outgoing)"},{"command":"references-view.showIncomingCalls","title":"Show Incoming Calls","category":"Calls","icon":"$(call-incoming)"},{"command":"references-view.removeCallItem","title":"Dismiss","icon":"$(close)"},{"command":"references-view.next","title":"Go to Next Reference","enablement":"references-view.canNavigate"},{"command":"references-view.prev","title":"Go to Previous Reference","enablement":"references-view.canNavigate"},{"command":"references-view.showTypeHierarchy","title":"Show Type Hierarchy","category":"Types"},{"command":"references-view.showSupertypes","title":"Show Supertypes","category":"Types","icon":"$(type-hierarchy-super)"},{"command":"references-view.showSubtypes","title":"Show Subtypes","category":"Types","icon":"$(type-hierarchy-sub)"},{"command":"references-view.removeTypeItem","title":"Dismiss","icon":"$(close)"}],"menus":{"editor/context":[{"command":"references-view.findReferences","when":"editorHasReferenceProvider","group":"0_navigation@1"},{"command":"references-view.findImplementations","when":"editorHasImplementationProvider","group":"0_navigation@2"},{"command":"references-view.showCallHierarchy","when":"editorHasCallHierarchyProvider","group":"0_navigation@3"},{"command":"references-view.showTypeHierarchy","when":"editorHasTypeHierarchyProvider","group":"0_navigation@4"}],"view/title":[{"command":"references-view.clear","group":"navigation@3","when":"view == references-view.tree && reference-list.hasResult"},{"command":"references-view.clearHistory","group":"navigation@3","when":"view == references-view.tree && reference-list.hasHistory && !reference-list.hasResult"},{"command":"references-view.refresh","group":"navigation@2","when":"view == references-view.tree && reference-list.hasResult"},{"command":"references-view.showOutgoingCalls","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showIncoming"},{"command":"references-view.showIncomingCalls","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == callHierarchy &&  references-view.callHierarchyMode == showOutgoing"},{"command":"references-view.showSupertypes","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != supertypes"},{"command":"references-view.showSubtypes","group":"navigation@1","when":"view == references-view.tree && reference-list.hasResult && reference-list.source == typeHierarchy &&  references-view.typeHierarchyMode != subtypes"}],"view/item/context":[{"command":"references-view.removeReferenceItem","group":"inline","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.removeCallItem","group":"inline","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.removeTypeItem","group":"inline","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.refind","group":"inline","when":"view == references-view.tree && viewItem == history-item"},{"command":"references-view.removeReferenceItem","group":"1","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.removeCallItem","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.removeTypeItem","group":"1","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.refind","group":"1","when":"view == references-view.tree && viewItem == history-item"},{"command":"references-view.copy","group":"2@1","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.copyPath","group":"2@2","when":"view == references-view.tree && viewItem == file-item"},{"command":"references-view.copyAll","group":"2@3","when":"view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == reference-item"},{"command":"references-view.showOutgoingCalls","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.showIncomingCalls","group":"1","when":"view == references-view.tree && viewItem == call-item"},{"command":"references-view.showSupertypes","group":"1","when":"view == references-view.tree && viewItem == type-item"},{"command":"references-view.showSubtypes","group":"1","when":"view == references-view.tree && viewItem == type-item"}],"commandPalette":[{"command":"references-view.removeReferenceItem","when":"never"},{"command":"references-view.removeCallItem","when":"never"},{"command":"references-view.removeTypeItem","when":"never"},{"command":"references-view.copy","when":"never"},{"command":"references-view.copyAll","when":"never"},{"command":"references-view.copyPath","when":"never"},{"command":"references-view.refind","when":"never"},{"command":"references-view.findReferences","when":"editorHasReferenceProvider"},{"command":"references-view.clear","when":"reference-list.hasResult"},{"command":"references-view.clearHistory","when":"reference-list.isActive && !reference-list.hasResult"},{"command":"references-view.refresh","when":"reference-list.hasResult"},{"command":"references-view.pickFromHistory","when":"reference-list.isActive"},{"command":"references-view.next","when":"never"},{"command":"references-view.prev","when":"never"}]},"keybindings":[{"command":"references-view.findReferences","when":"editorHasReferenceProvider","key":"shift+alt+f12"},{"command":"references-view.next","when":"reference-list.hasResult","key":"f4"},{"command":"references-view.prev","when":"reference-list.hasResult","key":"shift+f4"},{"command":"references-view.showCallHierarchy","when":"editorHasCallHierarchyProvider","key":"shift+alt+h"}]},"uuid":"dc489f46-520d-4556-ae85-1f9eab3c412d","isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.references-view","identifier":{"value":"ms-vscode.references-view","_lower":"ms-vscode.references-view"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.references-view","path":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.references-view","scheme":"file"}},{"name":"vscode-js-profile-table","version":"0.0.18","description":"Text visualizer for profiles taken from the JavaScript debugger","author":"Connor Peet <connor@peet.io>","homepage":"https://github.com/microsoft/vscode-js-profile-visualizer#readme","license":"MIT","main":"out/extension.js","files":["out"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-js-profile-visualizer.git"},"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":true}},"icon":"resources/icon.png","publisher":"ms-vscode","enableProposedApi":true,"sideEffects":false,"engines":{"vscode":"^1.43.0"},"activationEvents":["onCustomEditor:jsProfileVisualizer.cpuprofile.table"],"contributes":{"customEditors":[{"viewType":"jsProfileVisualizer.cpuprofile.table","displayName":"CPU Profile Table Visualizer","priority":"default","selector":[{"filenamePattern":"*.cpuprofile"}]}],"commands":[{"command":"extension.jsProfileVisualizer.table.clearCodeLenses","title":"Clear Profile Code Lenses"}]},"bugs":{"url":"https://github.com/microsoft/vscode-js-profile-visualizer/issues"},"uuid":"7e52b41b-71ad-457b-ab7e-0620f1fc4feb","isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"ms-vscode.vscode-js-profile-table","identifier":{"value":"ms-vscode.vscode-js-profile-table","_lower":"ms-vscode.vscode-js-profile-table"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.vscode-js-profile-table","path":"/snap/code/85/usr/share/code/resources/app/extensions/ms-vscode.vscode-js-profile-table","scheme":"file"}},{"name":"npm","publisher":"vscode","displayName":"Prise en charge de Npm pour VS Code","description":"Extension pour ajouter une prise en charge des tâches pour les scripts npm.","version":"1.0.1","license":"MIT","engines":{"vscode":"0.10.x"},"icon":"images/npm_icon.png","categories":["Other"],"resolutions":{"which-pm/load-yaml-file/**/argparse":"1.0.9"},"main":"./dist/npmMain","browser":"./dist/browser/npmBrowserMain","activationEvents":["onCommand:workbench.action.tasks.runTask","onCommand:npm.runScriptFromFolder","onLanguage:json","workspaceContains:package.json","onView:npm"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"Cette extension exécute des tâches qui nécessitent une approbation pour s’exécuter."}},"contributes":{"languages":[{"id":"ignore","extensions":[".npmignore"]},{"id":"properties","extensions":[".npmrc"]}],"views":{"explorer":[{"id":"npm","name":"Scripts npm","when":"npm:showScriptExplorer","icon":"$(json)","visibility":"hidden","contextualTitle":"Scripts npm"}]},"commands":[{"command":"npm.runScript","title":{"value":"Exécuter","original":"Run"},"icon":"$(run)"},{"command":"npm.debugScript","title":{"value":"Déboguer","original":"Debug"},"icon":"$(debug)"},{"command":"npm.openScript","title":{"value":"Ouvrir ","original":"Open"}},{"command":"npm.runInstall","title":{"value":"Exécuter Install","original":"Run Install"}},{"command":"npm.refresh","title":{"value":"Actualiser","original":"Refresh"},"icon":"$(refresh)"},{"command":"npm.runSelectedScript","title":{"value":"Exécuter le script","original":"Run Script"}},{"command":"npm.runScriptFromFolder","title":{"value":"Exécuter le script NPM dans un dossier...","original":"Run NPM Script in Folder..."}},{"command":"npm.packageManager","title":{"value":"Obtenir le Gestionnaire de package configuré","original":"Get Configured Package Manager"}}],"menus":{"commandPalette":[{"command":"npm.refresh","when":"false"},{"command":"npm.runScript","when":"false"},{"command":"npm.debugScript","when":"false"},{"command":"npm.openScript","when":"false"},{"command":"npm.runInstall","when":"false"},{"command":"npm.runSelectedScript","when":"false"},{"command":"npm.runScriptFromFolder","when":"false"},{"command":"npm.packageManager","when":"false"}],"editor/context":[{"command":"npm.runSelectedScript","when":"resourceFilename == 'package.json' && resourceScheme == file","group":"navigation@+1"}],"view/title":[{"command":"npm.refresh","when":"view == npm","group":"navigation"}],"view/item/context":[{"command":"npm.openScript","when":"view == npm && viewItem == packageJSON","group":"navigation@1"},{"command":"npm.runInstall","when":"view == npm && viewItem == packageJSON","group":"navigation@2"},{"command":"npm.openScript","when":"view == npm && viewItem == script","group":"navigation@1"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"navigation@2"},{"command":"npm.runScript","when":"view == npm && viewItem == script","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == script","group":"inline"},{"command":"npm.debugScript","when":"view == npm && viewItem == script","group":"navigation@3"}],"explorer/context":[{"when":"config.npm.enableRunFromFolder && explorerViewletVisible && explorerResourceIsFolder && resourceScheme == file","command":"npm.runScriptFromFolder","group":"2_workspace"}]},"configuration":{"id":"npm","type":"object","title":"Npm","properties":{"npm.autoDetect":{"type":"string","enum":["off","on"],"default":"on","scope":"resource","description":"Contrôle si les scripts npm doivent être détectés automatiquement."},"npm.runSilent":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Exécutez les commandes npm avec l'option `--silent`."},"npm.packageManager":{"scope":"resource","type":"string","enum":["auto","npm","yarn","pnpm"],"enumDescriptions":["Détectez automatiquement le gestionnaire de package à utiliser pour l'exécution des scripts en fonction des fichiers de verrouillage et des gestionnaires de packages installés.","Utilisez npm en tant que gestionnaire de package pour l'exécution des scripts.","Utilisez YARN en tant que gestionnaire de package pour l'exécution des scripts.","Utilisez pnpm en tant que gestionnaire de package pour l'exécution des scripts."],"default":"auto","description":"Gestionnaire de package utilisé pour exécuter des scripts."},"npm.exclude":{"type":["string","array"],"items":{"type":"string"},"description":"Configurer les profils glob pour les dossiers qui doivent être exclus de la détection de script automatique.","scope":"resource"},"npm.enableScriptExplorer":{"type":"boolean","default":false,"scope":"resource","deprecationMessage":"The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.","description":"Activez une vue explorateur pour les scripts npm en l'absence d'un fichier 'package.json' de haut niveau."},"npm.enableRunFromFolder":{"type":"boolean","default":false,"scope":"resource","description":"Activez l'exécution de scripts NPM contenus dans un dossier du menu contextuel Explorer."},"npm.scriptExplorerAction":{"type":"string","enum":["open","run"],"markdownDescription":"Action de clic par défaut utilisée dans l'explorateur de scripts npm : 'open' ou 'run'. La valeur par défaut est 'open'.","scope":"window","default":"open"},"npm.scriptExplorerExclude":{"type":"array","items":{"type":"string"},"markdownDescription":"Tableau d’expressions régulières qui indiquent quels scripts doivent être exclus de la vue Scripts NPM.","scope":"resource","default":[]},"npm.fetchOnlinePackageInfo":{"type":"boolean","description":"Récupérez des données à partir de https://registry.npmjs.org et https://registry.bower.io pour l'auto-complétion et obtenir des informations concernant les fonctionnalités de pointage sur les dépendances npm.","default":true,"scope":"window","tags":["usesOnlineServices"]}}},"jsonValidation":[{"fileMatch":"package.json","url":"https://json.schemastore.org/package"},{"fileMatch":"bower.json","url":"https://json.schemastore.org/bower"}],"taskDefinitions":[{"type":"npm","required":["script"],"properties":{"script":{"type":"string","description":"Le script npm à personnaliser."},"path":{"type":"string","description":"Chemin de dossier du fichier package.json qui fournit le script. Peut être ignoré."}},"when":"shellExecutionSupported"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.npm","identifier":{"value":"vscode.npm","_lower":"vscode.npm"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/npm","path":"/snap/code/85/usr/share/code/resources/app/extensions/npm","scheme":"file"}},{"name":"objective-c","displayName":"Concepts de base du langage Objective-C","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Objective-C.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"objective-c","extensions":[".m"],"aliases":["Objective-C"],"configuration":"./language-configuration.json"},{"id":"objective-cpp","extensions":[".mm"],"aliases":["Objective-C++"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"objective-c","scopeName":"source.objc","path":"./syntaxes/objective-c.tmLanguage.json"},{"language":"objective-cpp","scopeName":"source.objcpp","path":"./syntaxes/objective-c++.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.objective-c","identifier":{"value":"vscode.objective-c","_lower":"vscode.objective-c"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/objective-c","path":"/snap/code/85/usr/share/code/resources/app/extensions/objective-c","scheme":"file"}},{"name":"perl","displayName":"Concepts de base du langage Perl","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Perl.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/perl.tmbundle Syntaxes/Perl.plist ./syntaxes/perl.tmLanguage.json Syntaxes/Perl%206.tmLanguage ./syntaxes/perl6.tmLanguage.json"},"contributes":{"languages":[{"id":"perl","aliases":["Perl","perl"],"extensions":[".pl",".pm",".pod",".t",".PL",".psgi"],"firstLine":"^#!.*\\bperl\\b","configuration":"./perl.language-configuration.json"},{"id":"perl6","aliases":["Perl 6","perl6"],"extensions":[".p6",".pl6",".pm6",".nqp"],"firstLine":"(^#!.*\\bperl6\\b)|use\\s+v6","configuration":"./perl6.language-configuration.json"}],"grammars":[{"language":"perl","scopeName":"source.perl","path":"./syntaxes/perl.tmLanguage.json"},{"language":"perl6","scopeName":"source.perl.6","path":"./syntaxes/perl6.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.perl","identifier":{"value":"vscode.perl","_lower":"vscode.perl"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/perl","path":"/snap/code/85/usr/share/code/resources/app/extensions/perl","scheme":"file"}},{"name":"php","displayName":"Concepts de base du langage PHP","description":"Fournit la coloration syntaxique et la correspondance des parenthèses dans les fichiers PHP.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"contributes":{"languages":[{"id":"php","extensions":[".php",".php4",".php5",".phtml",".ctp"],"aliases":["PHP","php"],"firstLine":"^#!\\s*/.*\\bphp\\b","mimetypes":["application/x-php"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"php","scopeName":"source.php","path":"./syntaxes/php.tmLanguage.json"},{"language":"php","scopeName":"text.html.php","path":"./syntaxes/html.tmLanguage.json","embeddedLanguages":{"text.html":"html","source.php":"php","source.sql":"sql","text.xml":"xml","source.js":"javascript","source.json":"json","source.css":"css"}}],"snippets":[{"language":"php","path":"./snippets/php.code-snippets"}]},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.php","identifier":{"value":"vscode.php","_lower":"vscode.php"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/php","path":"/snap/code/85/usr/share/code/resources/app/extensions/php","scheme":"file"}},{"name":"php-language-features","displayName":"Fonctionnalités de langage PHP","description":"Fournit une prise en charge de langage riche pour les fichiers PHP.","version":"1.0.0","publisher":"vscode","license":"MIT","icon":"icons/logo.png","engines":{"vscode":"0.10.x"},"activationEvents":["onLanguage:php"],"main":"./dist/phpMain","categories":["Programming Languages"],"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"L’extension nécessite l’approbation d’espace de travail lorsque le paramètre « php.validate.executablePath » charge une version de PHP dans l’espace de travail.","restrictedConfigurations":["php.validate.executablePath"]}},"contributes":{"configuration":{"title":"PHP","type":"object","order":20,"properties":{"php.suggest.basic":{"type":"boolean","default":true,"description":"Contrôle si les suggestions de langage PHP intégrées sont activées. Le support suggère les globales et variables PHP."},"php.validate.enable":{"type":"boolean","default":true,"description":"Activez/désactivez la validation PHP intégrée."},"php.validate.executablePath":{"type":["string","null"],"default":null,"description":"Pointe vers l'exécutable PHP.","scope":"machine-overridable"},"php.validate.run":{"type":"string","enum":["onSave","onType"],"default":"onSave","description":"Spécifie si linter est exécuté au moment de l'enregistrement ou de la saisie."}}},"jsonValidation":[{"fileMatch":"composer.json","url":"https://getcomposer.org/schema.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.php-language-features","identifier":{"value":"vscode.php-language-features","_lower":"vscode.php-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/php-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/php-language-features","scheme":"file"}},{"name":"powershell","displayName":"Concepts de base du langage PowerShell","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers PowerShell.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"languages":[{"id":"powershell","extensions":[".ps1",".psm1",".psd1",".pssc",".psrc"],"aliases":["PowerShell","powershell","ps","ps1"],"firstLine":"^#!\\s*/.*\\bpwsh\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"powershell","scopeName":"source.powershell","path":"./syntaxes/powershell.tmLanguage.json"}],"snippets":[{"language":"powershell","path":"./snippets/powershell.code-snippets"}]},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin PowerShell/EditorSyntax PowerShellSyntax.tmLanguage ./syntaxes/powershell.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.powershell","identifier":{"value":"vscode.powershell","_lower":"vscode.powershell"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/powershell","path":"/snap/code/85/usr/share/code/resources/app/extensions/powershell","scheme":"file"}},{"name":"pug","displayName":"Bases du langage Pug","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Pug.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin davidrios/pug-tmbundle Syntaxes/Pug.JSON-tmLanguage ./syntaxes/pug.tmLanguage.json"},"contributes":{"languages":[{"id":"jade","extensions":[".pug",".jade"],"aliases":["Pug","Jade","jade"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"jade","scopeName":"text.pug","path":"./syntaxes/pug.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.pug","identifier":{"value":"vscode.pug","_lower":"vscode.pug"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/pug","path":"/snap/code/85/usr/share/code/resources/app/extensions/pug","scheme":"file"}},{"name":"python","displayName":"Concepts de base du langage Python","description":"Fournit la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers Python.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"extensionKind":["ui","workspace"],"contributes":{"languages":[{"id":"python","extensions":[".py",".rpy",".pyw",".cpy",".gyp",".gypi",".pyi",".ipy",".pyt"],"aliases":["Python","py"],"filenames":["Snakefile","SConstruct","SConscript"],"firstLine":"^#!\\s*/?.*\\bpython[0-9.-]*\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"python","scopeName":"source.python","path":"./syntaxes/MagicPython.tmLanguage.json"},{"scopeName":"source.regexp.python","path":"./syntaxes/MagicRegExp.tmLanguage.json"}]},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin MagicStack/MagicPython grammars/MagicPython.tmLanguage ./syntaxes/MagicPython.tmLanguage.json grammars/MagicRegExp.tmLanguage ./syntaxes/MagicRegExp.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.python","identifier":{"value":"vscode.python","_lower":"vscode.python"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/python","path":"/snap/code/85/usr/share/code/resources/app/extensions/python","scheme":"file"}},{"name":"r","displayName":"Concepts de base du langage R","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers R.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin Ikuyadeu/vscode-R syntax/r.json ./syntaxes/r.tmLanguage.json"},"contributes":{"languages":[{"id":"r","extensions":[".r",".rhistory",".rprofile",".rt"],"aliases":["R","r"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"r","scopeName":"source.r","path":"./syntaxes/r.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.r","identifier":{"value":"vscode.r","_lower":"vscode.r"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/r","path":"/snap/code/85/usr/share/code/resources/app/extensions/r","scheme":"file"}},{"name":"razor","displayName":"Bases du langage Razor","description":"Fournit la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers Razor.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"0.10.x"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin demyte/language-cshtml grammars/cshtml.json ./syntaxes/cshtml.tmLanguage.json"},"contributes":{"languages":[{"id":"razor","extensions":[".cshtml"],"aliases":["Razor","razor"],"mimetypes":["text/x-cshtml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"razor","scopeName":"text.html.cshtml","path":"./syntaxes/cshtml.tmLanguage.json","embeddedLanguages":{"section.embedded.source.cshtml":"csharp","source.css":"css","source.js":"javascript"}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.razor","identifier":{"value":"vscode.razor","_lower":"vscode.razor"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/razor","path":"/snap/code/85/usr/share/code/resources/app/extensions/razor","scheme":"file"}},{"name":"ruby","displayName":"Concepts de base du langage Ruby","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Ruby.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/ruby.tmbundle Syntaxes/Ruby.plist ./syntaxes/ruby.tmLanguage.json"},"contributes":{"languages":[{"id":"ruby","extensions":[".rb",".rbx",".rjs",".gemspec",".rake",".ru",".erb",".podspec",".rbi"],"filenames":["rakefile","gemfile","guardfile","podfile","capfile","cheffile","hobofile","vagrantfile","appraisals","rantfile","berksfile","berksfile.lock","thorfile","puppetfile","dangerfile","brewfile","fastfile","appfile","deliverfile","matchfile","scanfile","snapfile","gymfile"],"aliases":["Ruby","rb"],"firstLine":"^#!\\s*/.*\\bruby\\b","configuration":"./language-configuration.json"}],"grammars":[{"language":"ruby","scopeName":"source.ruby","path":"./syntaxes/ruby.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.ruby","identifier":{"value":"vscode.ruby","_lower":"vscode.ruby"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/ruby","path":"/snap/code/85/usr/share/code/resources/app/extensions/ruby","scheme":"file"}},{"name":"rust","displayName":"Bases du langage Rust","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Rust.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin dustypomerleau/rust-syntax syntaxes/rust.tmLanguage.json ./syntaxes/rust.tmLanguage.json"},"contributes":{"languages":[{"id":"rust","extensions":[".rs"],"aliases":["Rust","rust"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"rust","path":"./syntaxes/rust.tmLanguage.json","scopeName":"source.rust"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.rust","identifier":{"value":"vscode.rust","_lower":"vscode.rust"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/rust","path":"/snap/code/85/usr/share/code/resources/app/extensions/rust","scheme":"file"}},{"name":"scss","displayName":"Bases du langage SCSS","description":"Fournit la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers SCSS.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-sass grammars/scss.cson ./syntaxes/scss.tmLanguage.json grammars/sassdoc.cson ./syntaxes/sassdoc.tmLanguage.json"},"contributes":{"languages":[{"id":"scss","aliases":["SCSS","scss"],"extensions":[".scss"],"mimetypes":["text/x-scss","text/scss"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"scss","scopeName":"source.css.scss","path":"./syntaxes/scss.tmLanguage.json"},{"scopeName":"source.sassdoc","path":"./syntaxes/sassdoc.tmLanguage.json"}],"problemMatchers":[{"name":"node-sass","label":"Node Sass Compiler","owner":"node-sass","fileLocation":"absolute","pattern":[{"regexp":"^{$"},{"regexp":"\\s*\"status\":\\s\\d+,"},{"regexp":"\\s*\"file\":\\s\"(.*)\",","file":1},{"regexp":"\\s*\"line\":\\s(\\d+),","line":1},{"regexp":"\\s*\"column\":\\s(\\d+),","column":1},{"regexp":"\\s*\"message\":\\s\"(.*)\",","message":1},{"regexp":"\\s*\"formatted\":\\s(.*)"},{"regexp":"^}$"}]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.scss","identifier":{"value":"vscode.scss","_lower":"vscode.scss"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/scss","path":"/snap/code/85/usr/share/code/resources/app/extensions/scss","scheme":"file"}},{"name":"search-result","displayName":"Résultat de recherche","description":"Fournit la mise en surbrillance de la syntaxe et des fonctionnalités de langue pour les résultats de recherche avec onglets.","version":"1.0.0","publisher":"vscode","license":"MIT","icon":"images/icon.png","engines":{"vscode":"^1.39.0"},"categories":["Programming Languages"],"main":"./dist/extension.js","browser":"./dist/extension.js","activationEvents":["onLanguage:search-result"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"enabledApiProposals":["documentFiltersExclusive"],"contributes":{"configurationDefaults":{"[search-result]":{"editor.lineNumbers":"off"}},"languages":[{"id":"search-result","extensions":[".code-search"],"aliases":["Search Result"]}],"grammars":[{"language":"search-result","scopeName":"text.searchResult","path":"./syntaxes/searchResult.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.search-result","identifier":{"value":"vscode.search-result","_lower":"vscode.search-result"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/search-result","path":"/snap/code/85/usr/share/code/resources/app/extensions/search-result","scheme":"file"}},{"name":"shaderlab","displayName":"Concepts de base du langage Shaderlab","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Shaderlab.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin tgjones/shaders-tmLanguage grammars/shaderlab.json ./syntaxes/shaderlab.tmLanguage.json"},"contributes":{"languages":[{"id":"shaderlab","extensions":[".shader"],"aliases":["ShaderLab","shaderlab"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"shaderlab","path":"./syntaxes/shaderlab.tmLanguage.json","scopeName":"source.shaderlab"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.shaderlab","identifier":{"value":"vscode.shaderlab","_lower":"vscode.shaderlab"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/shaderlab","path":"/snap/code/85/usr/share/code/resources/app/extensions/shaderlab","scheme":"file"}},{"name":"shellscript","displayName":"Bases du langage Shell Script","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers Shell Script.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-shellscript grammars/shell-unix-bash.cson ./syntaxes/shell-unix-bash.tmLanguage.json"},"contributes":{"languages":[{"id":"shellscript","aliases":["Shell Script","shellscript","bash","sh","zsh","ksh","csh"],"extensions":[".sh",".bash",".bashrc",".bash_aliases",".bash_profile",".bash_login",".ebuild",".profile",".bash_logout",".xprofile",".xsession",".xsessionrc",".Xsession",".zsh",".zshrc",".zprofile",".zlogin",".zlogout",".zshenv",".zsh-theme",".ksh",".csh",".cshrc",".tcshrc",".yashrc",".yash_profile"],"filenames":["APKBUILD","PKGBUILD",".envrc",".hushlogin","zshrc","zshenv","zlogin","zprofile","zlogout","bashrc_Apple_Terminal","zshrc_Apple_Terminal"],"firstLine":"^#!.*\\b(bash|zsh|sh|ksh|dtksh|pdksh|mksh|ash|dash|yash|sh|csh|jcsh|tcsh|itcsh).*|^#\\s*-\\*-[^*]*mode:\\s*shell-script[^*]*-\\*-","configuration":"./language-configuration.json","mimetypes":["text/x-shellscript"]}],"grammars":[{"language":"shellscript","scopeName":"source.shell","path":"./syntaxes/shell-unix-bash.tmLanguage.json"}],"configurationDefaults":{"[shellscript]":{"files.eol":"\n"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.shellscript","identifier":{"value":"vscode.shellscript","_lower":"vscode.shellscript"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/shellscript","path":"/snap/code/85/usr/share/code/resources/app/extensions/shellscript","scheme":"file"}},{"name":"simple-browser","displayName":"Navigateur simple","description":"Vue web intégrée très élémentaire pour l'affichage du contenu web.","enabledApiProposals":["externalUriOpener"],"version":"1.0.0","icon":"media/icon.png","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","engines":{"vscode":"^1.53.0"},"main":"./dist/extension","browser":"./dist/browser/extension","categories":["Other"],"extensionKind":["ui","workspace"],"activationEvents":["onCommand:simpleBrowser.show","onCommand:simpleBrowser.api.open","onOpenExternalUri:http","onOpenExternalUri:https","onWebviewPanel:simpleBrowser.view"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"simpleBrowser.show","title":"Show","category":"Simple Browser"}],"configuration":[{"title":"Simple Browser","properties":{"simpleBrowser.focusLockIndicator.enabled":{"type":"boolean","default":true,"title":"Focus Lock Indicator Enabled","description":"Activez/désactivez l'indicateur flottant qui s'affiche quand il a le focus dans le navigateur simple."}}}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.simple-browser","identifier":{"value":"vscode.simple-browser","_lower":"vscode.simple-browser"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/simple-browser","path":"/snap/code/85/usr/share/code/resources/app/extensions/simple-browser","scheme":"file"}},{"name":"sql","displayName":"Concepts de base du langage SQL","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers SQL.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammar.js"},"contributes":{"languages":[{"id":"sql","extensions":[".sql",".dsql"],"aliases":["SQL"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"sql","scopeName":"source.sql","path":"./syntaxes/sql.tmLanguage.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.sql","identifier":{"value":"vscode.sql","_lower":"vscode.sql"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/sql","path":"/snap/code/85/usr/share/code/resources/app/extensions/sql","scheme":"file"}},{"name":"swift","displayName":"Bases du langage Swift","description":"Fournit des extraits de code, la coloration syntaxique et la correspondance des crochets dans les fichiers Swift.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/swift.tmbundle Syntaxes/Swift.tmLanguage ./syntaxes/swift.tmLanguage.json"},"contributes":{"languages":[{"id":"swift","aliases":["Swift","swift"],"extensions":[".swift"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"swift","scopeName":"source.swift","path":"./syntaxes/swift.tmLanguage.json"}],"snippets":[{"language":"swift","path":"./snippets/swift.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.swift","identifier":{"value":"vscode.swift","_lower":"vscode.swift"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/swift","path":"/snap/code/85/usr/share/code/resources/app/extensions/swift","scheme":"file"}},{"name":"theme-abyss","displayName":"Thème Abyss","description":"Thème Abyss pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Abyss","label":"Abysse","uiTheme":"vs-dark","path":"./themes/abyss-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-abyss","identifier":{"value":"vscode.theme-abyss","_lower":"vscode.theme-abyss"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-abyss","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-abyss","scheme":"file"}},{"name":"theme-defaults","displayName":"Thèmes par défaut","description":"Thèmes clair et sombre par défaut de Visual Studio","categories":["Themes"],"version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Default Dark+","label":"Sombre+ (sombre par défaut)","uiTheme":"vs-dark","path":"./themes/dark_plus.json"},{"id":"Default Light+","label":"Clair+ (clair par défaut)","uiTheme":"vs","path":"./themes/light_plus.json"},{"id":"Visual Studio Dark","label":"Sombre (Visual Studio)","uiTheme":"vs-dark","path":"./themes/dark_vs.json"},{"id":"Visual Studio Light","label":"Clair (Visual Studio)","uiTheme":"vs","path":"./themes/light_vs.json"},{"id":"Default High Contrast","label":"Contraste élevé","uiTheme":"hc-black","path":"./themes/hc_black.json"}],"iconThemes":[{"id":"vs-minimal","label":"Minimal (Visual Studio Code)","path":"./fileicons/vs_minimal-icon-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-defaults","identifier":{"value":"vscode.theme-defaults","_lower":"vscode.theme-defaults"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-defaults","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-defaults","scheme":"file"}},{"name":"theme-kimbie-dark","displayName":"Thème Kimble Dark","description":"Thème Kimble dark pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Kimbie Dark","label":"Kimbie sombre","uiTheme":"vs-dark","path":"./themes/kimbie-dark-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-kimbie-dark","identifier":{"value":"vscode.theme-kimbie-dark","_lower":"vscode.theme-kimbie-dark"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-kimbie-dark","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-kimbie-dark","scheme":"file"}},{"name":"theme-monokai","displayName":"Thème Monokai","description":"Thème Monokai pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Monokai","label":"Monokai","uiTheme":"vs-dark","path":"./themes/monokai-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-monokai","identifier":{"value":"vscode.theme-monokai","_lower":"vscode.theme-monokai"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-monokai","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-monokai","scheme":"file"}},{"name":"theme-monokai-dimmed","displayName":"Thème Monokai Dimmed","description":"Thème Monokai Dimmed pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Monokai Dimmed","label":"Monokai estompé","uiTheme":"vs-dark","path":"./themes/dimmed-monokai-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-monokai-dimmed","identifier":{"value":"vscode.theme-monokai-dimmed","_lower":"vscode.theme-monokai-dimmed"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-monokai-dimmed","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-monokai-dimmed","scheme":"file"}},{"name":"theme-quietlight","displayName":"Thème Quiet Light","description":"Thème Quiet Light pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Quiet Light","label":"Quiet clair","uiTheme":"vs","path":"./themes/quietlight-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-quietlight","identifier":{"value":"vscode.theme-quietlight","_lower":"vscode.theme-quietlight"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-quietlight","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-quietlight","scheme":"file"}},{"name":"theme-red","displayName":"Thème Red","description":"Thème Red pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Red","label":"Rouge","uiTheme":"vs-dark","path":"./themes/Red-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-red","identifier":{"value":"vscode.theme-red","_lower":"vscode.theme-red"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-red","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-red","scheme":"file"}},{"name":"vscode-theme-seti","private":true,"version":"1.0.0","displayName":"Seti File Icon Theme","description":"A file icon theme made out of the Seti UI file icons","publisher":"vscode","license":"MIT","icon":"icons/seti-circular-128x128.png","scripts":{"update":"node ./build/update-icon-theme.js"},"engines":{"vscode":"*"},"contributes":{"iconThemes":[{"id":"vs-seti","label":"Seti (Visual Studio Code)","path":"./icons/vs-seti-icon-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.vscode-theme-seti","identifier":{"value":"vscode.vscode-theme-seti","_lower":"vscode.vscode-theme-seti"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-seti","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-seti","scheme":"file"}},{"name":"theme-solarized-dark","displayName":"Thème Solarized Dark","description":"Thème Solarized Dark pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Solarized Dark","label":"Solaire sombre","uiTheme":"vs-dark","path":"./themes/solarized-dark-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-solarized-dark","identifier":{"value":"vscode.theme-solarized-dark","_lower":"vscode.theme-solarized-dark"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-solarized-dark","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-solarized-dark","scheme":"file"}},{"name":"theme-solarized-light","displayName":"Thème Solarized Light","description":"Thème Solarized Light pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Solarized Light","label":"Solaire clair","uiTheme":"vs","path":"./themes/solarized-light-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-solarized-light","identifier":{"value":"vscode.theme-solarized-light","_lower":"vscode.theme-solarized-light"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-solarized-light","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-solarized-light","scheme":"file"}},{"name":"theme-tomorrow-night-blue","displayName":"Thème Tomorrow Night Blue","description":"Thème Tomorrow Night Blue pour Visual Studio Code","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"themes":[{"id":"Tomorrow Night Blue","label":"Tomorrow Night Blue","uiTheme":"vs-dark","path":"./themes/tomorrow-night-blue-color-theme.json"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.theme-tomorrow-night-blue","identifier":{"value":"vscode.theme-tomorrow-night-blue","_lower":"vscode.theme-tomorrow-night-blue"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/theme-tomorrow-night-blue","path":"/snap/code/85/usr/share/code/resources/app/extensions/theme-tomorrow-night-blue","scheme":"file"}},{"name":"typescript","description":"Provides snippets, syntax highlighting, bracket matching and folding in TypeScript files.","displayName":"TypeScript Language Basics","version":"1.0.0","author":"vscode","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ./build/update-grammars.js"},"contributes":{"languages":[{"id":"typescript","aliases":["TypeScript","ts","typescript"],"extensions":[".ts",".cts",".mts"],"configuration":"./language-configuration.json"},{"id":"typescriptreact","aliases":["TypeScript React","tsx"],"extensions":[".tsx"],"configuration":"./language-configuration.json"},{"id":"jsonc","filenames":["tsconfig.json","jsconfig.json"],"filenamePatterns":["tsconfig.*.json","jsconfig.*.json","tsconfig-*.json","jsconfig-*.json"]}],"grammars":[{"language":"typescript","scopeName":"source.ts","path":"./syntaxes/TypeScript.tmLanguage.json","tokenTypes":{"meta.template.expression":"other","meta.template.expression string":"string","meta.template.expression comment":"comment","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"language":"typescriptreact","scopeName":"source.tsx","path":"./syntaxes/TypeScriptReact.tmLanguage.json","embeddedLanguages":{"meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","meta.tag.attributes.tsx":"typescriptreact","meta.embedded.expression.tsx":"typescriptreact"},"tokenTypes":{"meta.template.expression":"other","meta.template.expression string":"string","meta.template.expression comment":"comment","entity.name.type.instance.jsdoc":"other","entity.name.function.tagged-template":"other","meta.import string.quoted":"other","variable.other.jsdoc":"other"}},{"scopeName":"documentation.injection.ts","path":"./syntaxes/jsdoc.ts.injection.tmLanguage.json","injectTo":["source.ts","source.tsx"]},{"scopeName":"documentation.injection.js.jsx","path":"./syntaxes/jsdoc.js.injection.tmLanguage.json","injectTo":["source.js","source.js.jsx"]}],"semanticTokenScopes":[{"language":"typescript","scopes":{"property":["variable.other.property.ts"],"property.readonly":["variable.other.constant.property.ts"],"variable":["variable.other.readwrite.ts"],"variable.readonly":["variable.other.constant.object.ts"],"function":["entity.name.function.ts"],"namespace":["entity.name.type.module.ts"],"variable.defaultLibrary":["support.variable.ts"],"function.defaultLibrary":["support.function.ts"]}},{"language":"typescriptreact","scopes":{"property":["variable.other.property.tsx"],"property.readonly":["variable.other.constant.property.tsx"],"variable":["variable.other.readwrite.tsx"],"variable.readonly":["variable.other.constant.object.tsx"],"function":["entity.name.function.tsx"],"namespace":["entity.name.type.module.tsx"],"variable.defaultLibrary":["support.variable.tsx"],"function.defaultLibrary":["support.function.tsx"]}}],"snippets":[{"language":"typescript","path":"./snippets/typescript.code-snippets"},{"language":"typescriptreact","path":"./snippets/typescript.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.typescript","identifier":{"value":"vscode.typescript","_lower":"vscode.typescript"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/typescript-basics","path":"/snap/code/85/usr/share/code/resources/app/extensions/typescript-basics","scheme":"file"}},{"name":"typescript-language-features","description":"Fournit une prise en charge riche de langage pour JavaScript et TypeScript.","displayName":"Fonctionnalités de langage TypeScript et JavaScript","version":"1.0.0","author":"vscode","publisher":"vscode","license":"MIT","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","enabledApiProposals":["inlayHints","languageStatus","quickPickSeparators","resolvers","workspaceTrust"],"capabilities":{"virtualWorkspaces":{"supported":"limited","description":"Dans les espaces de travail virtuels, la résolution et la recherche de références dans les fichiers ne sont pas prises en charge."},"untrustedWorkspaces":{"supported":"limited","description":"L’extension nécessite l’approbation d’espace de travail lorsque la version de l’espace de travail est utilisée car elle exécute le code spécifié par l’espace de travail.","restrictedConfigurations":["typescript.tsdk","typescript.tsserver.pluginPaths","typescript.npm"]}},"engines":{"vscode":"^1.30.0"},"icon":"media/icon.png","categories":["Programming Languages"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:jsx-tags","onCommand:typescript.reloadProjects","onCommand:javascript.reloadProjects","onCommand:typescript.selectTypeScriptVersion","onCommand:javascript.goToProjectConfig","onCommand:typescript.goToProjectConfig","onCommand:typescript.openTsServerLog","onCommand:workbench.action.tasks.runTask","onCommand:_typescript.configurePlugin","onCommand:_typescript.learnMoreAboutRefactorings","onCommand:typescript.fileReferences","onLanguage:jsonc"],"main":"./dist/extension","browser":"./dist/browser/extension","contributes":{"jsonValidation":[{"fileMatch":"package.json","url":"./schemas/package.schema.json"},{"fileMatch":"tsconfig.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"tsconfig.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig.*.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"tsconfig-*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"tsconfig-*.json","url":"https://json.schemastore.org/tsconfig"},{"fileMatch":"tsconfig.*.json","url":"./schemas/tsconfig.schema.json"},{"fileMatch":"typings.json","url":"https://json.schemastore.org/typings"},{"fileMatch":".bowerrc","url":"https://json.schemastore.org/bowerrc"},{"fileMatch":".babelrc","url":"https://json.schemastore.org/babelrc"},{"fileMatch":".babelrc.json","url":"https://json.schemastore.org/babelrc"},{"fileMatch":"babel.config.json","url":"https://json.schemastore.org/babelrc"},{"fileMatch":"jsconfig.json","url":"https://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.json","url":"./schemas/jsconfig.schema.json"},{"fileMatch":"jsconfig.*.json","url":"https://json.schemastore.org/jsconfig"},{"fileMatch":"jsconfig.*.json","url":"./schemas/jsconfig.schema.json"}],"configuration":{"type":"object","title":"TypeScript","order":20,"properties":{"typescript.tsdk":{"type":"string","markdownDescription":"Indique le chemin de dossier des fichiers tsserver et `lib*.d.ts` dans une installation de TypeScript à utiliser pour IntelliSense. Exemple : `./node_modules/typescript/lib`.\r\n\r\n- Si elle est spécifiée sous forme de paramètre utilisateur, la version de TypeScript dans `typescript.tsdk` remplace automatiquement la version de TypeScript intégrée.\r\n- Si elle est spécifiée sous forme de paramètre d’espace de travail, `typescript.tsdk` vous permet d’utiliser cette version d’espace de travail de TypeScript pour IntelliSense avec la commande `TypeScript: Select TypeScript version`.\r\n\r\nConsultez la [documentation de TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) pour plus d’informations sur la gestion des versions de TypeScript.","scope":"window"},"typescript.disableAutomaticTypeAcquisition":{"type":"boolean","default":false,"markdownDescription":"Désactive l’[acquisition automatique de type](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). L’acquisition automatique de type récupère les packages `@types` par le biais de npm afin d’améliorer IntelliSense pour les bibliothèques externes.","scope":"window","tags":["usesOnlineServices"]},"typescript.enablePromptUseWorkspaceTsdk":{"type":"boolean","default":false,"description":"Permet d'inviter les utilisateurs à se servir de la version TypeScript configurée dans l'espace de travail pour IntelliSense.","scope":"window"},"typescript.npm":{"type":"string","markdownDescription":"Indique le chemin d’accès à l’exécutable npm utilisé pour l’[acquisition automatique de type] (https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).","scope":"machine"},"typescript.check.npmIsInstalled":{"type":"boolean","default":true,"markdownDescription":"Vérifiez si npm est installé pour l’[acquisition automatique de type] (https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).","scope":"window"},"javascript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Activez/désactivez les références CodeLens dans les fichiers JavaScript.","scope":"window"},"javascript.referencesCodeLens.showOnAllFunctions":{"type":"boolean","default":false,"description":"Activez/désactivez les références CodeLens sur toutes les fonctions des fichiers JavaScript.","scope":"window"},"typescript.referencesCodeLens.enabled":{"type":"boolean","default":false,"description":"Activez/désactivez les références CodeLens dans les fichiers TypeScript.","scope":"window"},"typescript.referencesCodeLens.showOnAllFunctions":{"type":"boolean","default":false,"description":"Activez/désactivez les références CodeLens sur toutes les fonctions des fichiers TypeScript.","scope":"window"},"typescript.implementationsCodeLens.enabled":{"type":"boolean","default":false,"description":"Activer/désactiver les implémentations CodeLens. Ce CodeLens affiche l'implémenteur d’une interface.","scope":"window"},"typescript.tsserver.enableTracing":{"type":"boolean","default":false,"description":"Active le traçage des performances du serveur TS dans un répertoire. Ces fichiers de trace permettent de diagnostiquer les problèmes de performances du serveur TS. Le journal peut contenir des chemins de fichiers, du code source et d'autres informations potentiellement sensibles de votre projet.","scope":"window"},"typescript.tsserver.log":{"type":"string","enum":["off","terse","normal","verbose"],"default":"off","description":"Active la journalisation du serveur TS dans un fichier. Ce journal peut être utilisé pour diagnostiquer les problèmes du serveur TS. Il peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.","scope":"window"},"typescript.tsserver.pluginPaths":{"type":"array","items":{"type":"string","description":"Un chemin absolu ou un chemin relatif. Le chemin d’accès relatif sera résolu en fonction des dossiers de l’espace de travail."},"default":[],"description":"Chemins supplémentaires pour découvrir les plug-ins Service de langage Typescript.","scope":"machine"},"typescript.tsserver.trace":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Active le traçage des messages envoyés au serveur TS. Cette trace peut être utilisée pour diagnostiquer les problèmes du serveur TS. Elle peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.","scope":"window"},"javascript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Fonctions complètes avec leur signature de paramètre.","scope":"resource"},"typescript.suggest.completeFunctionCalls":{"type":"boolean","default":false,"description":"Fonctions complètes avec leur signature de paramètre.","scope":"resource"},"javascript.suggest.includeAutomaticOptionalChainCompletions":{"type":"boolean","default":true,"description":"Activez/désactivez l'affichage des complétions sur des valeurs potentiellement indéfinies qui insèrent un appel de chaîne facultatif. Nécessite TS 3.7+ et l'activation des vérifications de valeur null stricte.","scope":"resource"},"typescript.suggest.includeAutomaticOptionalChainCompletions":{"type":"boolean","default":true,"description":"Activez/désactivez l'affichage des complétions sur des valeurs potentiellement indéfinies qui insèrent un appel de chaîne facultatif. Nécessite TS 3.7+ et l'activation des vérifications de valeur null stricte.","scope":"resource"},"typescript.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Désactiver les indicateurs de nom de paramètre.","Active les indicateurs de noms de paramètres uniquement pour les arguments littéraux.","Active les indicateurs de noms de paramètres pour les arguments littéraux et non littéraux."],"default":"none","markdownDescription":"Activer/désactiver les indicateurs de Inlay pour les noms de paramètres :\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName":{"type":"boolean","default":true,"markdownDescription":"Supprime les indicateurs de nom de paramètre sur les arguments dont le texte est identique au nom du paramètre.","scope":"resource"},"typescript.inlayHints.parameterTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de paramètres implicites :\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```\r\nIl faut utiliser TypeScript 4.4+ dans l'espace de travail.","scope":"resource"},"typescript.inlayHints.variableTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de variables implicites \r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"typescript.inlayHints.propertyDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d’incrustation pour les types implicites dans les déclarations de propriété :\r\n```typescript\r\n\r\nclasse Foo {\r\n\tprop/* :number */= Date.now();\r\n}\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"typescript.inlayHints.functionLikeReturnTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de retour implicites sur les signatures de fonctions \r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"typescript.inlayHints.enumMemberValues.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les valeurs des membres dans les déclarations d'énumération \r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.inlayHints.parameterNames.enabled":{"type":"string","enum":["none","literals","all"],"enumDescriptions":["Désactiver les indicateurs de nom de paramètre.","Active les indicateurs de noms de paramètres uniquement pour les arguments littéraux.","Active les indicateurs de noms de paramètres pour les arguments littéraux et non littéraux."],"default":"none","markdownDescription":"Activer/désactiver les indicateurs de Inlay pour les noms de paramètres :\r\n```typescript\r\n\r\nparseInt(/* str: */ '123', /* radix: */ 8)\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName":{"type":"boolean","default":true,"markdownDescription":"Supprime les indicateurs de nom de paramètre sur les arguments dont le texte est identique au nom du paramètre.","scope":"resource"},"javascript.inlayHints.parameterTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de paramètres implicites :\r\n```typescript\r\n\r\nel.addEventListener('click', e /* :MouseEvent */ => ...)\r\n \r\n```\r\nIl faut utiliser TypeScript 4.4+ dans l'espace de travail.","scope":"resource"},"javascript.inlayHints.variableTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de variables implicites \r\n```typescript\r\n\r\nconst foo /* :number */ = Date.now();\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.inlayHints.propertyDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d’incrustation pour les types implicites dans les déclarations de propriété :\r\n```typescript\r\n\r\nclasse Foo {\r\n\tprop/* :number */= Date.now();\r\n}\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.inlayHints.functionLikeReturnTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les types de retour implicites sur les signatures de fonctions \r\n```typescript\r\n\r\nfunction foo() /* :number */ {\r\n\treturn Date.now();\r\n} \r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.inlayHints.enumMemberValues.enabled":{"type":"boolean","default":false,"markdownDescription":"Activer/désactiver les conseils d'incrustation pour les valeurs des membres dans les déclarations d'énumération \r\n```typescript\r\n\r\nenum MyValue {\r\n\tA /* = 0 */;\r\n\tB /* = 1 */;\r\n}\r\n \r\n```\r\nNécessite l’utilisation de TypeScript 4.4 + dans l’espace de travail.","scope":"resource"},"javascript.suggest.includeCompletionsForImportStatements":{"type":"boolean","default":true,"description":"Active/désactive les complétions basées sur l'importation automatique pour les instructions d'importation partiellement tapées. Nécessite l'utilisation de TypeScript 4.3+ dans l'espace de travail.","scope":"resource"},"typescript.suggest.includeCompletionsForImportStatements":{"type":"boolean","default":true,"description":"Active/désactive les complétions basées sur l'importation automatique pour les instructions d'importation partiellement tapées. Nécessite l'utilisation de TypeScript 4.3+ dans l'espace de travail.","scope":"resource"},"typescript.suggest.includeCompletionsWithSnippetText":{"type":"boolean","default":true,"description":"Active/désactive les complétions d'extraits à partir de TS Server. Nécessite l'utilisation de TypeScript 4.3+ dans l'espace de travail.","scope":"resource"},"typescript.reportStyleChecksAsWarnings":{"type":"boolean","default":true,"description":"Rapporter les vérifications de style en tant qu’avertissements.","scope":"window"},"typescript.validate.enable":{"type":"boolean","default":true,"description":"Activez/désactivez la validation TypeScript.","scope":"window"},"typescript.format.enable":{"type":"boolean","default":true,"description":"Activez/désactivez le formateur TypeScript par défaut.","scope":"window"},"typescript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après une virgule de délimitation.","scope":"resource"},"typescript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après le mot clé du constructeur.","scope":"resource"},"typescript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":" Définit le traitement des espaces après un point-virgule dans une instruction for.","scope":"resource"},"typescript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après un opérateur binaire.","scope":"resource"},"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Définit la gestion des espaces après les mots clés dans une instruction de flux de contrôle.","scope":"resource"},"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après le mot clé function pour les fonctions anonymes.","scope":"resource"},"typescript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Définit le traitement des espaces avant les parenthèses d'arguments de la fonction.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Définit l’espace après ouverture et avant la fermeture de parenthèses non vides.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Définit l’espace après ouverture et avant la fermeture de crochets non vides.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades non vides.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture d'accolades vides.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades de chaîne de modèle.","scope":"resource"},"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades d'expression JSX.","scope":"resource"},"typescript.format.insertSpaceAfterTypeAssertion":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après les assertions de type dans TypeScript.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Définit si une accolade ouvrante dans une fonction est placée ou non sur une nouvelle ligne.","scope":"resource"},"typescript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Définit si une accolade ouvrante dans un bloc de contrôle est placée ou non sur une nouvelle ligne.","scope":"resource"},"typescript.format.semicolons":{"type":"string","default":"ignore","description":"Définit la gestion des points-virgules facultatifs. Nécessite l'utilisation de TypeScript 3.7 ou plus récent dans l'espace de travail.","scope":"resource","enum":["ignore","insert","remove"],"enumDescriptions":["N'insérez ou n'enlevez aucun point-virgule.","Insérez des points-virgules à la fin des instructions.","Supprimez les points-virgules inutiles."]},"javascript.validate.enable":{"type":"boolean","default":true,"description":"Activez/désactivez la validation JavaScript.","scope":"window"},"javascript.format.enable":{"type":"boolean","default":true,"description":"Activez/désactivez le formateur JavaScript par défaut.","scope":"window"},"javascript.format.insertSpaceAfterCommaDelimiter":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après une virgule de délimitation.","scope":"resource"},"javascript.format.insertSpaceAfterConstructor":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après le mot clé du constructeur.","scope":"resource"},"javascript.format.insertSpaceAfterSemicolonInForStatements":{"type":"boolean","default":true,"description":" Définit le traitement des espaces après un point-virgule dans une instruction for.","scope":"resource"},"javascript.format.insertSpaceBeforeAndAfterBinaryOperators":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après un opérateur binaire.","scope":"resource"},"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"Définit la gestion des espaces après les mots clés dans une instruction de flux de contrôle.","scope":"resource"},"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après le mot clé function pour les fonctions anonymes.","scope":"resource"},"javascript.format.insertSpaceBeforeFunctionParenthesis":{"type":"boolean","default":false,"description":"Définit le traitement des espaces avant les parenthèses d'arguments de la fonction.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis":{"type":"boolean","default":false,"description":"Définit l’espace après ouverture et avant la fermeture de parenthèses non vides.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets":{"type":"boolean","default":false,"description":"Définit l’espace après ouverture et avant la fermeture de crochets non vides.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades non vides.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces":{"type":"boolean","default":true,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture d'accolades vides.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades de chaîne de modèle.","scope":"resource"},"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces":{"type":"boolean","default":false,"description":"Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades d'expression JSX.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForFunctions":{"type":"boolean","default":false,"description":"Définit si une accolade ouvrante dans une fonction est placée ou non sur une nouvelle ligne.","scope":"resource"},"javascript.format.placeOpenBraceOnNewLineForControlBlocks":{"type":"boolean","default":false,"description":"Définit si une accolade ouvrante dans un bloc de contrôle est placée ou non sur une nouvelle ligne.","scope":"resource"},"javascript.format.semicolons":{"type":"string","default":"ignore","description":"Définit la gestion des points-virgules facultatifs. Nécessite l'utilisation de TypeScript 3.7 ou plus récent dans l'espace de travail.","scope":"resource","enum":["ignore","insert","remove"],"enumDescriptions":["N'insérez ou n'enlevez aucun point-virgule.","Insérez des points-virgules à la fin des instructions.","Supprimez les points-virgules inutiles."]},"javascript.implicitProjectConfig.checkJs":{"type":"boolean","default":false,"markdownDescription":"Active/désactive la vérification sémantique des fichiers JavaScript. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","markdownDeprecationMessage":"Ce paramètre est déprécié au profit de 'js/ts.implicitProjectConfig.checkJs'.","scope":"window"},"js/ts.implicitProjectConfig.checkJs":{"type":"boolean","default":false,"markdownDescription":"Active/désactive la vérification sémantique des fichiers JavaScript. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","scope":"window"},"javascript.implicitProjectConfig.experimentalDecorators":{"type":"boolean","default":false,"markdownDescription":"Active/désactive 'experimentalDecorators' dans les fichiers JavaScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","markdownDeprecationMessage":"Ce paramètre est déprécié au profit de 'js/ts.implicitProjectConfig.experimentalDecorators'.","scope":"window"},"js/ts.implicitProjectConfig.experimentalDecorators":{"type":"boolean","default":false,"markdownDescription":"Active/désactive 'experimentalDecorators' dans les fichiers JavaScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","scope":"window"},"js/ts.implicitProjectConfig.strictNullChecks":{"type":"boolean","default":false,"markdownDescription":"Active/désactive les [vérifications de valeur null strictes](https://www.typescriptlang.org/tsconfig#strictNullChecks) dans les fichiers JavaScript et TypeScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","scope":"window"},"js/ts.implicitProjectConfig.strictFunctionTypes":{"type":"boolean","default":true,"markdownDescription":"Active/désactive les [types de fonction stricts](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) dans les fichiers JavaScript et TypeScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.","scope":"window"},"javascript.suggest.names":{"type":"boolean","default":true,"markdownDescription":"Activez/désactivez l'inclusion de noms uniques à partir du fichier dans les suggestions JavaScript. Notez que les suggestions de nom sont toujours désactivées dans le code JavaScript qui fait l'objet d'une vérification sémantique à l'aide de '@ts-check' ou 'checkJs'.","scope":"resource"},"typescript.tsc.autoDetect":{"type":"string","default":"on","enum":["on","off","build","watch"],"markdownEnumDescriptions":["Créer les tâches build et watch.","Désactivez cette fonctionnalité.","Créer uniquement des tâches de compilation à exécution unique.","Créer uniquement des tâches compile et watch."],"description":"Contrôle la détection automatique des tâches tsc.","scope":"window"},"javascript.suggest.paths":{"type":"boolean","default":true,"description":"Activer/désactiver des suggestions pour les chemins dans les instructions d'import et les appels require.","scope":"resource"},"typescript.suggest.paths":{"type":"boolean","default":true,"description":"Activer/désactiver des suggestions pour les chemins dans les instructions d'import et les appels require.","scope":"resource"},"javascript.suggest.autoImports":{"type":"boolean","default":true,"description":"Active/désactive les suggestions d'importation automatique.","scope":"resource"},"typescript.suggest.autoImports":{"type":"boolean","default":true,"description":"Active/désactive les suggestions d'importation automatique.","scope":"resource"},"javascript.suggest.completeJSDocs":{"type":"boolean","default":true,"description":"Activez/désactivez la suggestion pour commenter JSDoc.","scope":"resource"},"typescript.suggest.completeJSDocs":{"type":"boolean","default":true,"description":"Activez/désactivez la suggestion pour commenter JSDoc.","scope":"resource"},"javascript.suggest.jsdoc.generateReturns":{"type":"boolean","default":true,"markdownDescription":"Activez/désactivez la génération d'annotations '@return' pour les modèles JSDoc. Nécessite l'utilisation de TypeScript 4.2+ dans l'espace de travail.","scope":"resource"},"typescript.suggest.jsdoc.generateReturns":{"type":"boolean","default":true,"markdownDescription":"Activez/désactivez la génération d'annotations '@return' pour les modèles JSDoc. Nécessite l'utilisation de TypeScript 4.2+ dans l'espace de travail.","scope":"resource"},"typescript.locale":{"type":"string","enum":["de","es","en","fr","it","ja","ko","ru","zh-CN","zh-TW"],"markdownDescription":"Définit la locale utilisée pour signaler les erreurs JavaScript et TypeScript. Par défaut, la locale de VS Code est utilisée.","scope":"window"},"javascript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Active/désactive les diagnostics de suggestion pour les fichiers JavaScript dans l'éditeur.","scope":"resource"},"typescript.suggestionActions.enabled":{"type":"boolean","default":true,"description":"Active/désactive les diagnostics de suggestion pour les fichiers TypeScript dans l'éditeur.","scope":"resource"},"javascript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Style de guillemet par défaut à utiliser pour les corrections rapides : 'single' pour les guillemets simples, 'double' pour les guillemets doubles ou 'auto' pour déduire le type de guillemet à partir des importations existantes.","scope":"resource"},"typescript.preferences.quoteStyle":{"type":"string","enum":["auto","single","double"],"default":"auto","markdownDescription":"Style de guillemet par défaut à utiliser pour les corrections rapides : 'single' pour les guillemets simples, 'double' pour les guillemets doubles ou 'auto' pour déduire le type de guillemet à partir des importations existantes.","scope":"resource"},"javascript.preferences.importModuleSpecifier":{"type":"string","enum":["shortest","relative","non-relative","project-relative"],"markdownEnumDescriptions":["Préfère une importation non relative uniquement si celle-ci comporte moins de segments de chemin qu'une importation relative.","Préfère un chemin relatif par rapport à l'emplacement du fichier importé.","Préfère une importation non relative basée sur le 'baseUrl' ou les 'paths' configurés dans votre 'jsconfig.json' / 'tsconfig.json'.","Préfère une importation non relative uniquement si le chemin d'importation relatif omet le répertoire du package ou du projet. Nécessite l'utilisation de TypeScript 4.2+ dans l'espace de travail."],"default":"shortest","description":"Style de chemin préféré pour les importations automatiques.","scope":"resource"},"typescript.preferences.importModuleSpecifier":{"type":"string","enum":["shortest","relative","non-relative","project-relative"],"markdownEnumDescriptions":["Préfère une importation non relative uniquement si celle-ci comporte moins de segments de chemin qu'une importation relative.","Préfère un chemin relatif par rapport à l'emplacement du fichier importé.","Préfère une importation non relative basée sur le 'baseUrl' ou les 'paths' configurés dans votre 'jsconfig.json' / 'tsconfig.json'.","Préfère une importation non relative uniquement si le chemin d'importation relatif omet le répertoire du package ou du projet. Nécessite l'utilisation de TypeScript 4.2+ dans l'espace de travail."],"default":"shortest","description":"Style de chemin préféré pour les importations automatiques.","scope":"resource"},"javascript.preferences.importModuleSpecifierEnding":{"type":"string","enum":["auto","minimal","index","js"],"markdownEnumDescriptions":["Utilisez les paramètres de projet pour sélectionner une valeur par défaut.","Raccourcissez './component/index.js' en './component'.","Raccourcissez './component/index.js' en './component/index'.","Ne pas raccourcir les terminaisons de chemin; inclure l’extension '.js'."],"default":"auto","description":"Chemin d’accès préféré se terminant par les importations automatiques. Nécessite l’utilisation de TypeScript 4.5+ dans l’espace de travail.","scope":"resource"},"typescript.preferences.importModuleSpecifierEnding":{"type":"string","enum":["auto","minimal","index","js"],"markdownEnumDescriptions":["Utilisez les paramètres de projet pour sélectionner une valeur par défaut.","Raccourcissez './component/index.js' en './component'.","Raccourcissez './component/index.js' en './component/index'.","Ne pas raccourcir les terminaisons de chemin; inclure l’extension '.js'."],"default":"auto","description":"Chemin d’accès préféré se terminant par les importations automatiques. Nécessite l’utilisation de TypeScript 4.5+ dans l’espace de travail.","scope":"resource"},"javascript.preferences.jsxAttributeCompletionStyle":{"type":"string","enum":["auto","braces","none"],"markdownEnumDescriptions":["Insérez `={}` or `=\"\"` après les noms d’attributs en fonction du type de propriété.","Insérez '={}' après les noms d’attributs.","Insérez uniquement des noms d’attributs."],"default":"auto","description":"Style préféré pour les saisies semi-automatiques d’attribut JSX.","scope":"resource"},"typescript.preferences.jsxAttributeCompletionStyle":{"type":"string","enum":["auto","braces","none"],"markdownEnumDescriptions":["Insérez `={}` or `=\"\"` après les noms d’attributs en fonction du type de propriété.","Insérez '={}' après les noms d’attributs.","Insérez uniquement des noms d’attributs."],"default":"auto","description":"Style préféré pour les saisies semi-automatiques d’attribut JSX.","scope":"resource"},"typescript.preferences.includePackageJsonAutoImports":{"type":"string","enum":["auto","on","off"],"enumDescriptions":["Rechercher dans les dépendances en fonction de l'impact estimé des performances.","Toujours rechercher dans les dépendances.","Ne jamais rechercher dans les dépendances."],"default":"auto","markdownDescription":"Activer/désactiver la recherche dans les dépendances 'package.json' pour les importations automatiques disponibles.","scope":"window"},"javascript.preferences.renameShorthandProperties":{"type":"boolean","default":true,"description":"Activez/désactivez l'introduction d'alias pour les propriétés de raccourci d'objet durant les renommages. Nécessite l'utilisation de TypeScript 3.4 (ou version ultérieure) dans l'espace de travail.","deprecationMessage":"Le paramètre 'typescript.preferences.renameShorthandProperties' a été déprécié au profit de 'typescript.preferences.useAliasesForRenames'","scope":"resource"},"typescript.preferences.renameShorthandProperties":{"type":"boolean","default":true,"description":"Activez/désactivez l'introduction d'alias pour les propriétés de raccourci d'objet durant les renommages. Nécessite l'utilisation de TypeScript 3.4 (ou version ultérieure) dans l'espace de travail.","deprecationMessage":"Le paramètre 'typescript.preferences.renameShorthandProperties' a été déprécié au profit de 'typescript.preferences.useAliasesForRenames'","scope":"resource"},"javascript.preferences.useAliasesForRenames":{"type":"boolean","default":true,"description":"Activez/désactivez l'introduction d'alias pour les propriétés de raccourci d'objet durant les renommages. Nécessite l'utilisation de TypeScript 3.4 (ou version ultérieure) dans l'espace de travail.","scope":"resource"},"typescript.preferences.useAliasesForRenames":{"type":"boolean","default":true,"description":"Activez/désactivez l'introduction d'alias pour les propriétés de raccourci d'objet durant les renommages. Nécessite l'utilisation de TypeScript 3.4 (ou version ultérieure) dans l'espace de travail.","scope":"resource"},"typescript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Demander à chaque renommage.","Toujours mettre à jour les chemins automatiquement.","Ne jamais renommer les chemins et ne pas demander."],"default":"prompt","description":"Active/désactive la mise à jour automatique des chemins d’importation quand vous renommez ou déplacez un fichier dans VS Code.","scope":"resource"},"javascript.updateImportsOnFileMove.enabled":{"type":"string","enum":["prompt","always","never"],"markdownEnumDescriptions":["Demander à chaque renommage.","Toujours mettre à jour les chemins automatiquement.","Ne jamais renommer les chemins et ne pas demander."],"default":"prompt","description":"Active/désactive la mise à jour automatique des chemins d’importation quand vous renommez ou déplacez un fichier dans VS Code.","scope":"resource"},"typescript.autoClosingTags":{"type":"boolean","default":true,"description":"Active/désactive la fermeture automatique des balises JSX."},"javascript.autoClosingTags":{"type":"boolean","default":true,"description":"Active/désactive la fermeture automatique des balises JSX."},"javascript.suggest.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver les suggestions d'autocomplétion.","scope":"resource"},"typescript.suggest.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver les suggestions d'autocomplétion.","scope":"resource"},"typescript.surveys.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver des enquêtes ponctuelles qui nous aident à améliorer le support JavaScript et TypeScript de VS Code.","scope":"window"},"typescript.tsserver.useSeparateSyntaxServer":{"type":"boolean","default":true,"description":"Activez/désactivez la génération dynamique d'un serveur TypeScript distinct capable de répondre plus rapidement aux opérations de syntaxe, comme le calcul du pliage ou le calcul des symboles de document. Nécessite l'utilisation de TypeScript 3.4.0 ou supérieur dans l'espace de travail.","markdownDeprecationMessage":"Ce paramètre a été déconseillé en faveur de « typescript.tsserver.useSyntaxServer » .","scope":"window"},"typescript.tsserver.useSyntaxServer":{"type":"string","scope":"window","description":"Contrôle si TypeScript lance un serveur dédié pour gérer plus rapidement les opérations liées à la syntaxe, comme le repli du code de calcul.","default":"auto","enum":["always","never","auto"],"enumDescriptions":["Utilisez un serveur de Syntaxe plus léger pour gérer toutes les opérations IntelliSense. Ce serveur de Syntaxe ne peut fournir que IntelliSense pour les fichiers ouverts.","N’utilisez pas un serveur de Syntaxe dédié. Utilisez un seul serveur pour gérer toutes les opérations IntelliSense.","Générez un serveur complet et un poids plus léger dédié aux opérations de Syntaxe. Le serveur de Syntaxe est utilisé pour accélérer les opérations de syntaxe et fournir IntelliSense quand les projets sont en cours de chargement."]},"typescript.tsserver.maxTsServerMemory":{"type":"number","default":3072,"description":"Quantité maximale de mémoire (en Mo) à allouer au processus du serveur TypeScript.","scope":"window"},"typescript.tsserver.experimental.enableProjectDiagnostics":{"type":"boolean","default":false,"description":"(Expérimental) Permet de signaler les erreurs à l'échelle du projet.","scope":"window"},"typescript.tsserver.watchOptions":{"type":"object","description":"Configurez les stratégies de surveillance qui doivent être utilisées pour effectuer le suivi des fichiers et répertoires. Nécessite l'utilisation de TypeScript 3.8+ dans l'espace de travail.","scope":"window","properties":{"watchFile":{"type":"string","description":"Stratégie de surveillance des fichiers individuels.","enum":["fixedChunkSizePolling","fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling","useFsEvents","useFsEventsOnParentDirectory"],"enumDescriptions":["Interroge les fichiers par blocs à intervalles réguliers. Nécessite l'utilisation de TypeScript 4.3+ dans l'espace de travail.","Recherchez les changements dans chaque fichier plusieurs fois par seconde à intervalle fixe.","Recherchez les changements dans chaque fichier plusieurs fois par seconde, mais utilisez une méthode heuristique pour vérifier certains types de fichiers moins souvent que d'autres.","Utilisez une file d'attente dynamique où les fichiers modifiés moins souvent sont vérifiés moins souvent.","Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour les changements de fichier.","Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour écouter les changements des répertoires qui contiennent un fichier. Peut utiliser moins d'observateurs de fichiers, mais risque d'être moins précis."],"default":"useFsEvents"},"watchDirectory":{"type":"string","description":"Stratégie de surveillance d'arborescences de répertoires complètes sous des systèmes sans fonctionnalité de surveillance récursive des fichiers.","enum":["fixedChunkSizePolling","fixedPollingInterval","dynamicPriorityPolling","useFsEvents"],"enumDescriptions":["Interroge les répertoires par blocs à intervalles réguliers. Nécessite l'utilisation de TypeScript 4.3+ dans l'espace de travail.","Recherchez les changements dans chaque répertoire plusieurs fois par seconde à intervalle fixe.","Utilisez une file d'attente dynamique où les répertoires modifiés moins souvent sont vérifiés moins souvent.","Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour les changements de répertoire."],"default":"useFsEvents"},"fallbackPolling":{"type":"string","description":"Quand vous utilisez des événements de système de fichiers, cette option spécifie la stratégie de sondage qui est utilisée quand le système n'a plus d'observateurs de fichiers natifs et/ou ne prend pas en charge les observateurs de fichiers natifs.","enum":["fixedPollingInterval","priorityPollingInterval","dynamicPriorityPolling"],"enumDescriptions":["configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval","configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval","configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"]},"synchronousWatchDirectory":{"type":"boolean","description":"Désactivez la surveillance différée sur les répertoires. La surveillance différée est utile quand de nombreux changements de fichier sont susceptibles de se produire en même temps (par ex., un changement dans node_modules lié à l'exécution de npm install), mais vous pouvez aussi la désactiver avec cet indicateur pour des configurations moins courantes."}}},"typescript.workspaceSymbols.scope":{"type":"string","enum":["allOpenProjects","currentProject"],"enumDescriptions":["Recherche des symboles dans tous les projets JavaScript ou TypeScript ouverts. Nécessite l'utilisation de TypeScript 3.9 (ou version ultérieure) dans l'espace de travail.","Recherche uniquement les symboles dans le projet JavaScript ou TypeScript actif."],"default":"allOpenProjects","markdownDescription":"Détermine quels sont les fichiers recherchés par [atteindre le symbole dans l'espace de travail](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).","scope":"window"},"javascript.suggest.classMemberSnippets.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver les complétions de snippet pour les membres de la classe. Nécessite l'utilisation de TypeScript 4.5+ dans l'espace de travail.","scope":"resource"},"typescript.suggest.classMemberSnippets.enabled":{"type":"boolean","default":true,"description":"Activer/désactiver les complétions de snippet pour les membres de la classe. Nécessite l'utilisation de TypeScript 4.5+ dans l'espace de travail.","scope":"resource"}}},"commands":[{"command":"typescript.reloadProjects","title":{"value":"Recharger le projet","original":"Reload Project"},"category":"TypeScript"},{"command":"javascript.reloadProjects","title":{"value":"Recharger le projet","original":"Reload Project"},"category":"JavaScript"},{"command":"typescript.selectTypeScriptVersion","title":{"value":"Sélectionner la version de TypeScript...","original":"Select TypeScript Version..."},"category":"TypeScript"},{"command":"typescript.goToProjectConfig","title":{"value":"Accéder à la configuration du projet","original":"Go to Project Configuration"},"category":"TypeScript"},{"command":"javascript.goToProjectConfig","title":{"value":"Accéder à la configuration du projet","original":"Go to Project Configuration"},"category":"JavaScript"},{"command":"typescript.openTsServerLog","title":{"value":"Ouvrir le journal du serveur TS","original":"Open TS Server log"},"category":"TypeScript"},{"command":"typescript.restartTsServer","title":{"value":"Redémarrer le serveur TS","original":"Restart TS server"},"category":"TypeScript"},{"command":"typescript.findAllFileReferences","title":{"value":"Rechercher les références de fichiers","original":"Find File References"},"category":"TypeScript"}],"menus":{"commandPalette":[{"command":"typescript.reloadProjects","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.reloadProjects","when":"editorLangId == typescriptreact && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.reloadProjects","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescript && typescript.isManagedFile"},{"command":"typescript.goToProjectConfig","when":"editorLangId == typescriptreact"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascript && typescript.isManagedFile"},{"command":"javascript.goToProjectConfig","when":"editorLangId == javascriptreact && typescript.isManagedFile"},{"command":"typescript.selectTypeScriptVersion","when":"typescript.isManagedFile"},{"command":"typescript.openTsServerLog","when":"typescript.isManagedFile"},{"command":"typescript.restartTsServer","when":"typescript.isManagedFile"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && typescript.isManagedFile"}],"explorer/context":[{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescript","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescriptreact","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascript","group":"4_search"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascriptreact","group":"4_search"}],"editor/title/context":[{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascript"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == javascriptreact"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescript"},{"command":"typescript.findAllFileReferences","when":"tsSupportsFileReferences && resourceLangId == typescriptreact"}]},"breakpoints":[{"language":"typescript"},{"language":"typescriptreact"}],"taskDefinitions":[{"type":"typescript","required":["tsconfig"],"properties":{"tsconfig":{"type":"string","description":"Fichier tsconfig qui définit la build TS."},"option":{"type":"string"}},"when":"shellExecutionSupported"}],"problemPatterns":[{"name":"tsc","regexp":"^([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$","file":1,"line":2,"column":3,"severity":4,"code":5,"message":6}],"problemMatchers":[{"name":"tsc","label":"Problèmes liés à TypeScript","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc"},{"name":"tsc-watch","label":"Problèmes liés à TypeScript (mode espion)","owner":"typescript","source":"ts","applyTo":"closedDocuments","fileLocation":["relative","${cwd}"],"pattern":"$tsc","background":{"activeOnStart":true,"beginsPattern":{"regexp":"^\\s*(?:message TS6032:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) File change detected\\. Starting incremental compilation\\.\\.\\."},"endsPattern":{"regexp":"^\\s*(?:message TS6042:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (?:Compilation complete\\.|Found \\d+ errors?\\.) Watching for file changes\\."}}}],"codeActions":[{"languages":["javascript","javascriptreact","typescript","typescriptreact"],"actions":[{"kind":"refactor.extract.constant","title":"Extraire la constante","description":"Extrayez l'expression vers une constante."},{"kind":"refactor.extract.function","title":"Extraire la fonction","description":"Extrayez l'expression vers une méthode ou une fonction."},{"kind":"refactor.extract.interface","title":"Extraire l'interface","description":"Extraire le type vers une interface."},{"kind":"refactor.extract.type","title":"Extraire le type","description":"Extrayez le type vers un alias de type."},{"kind":"refactor.rewrite.import","title":"Convertir l'importation","description":"Convertissez les importations nommées en importations d'espace de noms, et vice versa."},{"kind":"refactor.rewrite.export","title":"Convertir l'exportation","description":"Convertissez l'exportation par défaut en exportation nommée, et vice versa."},{"kind":"refactor.rewrite.arrow.braces","title":"Réécrire les accolades arrow","description":"Ajoutez ou supprimez des accolades dans une fonction arrow."},{"kind":"refactor.rewrite.parameters.toDestructured","title":"Convertir les paramètres en objet déstructuré"},{"kind":"refactor.rewrite.property.generateAccessors","title":"Générer des accesseurs","description":"Générer les accesseurs 'get' et 'set'"},{"kind":"refactor.move.newFile","title":"Déplacer vers un nouveau fichier","description":"Déplacez l'expression dans un nouveau fichier."},{"kind":"source.organizeImports","title":"Organiser les importations"}]}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.typescript-language-features","identifier":{"value":"vscode.typescript-language-features","_lower":"vscode.typescript-language-features"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/typescript-language-features","path":"/snap/code/85/usr/share/code/resources/app/extensions/typescript-language-features","scheme":"file"}},{"name":"vb","displayName":"Concepts de base du langage Visual Basic","description":"Fournit des extraits de code, la coloration syntaxique, la correspondance des crochets et le repli dans les fichiers Visual Basic.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/asp.vb.net.tmbundle Syntaxes/ASP%20VB.net.plist ./syntaxes/asp-vb-net.tmlanguage.json"},"contributes":{"languages":[{"id":"vb","extensions":[".vb",".brs",".vbs",".bas",".vba"],"aliases":["Visual Basic","vb"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"vb","scopeName":"source.asp.vb.net","path":"./syntaxes/asp-vb-net.tmlanguage.json"}],"snippets":[{"language":"vb","path":"./snippets/vb.code-snippets"}]},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.vb","identifier":{"value":"vscode.vb","_lower":"vscode.vb"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/vb","path":"/snap/code/85/usr/share/code/resources/app/extensions/vb","scheme":"file"}},{"name":"xml","displayName":"Concepts de base du langage XML","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers XML.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"contributes":{"languages":[{"id":"xml","extensions":[".xml",".xsd",".ascx",".atom",".axml",".axaml",".bpmn",".cpt",".csl",".csproj",".csproj.user",".dita",".ditamap",".dtd",".ent",".mod",".dtml",".fsproj",".fxml",".iml",".isml",".jmx",".launch",".menu",".mxml",".nuspec",".opml",".owl",".proj",".props",".pt",".publishsettings",".pubxml",".pubxml.user",".rbxlx",".rbxmx",".rdf",".rng",".rss",".shproj",".storyboard",".svg",".targets",".tld",".tmx",".vbproj",".vbproj.user",".vcxproj",".vcxproj.filters",".wsdl",".wxi",".wxl",".wxs",".xaml",".xbl",".xib",".xlf",".xliff",".xpdl",".xul",".xoml"],"firstLine":"(\\<\\?xml.*)|(\\<svg)|(\\<\\!doctype\\s+svg)","aliases":["XML","xml"],"configuration":"./xml.language-configuration.json"},{"id":"xsl","extensions":[".xsl",".xslt"],"aliases":["XSL","xsl"],"configuration":"./xsl.language-configuration.json"}],"grammars":[{"language":"xml","scopeName":"text.xml","path":"./syntaxes/xml.tmLanguage.json"},{"language":"xsl","scopeName":"text.xml.xsl","path":"./syntaxes/xsl.tmLanguage.json"}]},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin atom/language-xml grammars/xml.cson ./syntaxes/xml.tmLanguage.json grammars/xsl.cson ./syntaxes/xsl.tmLanguage.json"},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.xml","identifier":{"value":"vscode.xml","_lower":"vscode.xml"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/xml","path":"/snap/code/85/usr/share/code/resources/app/extensions/xml","scheme":"file"}},{"name":"yaml","displayName":"Concepts de base du langage YAML","description":"Fournit la coloration syntaxique et la correspondance des crochets dans les fichiers YAML.","version":"1.0.0","publisher":"vscode","license":"MIT","engines":{"vscode":"*"},"scripts":{"update-grammar":"node ../node_modules/vscode-grammar-updater/bin textmate/yaml.tmbundle Syntaxes/YAML.tmLanguage ./syntaxes/yaml.tmLanguage.json"},"contributes":{"languages":[{"id":"dockercompose","aliases":["Compose","compose"],"filenamePatterns":["compose.yml","compose.yaml","compose.*.yml","compose.*.yaml","*docker*compose*.yml","*docker*compose*.yaml"],"configuration":"./language-configuration.json"},{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml",".cff"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"dockercompose","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"},{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":"advanced"},"[dockercompose]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":"advanced"}}},"repository":{"type":"git","url":"https://github.com/microsoft/vscode.git"},"isUserBuiltin":false,"isBuiltin":true,"isUnderDevelopment":false,"id":"vscode.yaml","identifier":{"value":"vscode.yaml","_lower":"vscode.yaml"},"extensionLocation":{"$mid":1,"fsPath":"/snap/code/85/usr/share/code/resources/app/extensions/yaml","path":"/snap/code/85/usr/share/code/resources/app/extensions/yaml","scheme":"file"}}]}