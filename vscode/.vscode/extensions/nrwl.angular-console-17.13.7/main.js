(()=>{var e,t,n,r={16323:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=16323,e.exports=t},83988:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=83988,e.exports=t},13885:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=13885,e.exports=t},87231:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=87231,e.exports=t},31742:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=31742,e.exports=t},92792:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=92792,e.exports=t},35841:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=35841,e.exports=t},24895:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=24895,e.exports=t},26291:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=26291,e.exports=t},27288:(e,t,n)=>{"use strict";n.r(t),n.d(t,{activate:()=>pe,deactivate:()=>de});var r=n(57147),o=n(71017),s=n(89496),i=n(44015),a=n(36853),c=n(47812),u=n(69381);const p=[{name:"with-deps",type:c.GL.Boolean,isRequired:!1,description:"Include dependencies of specified projects when computing what to run",default:!1},{name:"parallel",type:c.GL.Boolean,isRequired:!1,description:"Parallelize the command",default:"false"},{name:"maxParallel",type:c.GL.Number,isRequired:!1,description:"Max number of parallel processes",default:3},{name:"only-failed",type:c.GL.Boolean,isRequired:!1,description:"Isolate projects which previously failed",default:"false"},{name:"skip-nx-cache",type:c.GL.Boolean,isRequired:!1,description:"Rerun the tasks even when the results are available in the cache",default:!1},{name:"exclude",isRequired:!1,type:c.GL.String,description:"Exclude certain projects from being processed"}].map((e=>({...e,aliases:[]})));async function d(e,t,n){const r=(((n.projects||{})[e]||{}).targets||{})[t]||{},a=Object.keys(r.configurations||{}),c=r.executor;if(!c)return s.window.showErrorMessage(`Please update ${e}'s ${t} definition to specify a builder.`,"See definition"),(0,i.c2)().exception("Builder part of architect definition not found"),{validBuilder:!1,configurations:a,builderName:c,options:[]};const u=await(0,i.Y2)(l(),c,r.options);return u?{validBuilder:!0,builderName:c,configurations:a,options:await(0,i.ki)((0,o.join)(l(),"nx.json"))?[...p,...u]:u}:(s.window.showErrorMessage(`Builder specified for ${e} ${t} was not found in your node_modules. Check that specified builder is correct and has a corresponding entry in package.json`,"Show definition"),(0,i.c2)().exception("Specified builder not found in node_modules"),{validBuilder:!1,builderName:c,configurations:a,options:[]})}function l(){return u.Tl.instance.get("nxWorkspacePath","")}async function f(e){return await(0,i.o8)((0,o.join)(e,"node_modules"))?{validNodeModules:!0}:(s.window.showErrorMessage("Could not execute task since node_modules directory is missing. Run npm install at: "+e),{validNodeModules:!1})}var h=n(14560);function m(e){const t=(0,h.detectPackageManager)(e.cwd),n=(0,h.getPackageManagerCommand)(t);return new s.ShellExecution(`${n.exec} ${e.displayCommand}`,{cwd:e.cwd})}class g extends s.Task{static async create(e,t){const{command:n}=e,r=function(e){const{positional:t,command:n,flags:r}=e;switch(n){case"add":case"build":case"lint":case"generate":case"run":case"serve":case"test":return[n,t,...r];default:return["run",`${t}:${n}`,...r]}}(e),a=await(0,i.ki)((0,o.join)(t,"nx.json")),c=a?`nx ${r.join(" ")}`:`ng ${r.join(" ")}`,u=new g({...e,type:a?"nx":"ng"},s.TaskScope.Workspace,c,a?"nx":"ng",m({displayCommand:c,cwd:t}));switch(n){case"build":u.group=s.TaskGroup.Build,u.problemMatchers.push("$webpack-builder");break;default:u.group=s.TaskGroup.Test}return u}}class w extends s.Task{static create(e,t){const{command:n,flags:r,positional:o}=e,i=`nx ${[n,...o?[o]:[],...r].join(" ")}`;return new w({...e,type:"nx"},s.TaskScope.Workspace,i,"nx",m({displayCommand:i,cwd:t}))}}let x,y;class k{constructor(){x=this,s.tasks.onDidEndTaskProcess((()=>{this.currentDryRun=void 0,this.deferredDryRun&&(this.executeTask(this.deferredDryRun),this.deferredDryRun=void 0)}))}getWorkspacePath(){return u.Tl.instance.get("nxWorkspacePath","")}getWorkspaceJsonPath(){return u.Tl.instance.get("nxWorkspacePath","")}provideTasks(){return null}async resolveTask(e){if(this.getWorkspacePath()&&e.definition.command&&e.definition.project){const t=await this.createTask({command:e.definition.command,positional:e.definition.project,flags:Array.isArray(e.definition.flags)?e.definition.flags:[]});return t.definition=e.definition,t}}async createTask(e){return g.create(e,this.getWorkspacePath())}async executeTask(e){const{validNodeModules:t}=await f(this.getWorkspacePath());if(!t)return;const n=e.flags.includes("--dry-run");if(n&&this.currentDryRun)return void(this.deferredDryRun=e);let r;const o=e.positional.match(c.Y9);return r="generate"===e.command&&o&&o.length>2?w.create({command:`workspace-${o[1]}`,positional:o[2],flags:e.flags},x.getWorkspacePath()):await this.createTask(e),(0,i.c2)().featureUsed(e.command),s.tasks.executeTask(r).then((e=>{n&&(this.currentDryRun=e)}))}async getProjects(e){if(e)return e.projects;{const e=await(0,a.verifyWorkspace)();return e.validWorkspaceJson&&e.json?e.json.projects:{}}}async getProjectNames(){return Object.keys(await this.getProjects()||{})}async getProjectEntries(e){return Object.entries(await this.getProjects(e)||{})}async projectForPath(e){if(!this.getWorkspaceJsonPath())return null;const t=(await this.getProjectEntries()).find((([,t])=>{const n=(0,o.join)(this.getWorkspacePath(),t.root);if(n===e)return!0;const r=(0,o.relative)(n,e);return r&&!r.startsWith("..")&&!(0,o.isAbsolute)(r)}));return t?{name:t[0],...t[1]}:null}}class j{constructor(e,t="",n,r){this.flagName=e,this.detail=t,this.option=n,this.label=r}}async function v(e,t,n,r={}){const o=Object.entries(r).map((([e,t])=>`--${e}=${t}`)),i=await async function(e,t){const n=[{picked:!0,alwaysShow:!0,label:`Execute: ${e}`},...t.map((e=>new j(e.name,e.description||e.type,e,`${e.name}`)))],r=await s.window.showQuickPick(n,{placeHolder:"Execute command or set flags"});return r?Boolean(r.option)?{flag:r}:{execute:!0}:{execute:!1}}(`${n} ${e} ${o.join(" ")}`,t);if(!i.flag)return i.execute?o:void 0;const a=await function(e){const t=`--${e.flagName}=...`;return"boolean"===e.option.type?s.window.showQuickPick(["true","false"],{placeHolder:t}):e.option.enum&&e.option.enum.length?s.window.showQuickPick([...e.option.enum.map(String)],{placeHolder:t,canPickMany:"array"===e.option.type}):s.window.showInputBox({placeHolder:t})}(i.flag);return a&&a.length>0?r[i.flag.flagName]=a:delete r[i.flag.flagName],v(e,t,n,r)}async function P(){const{validWorkspaceJson:e,json:t}=await(0,a.verifyWorkspace)();if(!e||!t)return;const n=Array.from(new Set(Object.entries(t.projects).map((([,e])=>Object.keys(e.targets||{}))).flat())).sort();if(n.length)return s.window.showQuickPick(n);s.window.showErrorMessage("None of your workspace projects have an architect or targets command")}const b=[{name:"base",type:c.GL.String,isRequired:!1,description:"Base of the current branch (usually master)"},{name:"head",type:c.GL.String,isRequired:!1,description:"Latest commit of the current branch (usually HEAD)"},{name:"parallel",type:c.GL.Boolean,description:"Parallelize the command",isRequired:!1,default:"false"},{name:"maxParallel",type:c.GL.Number,description:"Max number of parallel processes",isRequired:!1,default:3},{name:"only-failed",type:c.GL.Boolean,description:"Isolate projects which previously failed",isRequired:!1,default:"false"},{name:"all",type:c.GL.Boolean,description:"All projects",isRequired:!1},{name:"configuration",type:c.GL.String,isRequired:!1,description:"This is the configuration to use when performing tasks on projects"},{name:"exclude",type:c.GL.String,isRequired:!1,description:"Exclude certain projects from being processed"},{name:"files",type:c.GL.Array,isRequired:!1,description:"Manually specify changed files, delimited by commas"},{name:"skip-nx-cache",type:c.GL.Boolean,description:"Rerun the tasks even when the results are available in the cache",isRequired:!1,default:!1},{name:"verbose",type:c.GL.Boolean,isRequired:!1,description:"Print additional error stack trace on failure",default:!1}].map((e=>({...e,aliases:[]}))),T=[{name:"all",type:c.GL.Boolean,description:"All projects",isRequired:!1},{name:"parallel",type:c.GL.Boolean,description:"Parallelize the command",isRequired:!1,default:"false"},{name:"maxParallel",type:c.GL.Number,description:"Max number of parallel processes",isRequired:!1,default:3},{name:"only-failed",type:c.GL.Boolean,description:"Isolate projects which previously failed",isRequired:!1,default:"false"},{name:"configuration",type:c.GL.String,description:"This is the configuration to use when performing tasks on projects",isRequired:!1},{name:"skip-nx-cache",type:c.GL.Boolean,description:"Rerun the tasks even when the results are available in the cache",default:!1,isRequired:!1},{name:"with-deps",type:c.GL.Boolean,description:"Include dependencies of specified projects when computing what to run",isRequired:!1,default:!1},{name:"exclude",type:c.GL.String,isRequired:!1,description:"Exclude certain projects from being processed"},{name:"verbose",type:c.GL.Boolean,description:"Print additional error stack trace on failure",isRequired:!1,default:!1}].map((e=>({...e,aliases:[]}))),C=[{name:"watch",type:c.GL.Boolean,isRequired:!1,description:"Watch for changes to dep graph and update in-browser"},{name:"file",type:c.GL.String,isRequired:!1,description:"output file (e.g. --file=output.json)"},{name:"filter",type:c.GL.Array,isRequired:!1,description:"Use to limit the dependency graph to only show specific projects, list of projects delimited by commas."},{name:"exclude",type:c.GL.Array,isRequired:!1,description:"List of projects delimited by commas to exclude from the dependency graph."},{name:"host",type:c.GL.String,isRequired:!1,description:"Bind the dep graph server to a specific ip address."}].map((e=>({...e,aliases:[]})));async function S(e){let t,n;switch((0,i.c2)().featureUsed("affected-cli"),e){case"apps":case"libs":case"dep-graph":n=`affected:${e}`;break;default:n="affected",t=`--target=${e}`,await v(`affected ${t}`,b,"nx")}const r=await v(n,b,"nx");if(void 0!==r){const e=w.create({command:n,flags:r,positional:t},y.getWorkspacePath());s.tasks.executeTask(e)}}const $=new Map([["Generate",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["Run",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["Build",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["Serve",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["Test",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["E2E",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}],["Lint",{light:"nx-cli-light.svg",dark:"nx-cli-dark.svg"}]]),N=["Generate","Run","Build","Serve","Test","E2E","Lint"];class O extends s.TreeItem{constructor(e,t,n,r){super(t,s.TreeItemCollapsibleState.None),this.configurationFilePath=e,this.route=t,this.extensionPath=n,this.generatorType=r,this.command={title:this.route,command:"nxConsole.revealWebViewPanel",tooltip:"",arguments:[this]},this.iconPath=O.getIconUriForRoute(this.extensionPath,this.route)}revealWorkspaceRoute(e){(e.visible?e.reveal(this,{select:!0,focus:!0}):Promise.reject()).then((()=>{}),(()=>{}))}static getIconUriForRoute(e,t){const n=$.get(t);return n?{light:s.Uri.file((0,o.join)(e,"assets",n.light)),dark:s.Uri.file((0,o.join)(e,"assets",n.dark))}:void 0}}const L=new s.TreeItem("Scanning for your Nx Workspace..."),W=new s.TreeItem("Select workspace");W.command={tooltip:"Select an workspace directory to open",title:"Select workspace",command:"nxConsole.selectWorkspaceManually"};const E=new s.TreeItem("Change workspace");E.command={tooltip:"Select an workspace json file to open",title:"Change workspace",command:"nxConsole.selectWorkspaceManually"};class D extends i.Th{constructor(e){super(),this.extensionPath=e,this.scanning=Boolean(u.Tl.instance.get("nxWorkspacePath","")),W.iconPath={light:(0,o.join)(e,"assets","nx-console-light.svg"),dark:(0,o.join)(e,"assets","nx-console-dark.svg")},E.iconPath={light:(0,o.join)(e,"assets","nx-console-light.svg"),dark:(0,o.join)(e,"assets","nx-console-dark.svg")}}getParent(){return null}endScan(){this.scanning=!1,this.refresh()}getChildren(){const e=u.Tl.instance.get("nxWorkspacePath","");return e?(E.description="Current: "+e,[...N.map((t=>new O(e,t,this.extensionPath))),E]):this.scanning?[L]:[W]}}class q{constructor(e,t,n,r,o){this.projectName=e,this.projectRoot=t,this.targetDef=n,this.command=r,this.label=o}}async function U(e,t,n){const r=await(0,i.PA)(e);let c=r.map((e=>e.data)).filter((e=>!!e)).map((e=>({description:e.description,label:`${e.collection} - ${e.name}`,collectionName:e.collection,generator:e})));if(n&&(c=c.filter((e=>e.generator.type===n))),r){const t=await s.window.showQuickPick(c);if(t){const n=t.generator.options||await async function(e,t,n){const r=(0,o.join)(e,"node_modules"),s=await(0,i.eP)((0,o.join)(t,"package.json"),r),c=await(0,i.eP)(s.json.schematics||s.json.generators,(0,o.dirname)(s.path)),u=Object.assign({},c.json.schematics,c.json.generators),p=await(0,i.eP)(u[n].schema,(0,o.dirname)(c.path)),d=await async function(e){const{json:t}=await(0,a.verifyWorkspace)();let n=t.generators;if(!n)try{n=(await(0,a.getNxConfig)((0,o.dirname)(e))).generators||{}}catch(e){n={}}return Object.keys(n).reduce(((e,t)=>{if(t.includes(":")){const[r,o]=t.split(":");e[r]||(e[r]={}),e[r][o]=n?.[t]}else{const r=t;e[r]||(e[r]={}),Object.keys(n?.[r]??{}).forEach((t=>{e[r][t]=n?.[r][t]}))}return e}),{})}(e),l=d&&d[t]&&d[t][n];return await(0,i.Q9)(p.json,l)}(e,t.collectionName,t.generator.name),r=`${t.collectionName}:${t.generator.name}`;return{...t.generator,options:n,command:"generate",positional:r,cliName:"nx"}}}}const R=["build","deploy","e2e","lint","serve","test","xi18n"];let A,M;async function _(e,t,n,r){if(!A.getWorkspacePath())return void s.window.showErrorMessage("Nx Console requires a workspace be set to perform this action");const{validWorkspaceJson:o,configurationFilePath:i}=await(0,a.verifyWorkspace)();if(!o)return void s.window.showErrorMessage("Invalid configuration file");const c=new O(i,`${e[0].toUpperCase()}${e.slice(1)}`,t,r);s.commands.executeCommand("nxConsole.revealWebViewPanel",c,n)}async function G(e,t,n,r){let o;r?o=[`--configuration=${r}`]:t&&n&&(o=[]);const{validWorkspaceJson:i,json:u,workspaceType:p}=await(0,a.verifyWorkspace)();if(!t){const n=i?await B(e,u):void 0;if(!n)return;t=n.projectName}const l="run"===e;if(!n)if(l){if(!(n=await async function(e){return s.window.showQuickPick(e,{placeHolder:"Target to run"})}(Object.keys(u.projects[t].targets||{}))))return}else n=e;const f=await d(t,n,u),{validBuilder:h,options:m,configurations:g}=f;let w=[...m];h&&(o||(g.length&&(w=[{name:"configuration",isRequired:!1,description:'A named build target, as specified in the "configurations" section of angular.json.',type:c.GL.String,enum:g,aliases:[]},...w]),o=await v(l?`${e} ${t}:${n}`:`${e} ${t}`,w,p)),void 0!==o&&A.executeTask({positional:l?`${t}:${n}`:t,command:e,flags:o}))}async function B(e,t){const n=(await A.getProjectEntries(t)).filter((([,{targets:e}])=>Boolean(e))).flatMap((([e,{targets:t,root:n}])=>({project:e,targets:t,root:n}))).filter((({targets:t})=>Boolean(t&&t[e])||"run"===e)).map((({project:t,targets:n,root:r})=>new q(t,r,n[e],e,t)));if(n.length)return s.window.showQuickPick(n,{placeHolder:`Project to ${e}`});s.window.showInformationMessage(`No projects have an target command for ${e}`)}function I(e){return"project"===e.name||"projectName"===e.name||e.$default&&"projectName"===e.$default.$source}async function F({context:e,cliTaskProvider:t,runTargetTreeItem:n,runTargetTreeView:c,contextMenuUri:u}){const{label:p,generatorType:l}=n,f=await async function(e,t="Run",n,r){try{if(!e.getWorkspacePath())return;const{validWorkspaceJson:o,json:c,workspaceType:u}=await(0,a.verifyWorkspace)();if(!o)return;const p=t.toLowerCase();switch(t){case"Build":case"E2E":case"Lint":case"Serve":case"Test":{const e=await B(p,c);if(!e)return;const{validBuilder:t,options:n}=await d(e.projectName,p,c);if(!t)return;return{...(0,i.kK)(p,e.targetDef,e.projectName),options:n,positional:e.projectName,command:p,cliName:u}}case"Run":{const t=(await e.getProjectEntries()).filter((([,{targets:e}])=>Boolean(e))).flatMap((([e,{targets:t,root:n}])=>({project:e,targets:t,root:n}))).flatMap((({project:e,targets:t,root:n})=>[...Object.entries(t||{}).map((([t,r])=>({project:e,targetName:t,targetDef:r,root:n})))])).map((({project:e,targetName:t,targetDef:n,root:r})=>new q(e,r,n,t,`${e}:${t}`)));return s.window.showQuickPick(t).then((async e=>{if(!e)return;const{validBuilder:t,options:n}=await d(e.projectName,e.command,c);return t?{...(0,i.kK)(e.command,e.targetDef,e.projectName),command:"run",positional:`${e.projectName}:${e.command}`,options:n,cliName:u}:void 0}))}case"Generate":{const t=await U(e.getWorkspacePath(),0,r);if(!t)return;for(const n of t.options)if(!n.enum&&I(n)){const t=await e.getProjectEntries();n.enum=n.items=t.map((e=>e[0])).sort()}const o=n?await async function(e,t,n){if(t){const r=await n.projectForPath(t.fsPath),o=r&&r.name||void 0,s=n.getWorkspacePath();let i=t.fsPath.replace(s,"").replace(/\\/g,"/").replace(/^\//,"");const c=await(0,a.getNxConfig)(s),u=c.workspaceLayout?.appsDir??"apps",p=c.workspaceLayout?.libsDir??"libs";return(u&&"application"===e.name||"app"===e.name)&&(i=i.replace(u,"").replace(/^\//,"")),(p&&"library"===e.name||"lib"===e.name)&&(i=i.replace(p,"").replace(/^\//,"")),{project:o,projectName:o,path:i,...!(o&&e.options.some(I))&&{directory:i}}}}(t,n,e):void 0;return{...t,cliName:u,contextValues:o}}}}catch(e){const t=e.toString?e.toString():JSON.stringify(e);(0,i.g)().appendLine(t),(0,i.c2)().exception(t),s.window.showErrorMessage("Nx Console encountered an error parsing your node modules","See details").then((e=>{e&&(0,i.g)().show()}))}}(t,p,u,l);if(!f)return;const h=function(e,t,n,a){return M?(M.title=n,M.webview.postMessage({taskExecutionSchema:t}),M.reveal()):(M=s.window.createWebviewPanel("nx-console",n,s.ViewColumn.Active,{retainContextWhenHidden:!0,enableScripts:!0}),M.onDidDispose((()=>{M=void 0})),M.iconPath={light:s.Uri.file((0,o.join)(e.extensionPath,"assets","nx-console-light.svg")),dark:s.Uri.file((0,o.join)(e.extensionPath,"assets","nx-console-dark.svg"))},V(M,e,t),e.extensionMode===s.ExtensionMode.Development&&(0,r.watch)((0,o.join)(e.extensionPath,"assets","public","main.js"),(()=>{M&&(V(M,e,t),s.commands.executeCommand("workbench.action.webview.reloadWebviewAction"))})),M.webview.onDidReceiveMessage((e=>a.executeTask(e)))),(0,i.c2)().screenViewed(n),M}(e,f,p,t);return e.subscriptions.push(h),h.onDidChangeViewState((e=>{e.webviewPanel.visible&&n.revealWorkspaceRoute(c)})),h}function V(e,t,n){e.webview.html=function(e,t,n){const r=s.Uri.joinPath(t.extensionUri,"assets","public","styles.css"),o=s.Uri.joinPath(t.extensionUri,"assets","public","runtime.js"),i=s.Uri.joinPath(t.extensionUri,"assets","public","main.js");return`<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>VscodeUi</title>\n    <base href="/" />\n\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    <link rel="icon" type="image/x-icon" href="favicon.ico" />\n\n    <script>\n      // At runtime, VSCode server will replace this empty schema with the one to render.\n      window.VSCODE_UI_SCHEMA = {};\n\n      window.addEventListener('message', event => {\n        const taskExecutionSchema = event.data.taskExecutionSchema;\n        if (taskExecutionSchema && window.SET_TASK_EXECUTION_SCHEMA) {\n          window.SET_TASK_EXECUTION_SCHEMA(taskExecutionSchema);\n        }\n      });\n\n      window.vscode = acquireVsCodeApi();\n    <\/script>\n    <link href="${e.asWebviewUri(r)}" rel="stylesheet"/>\n  </head>\n  <body>\n    <vscode-ui-task-execution-form></vscode-ui-task-execution-form>\n    <script src="${e.asWebviewUri(o)}"><\/script>\n    <script src="${e.asWebviewUri(i)}"><\/script>\n  </body>\n</html>`.replace("window.VSCODE_UI_SCHEMA = {};",`window.VSCODE_UI_SCHEMA = ${JSON.stringify(n)};`)}(e.webview,t,n)}class J extends s.TreeItem{constructor(e,t){super(e,s.TreeItemCollapsibleState.None),this.affectedCommand=e,this.extensionPath=t,this.command={title:this.affectedCommand,command:`nx.${this.affectedCommand.replace(":",".")}`,tooltip:`Run nx ${this.affectedCommand}`},this.iconPath={light:s.Uri.file((0,o.join)(this.extensionPath,"assets","nx-cli-light.svg")),dark:s.Uri.file((0,o.join)(this.extensionPath,"assets","nx-cli-dark.svg"))}}}class H extends i.Th{constructor(e){super(),this.context=e}getParent(e){return null}getChildren(){return["dep-graph","run-many","affected","affected:apps","affected:build","affected:dep-graph","affected:e2e","affected:libs","affected:lint","affected:test","list","migrate"].map((e=>new J(e,this.context.extensionPath)))}}class Q extends s.TreeItem{constructor(e,t,n){super(t,n),this.nxProject=e}}class z extends i.Th{constructor(e,t){super(),this.cliTaskProvider=t,[["editWorkspaceJson",this.editWorkspaceJson],["revealInExplorer",this.revealInExplorer],["runTask",this.runTask],["refreshNxProjectsTree",this.refreshNxProjectsTree]].forEach((([t,n])=>{e.subscriptions.push(s.commands.registerCommand(`nxConsole.${t}`,n,this))}))}async getParent(e){const{project:t,target:n,root:r}=e.nxProject;return n?n.configuration?this.createNxProjectTreeItem({project:t,target:{name:n.name},root:r},n.name):this.createNxProjectTreeItem({project:t,root:r},t):null}async createNxProjectTreeItem(e,t,n){const r=new Q(e,t,n?s.TreeItemCollapsibleState.Collapsed:s.TreeItemCollapsibleState.None);if(e.target)r.contextValue="task";else{const t=(await this.cliTaskProvider.getProjects())[e.project];t&&(void 0===t.root&&(0,i.g)().appendLine(`Project ${e.project} has no root. This could be because of an error loading the workspace configuration.`),r.resourceUri=s.Uri.file((0,o.join)(this.cliTaskProvider.getWorkspacePath(),t.root??""))),r.contextValue="project"}return r}async getChildren(e){if(!e){const e=await this.cliTaskProvider.getProjectEntries();return Promise.all(e.map((async([e,t])=>this.createNxProjectTreeItem({project:e,root:t.root},e,Boolean(t.targets)))))}const{nxProject:t}=e,{target:n,project:r}=t,o=(await this.cliTaskProvider.getProjects())[r];if(o){if(n){const{configuration:e}=n;if(e||!o.targets)return;const t=o.targets?o.targets[n.name].configurations:void 0;if(!t)return;return Promise.all(Object.keys(t).map((async e=>this.createNxProjectTreeItem({target:{...n,configuration:e},project:r,root:o.root},e))))}return o.targets?Promise.all(Object.keys(o.targets).map((async e=>this.createNxProjectTreeItem({target:{name:e},project:r,root:o.root},e,Boolean(o.targets?.[e].configurations))))):void 0}}async runTask(e){const{target:t,project:n}=e.nxProject;if(!t)return;const r=[];t.configuration&&r.push(`--configuration=${t.configuration}`),this.cliTaskProvider.executeTask({command:t.name,positional:n,flags:r})}async revealInExplorer(e){e.resourceUri&&s.commands.executeCommand("revealInExplorer",e.resourceUri)}async editWorkspaceJson(e){return(0,a.revealNxProject)(e.nxProject.project,e.nxProject.root,e.nxProject.target)}async refreshNxProjectsTree(){const e=u.Tl.instance.get("nxWorkspacePath","");(0,i.tr)(e),this.refresh()}}let K,Y;class X{constructor(e){const t=u.Tl.instance.get("nxWorkspacePath","");K&&K.dispose(),K=(0,i._x)((0,o.join)(t,"package.json"),(()=>{this.setupSchema(t,e.extensionUri,!0)})),e.subscriptions.push(K),this.setupSchema(t,e.extensionUri)}async setupSchema(e,t,n=!1){const r=s.Uri.joinPath(t,"workspace-schema.json"),o=await(0,i.Ie)(e,n),a=await function(e){const[t,n]=function(e){return[e.map((e=>`\n{\n  "if": {\n    "properties": { "builder": { "const": "${e.name}" } },\n    "required": ["builder"]\n  },\n  "then": {\n    "properties": {\n      "options": {\n        "$ref": "${e.path}"\n      },\n      "configurations": {\n        "additionalProperties": {\n          "$ref": "${e.path}",\n          "required": []\n        }\n      }\n    }\n  }\n}\n`)).join(","),e.map((e=>`\n{\n  "if": {\n    "properties": { "executor": { "const": "${e.name}" } },\n    "required": ["executor"]\n  },\n  "then": {\n    "properties": {\n      "options": {\n        "$ref": "${e.path}"\n      },\n      "configurations": {\n        "additionalProperties": {\n          "$ref": "${e.path}",\n          "required": []\n        }\n      }\n    }\n  }\n}\n`)).join(",")]}(e);return function(e,t){return`\n  {\n    "title": "JSON schema for Nx workspaces",\n    "id": "https://nx.dev",\n    "type": "object",\n    "properties": {\n      "version": {\n        "type": "number",\n        "enum": [1, 2]\n      }\n    },\n    "allOf": [\n      {\n        "if": {\n          "properties": { "version": { "const": 1 } },\n          "required": ["version"]\n        },\n        "then": {\n          "description": "Read more about this workspace file at https://nx.dev/latest/angular/getting-started/configuration",\n          "properties": {\n            "projects": {\n              "type": "object",\n              "additionalProperties": {\n                "type": "object",\n                "properties": {\n                  "architect": {\n                    "description": "Configures all the targets which define what tasks you can run against the project",\n                    "additionalProperties": {\n                      "type": "object",\n                      "properties": {\n                        "builder": {\n                          "description": "The function that Nx will invoke when you run this architect",\n                          "type": "string"\n                        },\n                        "options": {\n                          "type": "object"\n                        },\n                        "configurations": {\n                          "description": "provides extra sets of values that will be merged into the options map",\n                          "additionalProperties": {\n                            "type": "object"\n                          }\n                        }\n                      },\n                      "allOf": [\n                       ${e}\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      {\n        "if": {\n          "properties": { "version": { "const": 2 } },\n          "required": ["version"]\n        },\n        "then": {\n          "description": "Read more about this workspace file at https://nx.dev/latest/react/getting-started/configuration",\n          "properties": {\n           "projects": {\n              "type": "object",\n              "additionalProperties": {\n                "oneOf": [\n                  {\n                    "type": "string"\n                  },\n                  {\n                   "type": "object",\n                   "properties": {\n                      "targets": {\n                        "description": "Configures all the targets which define what tasks you can run against the project",\n                        "additionalProperties": {\n                          "type": "object",\n                          "properties": {\n                            "executor": {\n                              "description": "The function that Nx will invoke when you run this target",\n                              "type": "string"\n                            },\n                            "options": {\n                              "type": "object"\n                            },\n                            "configurations": {\n                              "description": "provides extra sets of values that will be merged into the options map",\n                              "additionalProperties": {\n                                "type": "object"\n                              }\n                            }\n                          },\n                          "allOf": [\n                           ${t}\n                          ]\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      }\n    ]\n  }`}(t,n)}(o);s.workspace.fs.writeFile(r,new Uint8Array(Buffer.from(a,"utf8")))}}class Z{constructor(e){const t=u.Tl.instance.get("nxWorkspacePath","");Y&&Y.dispose(),Y=(0,i._x)((0,o.join)(t,"package.json"),(()=>{this.setupSchema(t,e.extensionUri,!0)})),e.subscriptions.push(Y),this.setupSchema(t,e.extensionUri)}async setupSchema(e,t,n=!1){const r=s.Uri.joinPath(t,"project-schema.json"),o=function(e){const[t,n]=function(e){return[e.map((e=>`\n{\n  "if": {\n    "properties": { "builder": { "const": "${e.name}" } },\n    "required": ["builder"]\n  },\n  "then": {\n    "properties": {\n      "options": {\n        "$ref": "${e.path}"\n      },\n      "configurations": {\n        "additionalProperties": {\n          "$ref": "${e.path}",\n          "required": []\n        }\n      }\n    }\n  }\n}\n`)).join(","),e.map((e=>`\n{\n  "if": {\n    "properties": { "executor": { "const": "${e.name}" } },\n    "required": ["executor"]\n  },\n  "then": {\n    "properties": {\n      "options": {\n        "$ref": "${e.path}"\n      },\n      "configurations": {\n        "additionalProperties": {\n          "$ref": "${e.path}",\n          "required": []\n        }\n      }\n    }\n  }\n}\n`)).join(",")]}(e);return function(e,t){return`\n  {\n    "title": "JSON schema for Nx projects",\n    "id": "https://nx.dev/project-schema",\n    "type": "object",\n    "properties": {\n      "targets": {\n        "description": "Configures all the targets which define what tasks you can run against the project",\n        "additionalProperties": {\n          "type": "object",\n          "properties": {\n            "executor": {\n              "description": "The function that Nx will invoke when you run this target",\n              "type": "string"\n            },\n            "options": {\n              "type": "object"\n            },\n            "configurations": {\n              "description": "provides extra sets of values that will be merged into the options map",\n              "additionalProperties": {\n                "type": "object"\n              }\n            }\n          },\n          "allOf": [\n            ${t}\n          ]\n        }\n      }\n    }\n  }`}(0,n)}(await(0,i.Ie)(e,n));s.workspace.fs.writeFile(r,new Uint8Array(Buffer.from(o,"utf8")))}}const ee="tsconfig.base.json";async function te(e,t){if(u.BG.instance.get("enableLibraryImports")){const n=await async function(e){let t=(await(0,i.eP)(ee,e)).json;if(!("compilerOptions"in t)&&(t=(await(0,i.eP)("tsconfig.json",e)).json,!("compilerOptions"in t)))return[];const n=t.compilerOptions.paths??{},r=[];for(const[,t]of Object.entries(n)){const n=(0,o.join)(e,t[0]),s=await(0,i.r3)(n,"tsconfig.lib.json");if(!s)continue;const a=(0,o.dirname)(s);r.push({mainFile:n,directory:a})}return r}(e);t.configurePlugin("@monodon/typescript-nx-imports-plugin",{externalFiles:n})}}let ne,re,oe,se,ie,ae,ce,ue;async function pe(e){try{const t=Date.now();ce=e,u.BG.fromContext(ce),u.Tl.fromContext(ce),se=new D(ce.extensionPath),(0,i.uZ)(u.BG.instance,true),ne=s.window.createTreeView("nxRunTarget",{treeDataProvider:se});const r=s.commands.registerCommand("nxConsole.revealWebViewPanel",(async(e,t)=>{const n=u.Tl.instance.get("nxWorkspacePath","");if(!await(0,i.o8)((0,o.join)(n,"node_modules"))){const{validNodeModules:e}=await f(n);if(!e)return}F({runTargetTreeItem:e,context:ce,cliTaskProvider:ae,runTargetTreeView:ne,contextMenuUri:t})})),a=s.commands.registerCommand(W.command.command||"",(async()=>function(){if(s.workspace.workspaceFolders&&s.workspace.workspaceFolders.length>0)return s.window.showOpenDialog({canSelectFolders:!0,canSelectFiles:!1,canSelectMany:!1,openLabel:"Select workspace directory"}).then((e=>{if(e&&e[0])return le(e[0].fsPath)}));s.window.showInformationMessage("Cannot select an Nx workspace when no folders are opened in the explorer")}())),c=s.workspace.workspaceFolders&&s.workspace.workspaceFolders[0].uri.fsPath;c&&await async function(e){let t=e;const{root:n}=(0,o.parse)(e),r=u.Tl.instance.get("nxWorkspacePath","");for(r&&(t=r);t!==n;){if(await(0,i.ki)((0,o.join)(t,"angular.json")))return le(t);if(await(0,i.ki)((0,o.join)(t,"workspace.json")))return le(t);if(await(0,i.ki)((0,o.join)(t,"nx.json")))return le(t);t=(0,o.dirname)(t)}}(c),ce.subscriptions.push(ne,r,a);const{WorkspaceCodeLensProvider:p}=await Promise.resolve().then(n.bind(n,36853));new p(ce),new X(ce),new Z(ce),await async function(e){const t=s.extensions.getExtension("vscode.typescript-language-features");if(!t)return;if(await t.activate(),!t.exports||!t.exports.getAPI)return;const n=t.exports.getAPI(0);if(!n)return;const r=u.Tl.instance.get("nxWorkspacePath","");s.workspace.onDidOpenTextDocument((e=>{(e.uri.fsPath.endsWith(".ts")||e.uri.fsPath.endsWith(".tsx"))&&te(r,n)}),void 0,e.subscriptions),(0,i._x)(`${r}/tsconfig.base.json`,(()=>{(0,i.tr)(ee,r),te(r,n)}),e.subscriptions),s.workspace.onDidChangeTextDocument((({document:e})=>{e.uri.fsPath.endsWith(ee)&&te(r,n)}),void 0,e.subscriptions),s.workspace.onDidChangeConfiguration((async e=>{const t=e.affectsConfiguration(u.BG.configurationSection);u.BG.instance.get("enableLibraryImports")||(s.window.setStatusBarMessage("Restarting the TypeScript Server",5e3),await s.commands.executeCommand("typescript.restartTsServer")),t&&te(r,n)}),void 0,e.subscriptions),te(r,n)}(ce),(0,i.c2)().extensionActivated((Date.now()-t)/1e3)}catch(e){s.window.showErrorMessage("Nx Console encountered an error when activating (see output panel)"),(0,i.g)().appendLine("Nx Console encountered an error when activating"),(0,i.g)().appendLine(e.stack),(0,i.c2)().exception(e.message)}}async function de(){(0,i.c2)().extensionDeactivated(),(0,i.g0)()}async function le(e){e.match(/(workspace|angular)\.json$/)&&(e=(0,o.dirname)(e)),u.Tl.instance.set("nxWorkspacePath",e);const{verifyWorkspace:t}=await Promise.resolve().then(n.bind(n,36853)),{validWorkspaceJson:p}=await t();if(!p)return;if(ae)u.Tl.instance.set("nxWorkspacePath",e);else{ae=new k,function(e,t){y=t,e.subscriptions.push(s.commands.registerCommand("nx.affected",(async()=>{const e=await P();e&&S(e)})),...["apps","build","dep-graph","e2e","libs","lint","test"].map((e=>s.commands.registerCommand(`nx.affected.${e}`,(()=>S(e)))))),e.subscriptions.push(s.commands.registerCommand("nx.run-many",(()=>async function(){(0,i.c2)().featureUsed("affected-cli");const e=await P();if(!e)return;let t=T;const n=await async function(e){const{validWorkspaceJson:t,json:n}=await(0,a.verifyWorkspace)();if(t&&n)return Array.from(new Set(Object.entries(n.projects).filter((([,t])=>t.targets&&t.targets[e])).map((([e])=>e)))).sort()}(e);n&&n.length&&(t=[{name:"projects",type:c.GL.Array,description:"Projects to run",aliases:[],isRequired:!1,enum:n},...T]);const r=await v("run-many",t,"nx",{target:e});if(void 0!==r){const e=w.create({command:"run-many",flags:r},y.getWorkspacePath());s.tasks.executeTask(e)}}()))),e.subscriptions.push(s.commands.registerCommand("nx.dep-graph",(()=>async function(){(0,i.c2)().featureUsed("affected-cli");const e=await v("dep-graph",C,"nx");if(void 0!==e){const t=w.create({command:"dep-graph",flags:e},y.getWorkspacePath());s.tasks.executeTask(t)}}()))),e.subscriptions.push(s.commands.registerCommand("nx.list",(()=>async function(){(0,i.c2)().featureUsed("affected-cli");const e=w.create({command:"list",flags:[]},y.getWorkspacePath());s.tasks.executeTask(e)}()))),e.subscriptions.push(s.commands.registerCommand("nx.migrate",(()=>async function(){(0,i.c2)().featureUsed("affected-cli");const e=w.create({command:"migrate",flags:[]},y.getWorkspacePath());s.tasks.executeTask(e)}())))}(ce,ae),s.tasks.registerTaskProvider("ng",ae),s.tasks.registerTaskProvider("nx",ae),function(e,t){A=t,R.forEach((t=>{e.subscriptions.push(s.commands.registerCommand(`ng.${t}`,(()=>G(t))),s.commands.registerCommand(`ng.${t}.ui`,(()=>_(t,e.extensionPath))),s.commands.registerCommand(`nx.${t}`,(()=>G(t))),s.commands.registerCommand(`nx.${t}.ui`,(()=>_(t,e.extensionPath))))})),["ng","nx"].forEach((t=>{s.commands.registerCommand(`${t}.run`,((e,t,n)=>{G("run",e,t,n)})),s.commands.registerCommand(`${t}.run.fileexplorer`,(async e=>G("run",await async function(e){return(await A.projectForPath(e.fsPath))?.name}(e)))),s.commands.registerCommand(`${t}.generate`,(()=>async function(){const{validWorkspaceJson:e,workspaceType:t,workspacePath:n}=await(0,a.verifyWorkspace)();if(!e)return;const r=await U(n);if(!r)return;const o=await v(`generate ${r.positional}`,r.options,t);void 0!==o&&A.executeTask({positional:r.positional,command:"generate",flags:o})}())),s.commands.registerCommand(`${t}.generate.ui`,(()=>_("generate",e.extensionPath))),s.commands.registerCommand(`${t}.generate.ui.fileexplorer`,(t=>_("generate",e.extensionPath,t))),s.commands.registerCommand(`${t}.generate.ui.app`,(t=>{_("generate",e.extensionPath,t,c.TF.Application)})),s.commands.registerCommand(`${t}.generate.ui.lib`,(t=>{_("generate",e.extensionPath,t,c.TF.Library)})),s.commands.registerCommand(`${t}.generate.ui.app.fileexplorer`,(t=>{_("generate",e.extensionPath,t,c.TF.Application)})),s.commands.registerCommand(`${t}.generate.ui.lib.fileexplorer`,(t=>{_("generate",e.extensionPath,t,c.TF.Library)}))}))}(ce,ae),ie=new z(ce,ae),re=s.window.createTreeView("nxProjects",{treeDataProvider:ie});const e=new H(ce);oe=s.window.createTreeView("nxCommands",{treeDataProvider:e}),ce.subscriptions.push(oe,re)}await async function(e){const{getNxConfig:t}=await Promise.resolve().then(n.bind(n,36853));let r;try{r=await t(e)}catch{return}s.commands.executeCommand("setContext","nxAppsDir",[(0,o.join)(e,r.workspaceLayout?.appsDir??"apps")]),s.commands.executeCommand("setContext","nxLibsDir",[(0,o.join)(e,r.workspaceLayout?.libsDir??"libs")]);const a=await(0,i.PA)(e);let c=!1,u=!1;a.forEach((e=>{e.data&&("application"===e.data.type?c=!0:"library"===e.data.type&&(u=!0))})),s.commands.executeCommand("setContext","nx.hasApplicationGenerators",c),s.commands.executeCommand("setContext","nx.hasLibraryGenerators",u)}(e);const d=(0,r.existsSync)((0,o.join)(e,"nx.json")),l=(0,r.existsSync)((0,o.join)(e,"angular.json"));s.commands.executeCommand("setContext","isAngularWorkspace",l),s.commands.executeCommand("setContext","isNxWorkspace",d),function(e,t){ue&&ue.dispose();const n=(0,o.dirname)(t);ue=(0,i._x)(new s.RelativePattern(n,"**/{workspace,angular,project}.json"),(()=>{s.commands.executeCommand("nxConsole.refreshNxProjectsTree")})),e.subscriptions.push(ue)}(ce,e),se.refresh(),ie.refresh();let f="nx";d&&l?f="angularWithNx":d&&!l?f="nx":!d&&l&&(f="angular"),(0,i.c2)().record("WorkspaceType",{workspaceType:f})}},47812:(e,t,n)=>{"use strict";var r,o;n.d(t,{GL:()=>r,TF:()=>o,Y9:()=>s}),function(e){e.Any="any",e.Array="array",e.Boolean="boolean",e.Number="number",e.String="string"}(r||(r={})),function(e){e.Application="application",e.Library="library",e.Other="other"}(o||(o={}));const s=/^workspace-(schematic|generator):(.+)/},44015:(e,t,n)=>{"use strict";n.d(t,{Th:()=>o,S1:()=>Y,fh:()=>N,tr:()=>$,o8:()=>C,ki:()=>S,r3:()=>X,Ie:()=>z,PA:()=>H,g:()=>g,c2:()=>l,uZ:()=>f,Q9:()=>L,eP:()=>O,Y2:()=>M,kK:()=>R,g0:()=>h,mG:()=>U,_x:()=>K});var r=n(89496);class o{constructor(){this._onDidChangeTreeData=new r.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event}refresh(){this._onDidChangeTreeData.fire(void 0)}getTreeItem(e){return e}}class s{constructor(e=console){this.writer=e}record(e,t){this.writer.log(function(e){return`[Telemetry ${e}]`}(e),t)}}class i{constructor(e,t){this.type=e,this.data=t}fetch(e){return this.require(e),this.data[e]}require(e){const t=`Telemetry: ${this.type} is missing ${e}`;if(!this.data.hasOwnProperty(e))throw new Error(t)}}class a{constructor(e,t){this.user=e,this.platform=t,this.visitor=n(40387)("UA-88380372-8",{uid:this.user.id}),this.setPersistentParams()}get enabled(){return"untracked"!==this.user.state}setPersistentParams(){this.visitor.set("uid",this.user.id),this.visitor.set("ds","app"),this.visitor.set("cd1",this.user.state),this.visitor.set("cd2",this.platform),this.visitor.set("cd3",2)}record(e,t){if(!this.enabled)return;const n=new i(e,t);switch(e){case"UserStateChanged":this.user.state=n.fetch("state"),this.setPersistentParams();break;case"ExtensionActivated":this.extensionActivated(n.fetch("time"));break;case"ExtensionDeactivated":this.extensionDeactivated();break;case"StartedTracking":this.startedTracking();break;case"StoppedTracking":this.stoppedTracking();break;case"ScreenViewed":this.screenViewed(n.fetch("screen"));break;case"CommandRun":this.commandRun(n.fetch("commandType"),n.fetch("time"));break;case"ExceptionOccurred":this.exception(n.fetch("error"));break;case"FeatureUsed":this.featureUsed(n.fetch("feature"));break;case"WorkspaceType":this.workspaceType(n.fetch("workspaceType"));break;default:throw new Error(`Unknown Telemetry type: ${e}`)}}extensionActivated(e){this.visitor.event({ec:"Application",ea:"Activated"}).timing({utc:"Application",utv:"Activation Time",utt:e}).send()}extensionDeactivated(){this.visitor.event({ec:"Application",ea:"Deactivated"}).send()}startedTracking(){this.visitor.event({ec:"Data Collection",ea:"Opt In"}).send()}stoppedTracking(){this.visitor.event({ec:"Data Collection",ea:"Opt Out"}).send()}screenViewed(e){this.visitor.screenview({an:"Nx Console",cd:e}).send()}commandRun(e,t){this.visitor.timing({utc:"Command",utv:e,utt:t}).send()}exception(e){this.visitor.exception({exd:e}).send()}featureUsed(e){this.visitor.event({ec:"Feature",ea:e}).send()}workspaceType(e){this.visitor.event({ec:"WorkspaceType",ea:e,ev:1}).send()}}class c{constructor(e,t="tracked"){this.id=e,this.state=t}static fromStorage(e){let t=e.get("uuid"),r="tracked";return t||(t=n(71171)(),e.set("uuid",t)),e.get("enableTelemetry",!0)||(r="untracked"),new c(t,r)}tracked(){this.state="tracked"}untracked(){this.state="untracked"}isTracked(){return"tracked"===this.state}isUntracked(){return"untracked"===this.state}}class u{constructor(e){this.user=e,this.sinks=[],this.state=this.user.state}static withGoogleAnalytics(e,t){const n=c.fromStorage(e),r=new u(n),o=new a(n,t);return r.addSink(o),r}static withLogger(e){const t=c.fromStorage(e),n=new u(t),r=new s;return n.addSink(r),n}addSink(e){this.sinks.push(e)}record(e,t={}){this.sinks.forEach((n=>n.record(e,t)))}extensionActivated(e){this.record("ExtensionActivated",{time:e})}extensionDeactivated(){this.record("ExtensionDeactivated")}startedTracking(){this.user.tracked(),this.userStateChanged(),this.record("StartedTracking")}stoppedTracking(){this.record("StoppedTracking"),this.user.untracked(),this.userStateChanged()}userStateChanged(){this.state!==this.user.state&&(this.state=this.user.state,this.record("UserStateChanged",{state:this.user.state}))}screenViewed(e){this.record("ScreenViewed",{screen:e})}commandRun(e,t){this.record("CommandRun",{commandType:e,time:t})}exception(e){this.record("ExceptionOccurred",{error:e})}featureUsed(e){this.record("FeatureUsed",{feature:e})}}let p,d=null;function l(){return p}function f(e,t){return p=t?u.withGoogleAnalytics(e,"vscode"):u.withLogger(e),e.get("shownTelemetryPrompt")||(r.window.showInformationMessage("Help improve Nx Console by allowing us to collect data. To opt-out set nxConsole.enableTelemetry to false in settings."),e.set("shownTelemetryPrompt",!0)),d=r.workspace.onDidChangeConfiguration((t=>{t.affectsConfiguration("nxConsole.enableTelemetry")&&(e.get("enableTelemetry")?p.startedTracking():p.stoppedTracking())})),p}function h(){d&&d.dispose()}let m;function g(){return m||(m=r.window.createOutputChannel("Nx Console")),m}var w=n(71017),x=n(57147),y=n(73292),k=n(36065),j=n(1698);const v={},P=["name","project","module","watch","style","directory","port"],b=new Set(P);function T(e){if(e.indexOf("node_modules")>-1)return[];if(e.indexOf("dist")>-1)return[];const t=[e];try{(0,x.readdirSync)(e).forEach((n=>{const r=w.join(e,n);try{(0,x.statSync)(r).isDirectory()?(0,x.statSync)(r).isDirectory()&&t.push(...T(r)):t.push(r)}catch{}}))}catch{}return t}async function C(e){try{return(await(0,y.stat)(e)).isDirectory()}catch{return!1}}async function S(e){try{return(await(0,y.stat)(e)).isFile()}catch{return!1}}function $(e,t=""){const n=w.join(t,e);return delete v[n]}function N(e,t="",n){const r=w.join(t,e);return v[r]?{json:v[r],path:r}:(n&&(v[r]=n),{json:n,path:r})}async function O(e,t=""){if(!e)return{path:"",json:{}};const n=w.join(t,e);try{const e=await(0,y.stat)(n);if(v[n]||e.isFile())return v[n]||(v[n]=await async function(e){const t=await(0,y.readFile)(e,"utf-8");try{return JSON.parse(t)}catch{const n=[],r=(0,k.parse)(t,n);if(n.length>0)for(const{error:t,offset:r}of n)g().appendLine(`${(0,k.printParseErrorCode)(t)} in JSON at position ${r} in ${e}`);return r}}(n)),{path:n,json:v[n]}}catch(e){g().appendLine(`${n} does not exist`)}return{path:n,json:{}}}async function L(e,t){const n=(r=e,Object.keys(r.properties||{}).reduce(((e,t)=>{const n=r.properties[t],o=n.$default,s="argv"===o?.$source?o.index:void 0,i="number"==typeof s?s:void 0;return function(e,t){return!!["path"].includes(e)||("hidden"in t?!t.hidden:t.visible??!0)}(t,n)?(e.push({name:t,positional:i,...n}),e):e}),[]));var r;const o=new Set(e.required||[]);return n.map((e=>{const n=e["x-prompt"],r=t&&t[e.name],s=e.$default,i={...e,isRequired:W(o,e,n,s),aliases:e.alias?[e.alias]:[],...void 0!==r&&{default:r},...s&&{$default:s},...e.enum&&{items:e.enum.map((e=>e.toString()))},...E(e)};if(n&&(i.tooltip=D(n)?n.message:n,i.itemTooltips=function(e){const t={};return e&&D(e)&&(e.items||[]).forEach((e=>{q(e)&&e.label&&(t[e.value]=e.label)})),t}(n),D(n)&&!i.items)){const e=(n.items||[]).map((e=>q(e)?e.value:e));e.length>0&&(i.items=e)}return i})).sort(((e,t)=>"number"==typeof e.positional&&"number"==typeof t.positional?e.positional-t.positional:"number"==typeof e.positional?-1:"number"==typeof t.positional?1:e.required?t.required?e.name.localeCompare(t.name):-1:t.required?1:b.has(e.name)?b.has(t.name)?P.indexOf(e.name)-P.indexOf(t.name):-1:b.has(t.name)?1:e.name.localeCompare(t.name)))}function W(e,t,n,r){return e.has(t.name)||!!n&&!t.default&&!r&&"boolean"!==t.type}function E(e){return e.items&&{items:e.items.enum||e.items.length&&e.items}}function D(e){return void 0!==e.message}function q(e){return void 0!==e.value||void 0!==e.label}function U(e){const t=(0,j.toNewFormat)(e),n=Object.entries(t.projects||{}).sort(((e,t)=>e[0].localeCompare(t[0])));return t.projects=Object.fromEntries(n),t}function R(e,t,n){return{options:[],configurations:t.configurations?Object.keys(t.configurations).map((e=>({name:e,defaultValues:A(t.configurations,e)}))):[],name:e,project:n,description:t.description??"",builder:t.executor}}function A(e,t){const n=[],r=e[t];return r?Object.keys(r).reduce(((e,t)=>{return[...e,{name:t,defaultValue:(n=r[t],"string"==typeof n||"number"==typeof n||"boolean"==typeof n?n.toString():void 0)}];var n}),n):n}async function M(e,t,n){try{const[r,o]=t.split(":"),s=await O(w.join(r,"package.json"),w.join(e,"node_modules")),i=s.json.builders||s.json.executors,a=i.startsWith(".")?i:`./${i}`,c=await O(a,w.dirname(s.path)),u=(c.json.builders||c.json.executors)[o],p=await O(u.schema,w.dirname(c.path));return await L(p.json,n)}catch(e){const t=e.toString?e.toString():JSON.stringify(e);g().appendLine(t),l().exception(t)}}var _=n(47812),G=n(22037);async function B(e,t){const n=(0,w.join)(e,"node_modules");t&&$("package.json",e);const r=await async function(e){const t=[];if(!(await(0,y.stat)(e)).isDirectory())return t;const n=await(0,y.readdir)(e);for(const r of n)r.startsWith(".")||(await(0,y.stat)(w.join(e,r))).isDirectory()&&(r.startsWith("@")?(await(0,y.readdir)(w.join(e,r))).forEach((e=>{t.push(`${r}/${e}`)})):t.push(r));return t}(n),o=await Promise.all(r.map((async e=>{const{json:t}=await O((0,w.join)(e,"package.json"),n);return{packageName:e,packageJson:t}}))),s=(await Promise.all(o.map((e=>I(n,e.packageName))))).flat(),i=new Map;for(const e of s)e&&(i.has(e.name)||i.set(e.name,e));return Array.from(i.values())}async function I(e,t){try{const n=await O((0,w.join)(t,"package.json"),e),[r,o]=await Promise.all([O(n.json.executors||n.json.builders,(0,w.dirname)(n.path)),O(n.json.generators||n.json.schematics,(0,w.dirname)(n.path))]);return F(t,n.path,e,r,o)}catch(e){return null}}async function F(e,t,n,r,o){const s=(0,w.dirname)(t),i=new Map,a=(t,n,r,o)=>{let i=(0,w.resolve)(s,(0,w.dirname)(o),n.schema);return"win32"===(0,G.platform)()&&(i=`file:///${i.replace(/\\/g,"/")}`),{name:`${e}:${t}`,type:r,path:i}},c={...r.json.executors,...r.json.builders};for(const[e,t]of Object.entries(c)){if(!J(e,t))continue;const n=a(e,t,"executor",r.path);i.has(n.name)||i.set(n.name,n)}const u={...o.json.generators,...o.json.schematics};for(const[t,n]of Object.entries(u))if(J(t,n))try{const r=a(t,n,"generator",o.path);if(r.data=V(e,t,n),i.has(r.name))continue;i.set(r.name,r)}catch(e){}if(o.json.extends&&Array.isArray(o.json.extends)){const e=o.json.extends,t=(await Promise.all(e.filter((e=>"@nrwl/workspace"!==e)).map((e=>I(n,e))))).flat().filter((e=>Boolean(e)));for(const e of t)i.has(e.name)||i.set(e.name,e)}return Array.from(i.values())}function V(e,t,n){try{let r;switch(n["x-type"]){case"application":r=_.TF.Application;break;case"library":r=_.TF.Library;break;default:r=_.TF.Other}return{name:t,collection:e,description:n.description||"",type:r}}catch(n){console.error(n),console.error(`Invalid package.json for schematic ${e}:${t}`)}}function J(e,t){return!t.hidden&&!t.private&&!t.extends&&"ng-add"!==e}async function H(e){const t=e;let n=(await B(e,!1)).filter((e=>"generator"===e.type));return n=[...n,...await Q(t,"schematics"),...await Q(t,"generators")],n.filter((e=>!!e.data))}async function Q(e,t){const n=(0,w.join)("tools",t);return await C((0,w.join)(e,n))?await async function(e,t,n){const r=(0,w.join)(e,t),o="workspace-"+("generators"===n?"generator":"schematic"),s=(0,w.join)(r,"collection.json");if(await S(s)){const e=await O("collection.json",r);return F(o,s,r,{path:s,json:{}},e.json)}return await Promise.all(T(r).filter((e=>"schema.json"===(0,w.basename)(e))).map((async e=>{const t=await O(e,""),n=t.json.id||t.json.$id,s=t.json["x-type"]??_.TF.Other;return{name:o,type:"generator",path:r,data:{name:n,collection:o,options:await L(t.json),description:"",type:s}}})))}(e,n,t):Promise.resolve([])}async function z(e,t){return(await B(e,t)).filter((e=>"executor"===e.type))}function K(e,t,n){const o=r.workspace.createFileSystemWatcher(e);return o.onDidChange(t,n),o}function Y(e,t){return(0,w.join)(e,t,"project.json")}async function X(e,t){return async function(e,t){for(;;){const n=await t(e);if(void 0!==n)return n;const r=(0,w.dirname)(e);if(r===e)return;e=r}}(e,(async e=>{const n=(0,w.join)(e,t);try{return await r.workspace.fs.stat(r.Uri.file(n)),n}catch(e){return}}))}},69381:(e,t,n)=>{"use strict";n.d(t,{BG:()=>a,Tl:()=>c});var r=n(89496);const o=["enableTelemetry","useNVM","enableGenerateFromContextMenu","enableWorkspaceConfigCodeLens","enableLibraryImports"];let s,i;class a{constructor(e){this.state=e}static fromContext(e){return s=new a(e.globalState),s}static get instance(){if(!s)throw Error("Please create a configuration store with `fromContext` first");return s}get(e,t){const n=this.storage(e).get(e,t);return void 0===n?t||null:n}set(e,t){this.storage(e).update(e,t)}delete(e){this.storage(e).update(e,void 0)}storage(e){return function(e){return o.includes(e)}(e)?this.config:this.state}get config(){return r.workspace.getConfiguration(a.configurationSection)}}a.configurationSection="nxConsole";class c{constructor(e){this.state=e}static fromContext(e){return i=new c(e.workspaceState),i}static get instance(){if(!i)throw Error("Please create a configuration store with `fromContext` first");return i}delete(e){this.state.update(e,void 0)}get(e,t){const n=this.state.get(e,t);return void 0===n?t:n}set(e,t){this.state.update(e,t)}}},36853:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ProjectCodeLens:()=>v,TargetCodeLens:()=>j,WorkspaceCodeLensProvider:()=>P,getNxConfig:()=>T,getNxWorkspaceConfig:()=>x,getProjectLocations:()=>o,revealNxProject:()=>l,verifyWorkspace:()=>k});var r=n(55423);function o(e,t=""){const n={},o=(0,r.parseJsonText)("workspace.json",e.getText()),c=o.statements[0],u=s(c.expression)?.find((e=>"projects"===i(e)));return u?s(u.initializer)?.forEach((e=>{const t=i(e);var s;t&&e&&(s=e,(0,r.isPropertyAssignment)(s)&&(0,r.isStringLiteral)(s.initializer)?n[t]={position:e.getStart(o),projectPath:e.initializer.getText(o).replace(/"/g,"")}:n[t]={position:e.getStart(o),targets:a(e,["architect","targets"],o)??{}})})):n[t]={position:0,targets:a(c.expression,["architect","targets"],o)??{}},n}function s(e){return(0,r.isObjectLiteralExpression)(e)?e.properties:(0,r.isPropertyAssignment)(e)?s(e.initializer):void 0}function i(e){if((0,r.isPropertyAssignment)(e)&&(0,r.isStringLiteral)(e.name))return e.name.text}function a(e,t,n){const r=s(e)?.find((e=>{const n=i(e);return t.some((e=>n===e))}));if(r)return s(r)?.reduce(((e,t)=>{const r=i(t);if(!r)return e;e[r]={position:t.getStart(n)};const o=a(t,["configurations"],n);return o&&(e[r].configurations=o),e}),{})}var c=n(44015),u=n(69381),p=n(71017),d=n(89496);async function l(e,t,n){const r=u.Tl.instance.get("nxWorkspacePath",""),s=(0,c.S1)(r,t),i=(0,p.join)(r,"workspace.json"),a=(0,p.join)(r,"angular.json");let l=r;await(0,c.ki)(s)?l=s:await(0,c.ki)(i)?l=i:await(0,c.ki)(a)&&(l=a);const f=await d.workspace.openTextDocument(d.Uri.file(l)),h=o(f,e);let m=h[e].position;if(n){const t=h[e].targets?.[n.name];if(t){const e=t.configurations?.[n.configuration||""];m=e?e.position:t.position}}const g=f.positionAt(m);await d.window.showTextDocument(f,{selection:new d.Selection(g,g)})}var f=n(88751),h=n(22037);async function m(){const e=u.Tl.instance.get("nxWorkspacePath","");let t=(0,p.join)(e,"node_modules","@nrwl","workspace","src","core","file-utils.js");return new Promise((e=>{try{"win32"===(0,h.platform)()&&(t=t.replace(/\\/g,"/"));const n=require(t);if(!("readWorkspaceConfig"in n))throw new Error("Workspace tools does not have `readWorkspaceConfig` function. Use built in @nrwl/workspace package");return e(n)}catch(t){return(0,c.g)().appendLine(`\n    Error loading @nrwl/workspace from workspace. Falling back to extension dependency\n    ${t}\n          `),e(f)}}))}let g,w=!1;async function x(e,t){const n=function(){if(!w){const e=u.Tl.instance.get("nxWorkspacePath","");try{g=require(`${e}/node_modules/@nrwl/workspace/package.json`),w=!0}catch(e){return null}}if(!g)return 0;const e=g.version.split(".")[0];return e?+e:0}();if(n&&n<12)return y(t,e);try{const n=await m(),r=n.workspaceFileName();return{workspaceConfiguration:n.readWorkspaceConfig({format:t,path:e}),configPath:(0,p.join)(e,r)}}catch(n){return y(t,e)}}async function y(e,t){let n;n="nx"===e?(await(0,c.eP)("workspace.json",t)).json:(await(0,c.eP)("angular.json",t)).json;const r=(await(0,c.eP)("nx.json",t)).json;return{workspaceConfiguration:{...n,...r,projects:{...r.projects??{},...n.projects}},configPath:"nx"===e?(0,p.join)(t,"workspace.json"):(0,p.join)(t,"angular.json")}}async function k(){const e=u.Tl.instance.get("nxWorkspacePath",""),t=await(0,c.ki)((0,p.join)(e,"angular.json")),n=await x(e,t?"angularCli":"nx");try{return{validWorkspaceJson:!0,workspaceType:t?"ng":"nx",json:(0,c.mG)(n.workspaceConfiguration),configurationFilePath:n.configPath,workspacePath:e}}catch(t){const n="Invalid workspace: "+e;d.window.showErrorMessage(n,"Show Error").then((e=>{e&&(0,c.g)().show()})),(0,c.g)().appendLine(n);const r=t.toString?t.toString():JSON.stringify(t);return(0,c.g)().appendLine(r),(0,c.c2)().exception(r),{validWorkspaceJson:!1,workspaceType:"nx",json:{npmScope:"@nx-console",projects:{},version:2},configurationFilePath:"",workspacePath:e}}}class j extends d.CodeLens{constructor(e,t,n,r,o){super(e),this.workspaceType=t,this.project=n,this.target=r,this.configuration=o}}class v extends d.CodeLens{constructor(e,t,n){super(e),this.project=t,this.projectPath=n}}class P{constructor(e){this.context=e,this.registerWorkspaceCodeLensProvider(e),this.watchWorkspaceCodeLensConfigChange(e)}async provideCodeLenses(e){const t=[];let n="";const{json:r}=await k();if(e.uri.path.endsWith("project.json"))for(const[t,o]of Object.entries(r.projects))if(e.uri.path.replace(/\\/g,"/").endsWith(`${o.root}/project.json`)){n=t;break}const s=o(e,n),{validWorkspaceJson:i,workspaceType:a}=await k();if(i){for(const n in s){const r=s[n];this.buildProjectLenses(r,e,t,n,u.Tl.instance.get("nxWorkspacePath","")),this.buildTargetLenses(r,e,t,a,n)}return t}}buildProjectLenses(e,t,n,r,o){if(!e.projectPath)return;const s=t.positionAt(e.position);n.push(new v(new d.Range(s,s),r,(0,c.S1)(o,e.projectPath)))}buildTargetLenses(e,t,n,r,o){const s=e.targets;for(const e in s){const i=t.positionAt(s[e].position);n.push(new j(new d.Range(i,i),r,o,e));const a=s[e].configurations;if(a)for(const s in a){const i=t.positionAt(a[s].position);n.push(new j(new d.Range(i,i),r,o,e,s))}}}resolveCodeLens(e){if(e instanceof j){const t={command:`${e.workspaceType}.run`,title:e.configuration?`${e.workspaceType} run ${e.project}:${e.target}:${e.configuration}`:`${e.workspaceType} run ${e.project}:${e.target}`,arguments:[e.project,e.target,e.configuration]};return e.command=t,e}if(e instanceof v){const t={command:"vscode.open",title:`Go to "${e.project}" configuration`,arguments:[d.Uri.file(e.projectPath)]};return e.command=t,e}return null}registerWorkspaceCodeLensProvider(e){u.BG.instance.get("enableWorkspaceConfigCodeLens")&&(this.codeLensProvider=d.languages.registerCodeLensProvider({pattern:"**/{workspace,angular,project}.json"},this),e.subscriptions.push(this.codeLensProvider))}watchWorkspaceCodeLensConfigChange(e){e.subscriptions.push(d.workspace.onDidChangeConfiguration((e=>{if(e.affectsConfiguration(u.BG.configurationSection)){const e=u.BG.instance.get("enableWorkspaceConfigCodeLens");e&&!this.codeLensProvider?this.registerWorkspaceCodeLensProvider(this.context):!e&&this.codeLensProvider&&(this.codeLensProvider.dispose(),this.codeLensProvider=null)}})))}}var b=n(73292);async function T(e){try{await(0,b.stat)((0,p.join)(e,"nx.json"))}catch(e){return{npmScope:"@ng"}}try{let t=(0,c.fh)("nx.json",e).json;if(!t){const n=(await m()).readNxJson((0,p.join)(e,"nx.json"));t=(0,c.fh)("nx.json",e,n).json}return t}catch(t){return(await(0,c.eP)("nx.json",e)).json}}},13411:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=13411,e.exports=t},35670:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=35670,e.exports=t},89496:e=>{"use strict";e.exports=require("vscode")},39491:e=>{"use strict";e.exports=require("assert")},14300:e=>{"use strict";e.exports=require("buffer")},32081:e=>{"use strict";e.exports=require("child_process")},22057:e=>{"use strict";e.exports=require("constants")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},57147:e=>{"use strict";e.exports=require("fs")},73292:e=>{"use strict";e.exports=require("fs/promises")},13685:e=>{"use strict";e.exports=require("http")},95687:e=>{"use strict";e.exports=require("https")},31405:e=>{"use strict";e.exports=require("inspector")},98188:e=>{"use strict";e.exports=require("module")},41808:e=>{"use strict";e.exports=require("net")},22037:e=>{"use strict";e.exports=require("os")},71017:e=>{"use strict";e.exports=require("path")},4074:e=>{"use strict";e.exports=require("perf_hooks")},85477:e=>{"use strict";e.exports=require("punycode")},63477:e=>{"use strict";e.exports=require("querystring")},14521:e=>{"use strict";e.exports=require("readline")},12781:e=>{"use strict";e.exports=require("stream")},24404:e=>{"use strict";e.exports=require("tls")},76224:e=>{"use strict";e.exports=require("tty")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},84655:e=>{"use strict";e.exports=require("v8")},59796:e=>{"use strict";e.exports=require("zlib")}},o={};function s(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={id:e,loaded:!1,exports:{}};return r[e].call(n.exports,n,n.exports,s),n.loaded=!0,n.exports}s.m=r,s.c=o,s.x=()=>{var e=s.O(void 0,[967],(()=>s(27288)));return s.O(e)},e=[],s.O=(t,n,r,o)=>{if(!n){var i=1/0;for(p=0;p<e.length;p++){for(var[n,r,o]=e[p],a=!0,c=0;c<n.length;c++)(!1&o||i>=o)&&Object.keys(s.O).every((e=>s.O[e](n[c])))?n.splice(c--,1):(a=!1,o<i&&(i=o));if(a){e.splice(p--,1);var u=r();void 0!==u&&(t=u)}}return t}o=o||0;for(var p=e.length;p>0&&e[p-1][2]>o;p--)e[p]=e[p-1];e[p]=[n,r,o]},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce(((t,n)=>(s.f[n](e,t),t)),[])),s.u=e=>e+".js",s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n={179:1},s.O.require=e=>n[e],s.f.require=(e,t)=>{n[e]||(e=>{var t=e.modules,r=e.ids,o=e.runtime;for(var i in t)s.o(t,i)&&(s.m[i]=t[i]);o&&o(s);for(var a=0;a<r.length;a++)n[r[a]]=1;s.O()})(require("./"+s.u(e)))},t=s.x,s.x=()=>(s.e(967),t());var i=s.x(),a=exports;for(var c in i)a[c]=i[c];i.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})();